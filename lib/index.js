(()=>{function j(t,e="Internal error."){if(t===void 0)throw new Error(e);return t}function re(t,e,n){if(t!==void 0&&t!==e)return t;throw new Error(n)}function Z(t,e="Internal error."){if(!t)throw new Error(e);return!0}function U(t){return Array.isArray(t)?t.map(e=>U(e)):t instanceof Date?new Date(t.getTime()):t&&typeof t=="object"?Object.getOwnPropertyNames(t).reduce((e,n)=>(Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n)),e[n]=U(t[n]),e),Object.create(Object.getPrototypeOf(t))):t}function Ee(t){let e=[];t.length===0&&e.push(0);let n=0;for(;n<t.length;){let y=t.charCodeAt(n);switch(!0){case y<128:e.push(y);break;case y<2048:e.push(192|y>>6),e.push(128|y&63);break;case y<55296:case y>57343:e.push(224|63&y>>12),e.push(128|63&y>>6),e.push(128|63&y);break;default:{let w=t.charCodeAt(n+1);if(isNaN(w))break;if((y&64512)==55296&&(w&64512)==56320){n++;let h=((y&1023)<<10)+(w&1023)+65536;e.push(240|63&h>>18),e.push(128|63&h>>12),e.push(128|63&h>>6),e.push(128|63&h)}}}n++}let r=(Math.floor((e.length-1)/8)+1)*8;return e.reverse(),e.map(y=>y.toString(16).padStart(2,"0")).join("").padStart(r*2,"0")}function Se(t,e){let n=[1,2,4,8,16,5,10,20,13,26,17,7,14,28,29,31,27,19,3,6,12,24,21,15,30,25,23,11,22,9,18,1],r=[0,0,1,18,2,5,19,11,3,29,6,27,20,8,12,23,4,10,30,17,7,22,28,26,21,25,9,16,13,14,24,15];function a(h,i){if(h===0||i===0)return 0;let p=(r[h]+r[i])%31;return n[p]}function y(h){let i=0;for(let p=1;p<5;p++){let d=0;for(let f=0;f<31;f++){if(f>12&&f<27)continue;let $=f;f>26&&($-=14),d^=a(h[$],n[p*f%31])}i|=d}return i===0}function w(){let h=[],i="23456789ABCDEFGHJKLMNPQRSTUVWXYZ",p=[3,2,1,0,7,6,5,4,13,14,15,16,12,8,9,10,11],d=t.replace(/[^23456789ABCDEFGHJKLMNPQRSTUVWXYZ]/g,"");if(d.split("").forEach(($,g)=>{let x=i.indexOf($);h[p[g]]=x}),d.length!==17||!y(h))throw new Error(`At line: ${e}. Error decoding address: S-${t}`);let f=h.slice(0,13).reduce(($,g,x)=>$+BigInt(g)*(1n<<5n*BigInt(x)),0n);if(f>=18446744073709551616n)throw new Error(`At line: ${e}. Error decoding address: S-${t}`);return f.toString(16).padStart(16,"0")}return w()}function Be(t){switch(t){case"void":case"long":case"fixed":case"struct":case"void_ptr":case"long_ptr":case"fixed_ptr":case"struct_ptr":return!0}return!1}function ce(t){let e=[{regex:/^\s*#\s*define\s+(\w+)\s*$/,type:"DEFINE_NULL"},{regex:/^\s*#\s*define\s+(\w+)\s*(\([^)]+\))\s*(\(.+\))\s*$/,type:"DEFINE_MACRO"},{regex:/^\s*#\s*define\s+(\w+\b)(.+)$/,type:"DEFINE_VAL"},{regex:/^\s*#\s*undef\s+(\w+)\s*$/,type:"UNDEF"},{regex:/^\s*#\s*ifdef\s+(\w+)\s*$/,type:"IFDEF"},{regex:/^\s*#\s*ifndef\s+(\w+)\s*$/,type:"IFNDEF"},{regex:/^\s*#\s*else\s*$/,type:"ELSE"},{regex:/^\s*#\s*endif\s*$/,type:"ENDIF"},{regex:/^[\s\S]*$/,type:"MATCHES_REMAINING"}],n=[{cname:"true",regex:/\btrue\b/,value:"1"},{cname:"false",regex:/\bfalse\b/,value:"0"},{cname:"NULL",regex:/\bNULL\b/,value:"0"},{cname:"SMARTC",regex:/\bSMARTC\b/,value:""}],r=[{active:!0,flipped:!1}],a=0;function y(){let f=t.split(`
`),g=w(f).map(d);if(r.length!==1)throw new Error("At line: EOF. Unmatched directive '#ifdef' or '#ifndef'.");if(r[0].flipped===!0)throw new Error("At line: EOF. Unmatched directives '#else'.");if(f.length!==g.length)throw new Error("Internal error at preprocessor");return g.join(`
`)}function w(f){let $=[],g=0;return f.forEach((x,u)=>{x.endsWith("\\")?g===0?(g=1,$.push(x.slice(0,-1))):($[$.length-1]+=x.slice(0,-1),g++):g!==0?($[$.length-1]+=x,$.push(...Array(g).fill("")),g=0):$.push(x)}),g>1&&$.push(...Array(g-1).fill("")),$}function h(f){for(let $ of e){let g=$.regex.exec(f);if(g!==null)return{Code:$,parts:g}}throw new Error("Internal error.")}function i(f,$){let g=f;return n.forEach(x=>{if(x.macro)for(;;){let u=x.regex.exec(g);if(u===null)return;let _=x.macro,b=p(g,u.index+1,$),s=p(x.value,0,$);if(s.argArray.length!==b.argArray.length)throw new Error(`At line: ${$+1}. Wrong number of arguments for macro '${x.cname}'. Expected ${s.argArray.length}, got ${b.argArray.length}.`);for(let l=0;l<s.argArray.length;l++)_=_.replace(new RegExp(`\\b${s.argArray[l]}\\b`,"g"),b.argArray[l]);g=g.slice(0,u.index)+_+g.slice(b.endPosition)}g=g.replace(x.regex,x.value)}),g}function p(f,$,g){let x=[],u="",_=0,b=!1;for(;;$++){let s=f.charAt($);if(s==="")throw new Error(`At line: ${g+1}. Unmatched parenthesis or unexpected end of line.`);if(s==="("&&(_++,_===1)){b=!0;continue}if(!!b){if(s===")"&&(_--,_===0)){x.push(u.trim());break}if(s===","&&_===1){x.push(u.trim()),u="";continue}u+=s}}return{argArray:x,endPosition:$+1}}function d(f,$){let g=h(f),x={active:!0,flipped:!1},u;if(a<0)throw new Error(`At line: ${$+1}. Unmatched '#endif' directive.`);re(r.length,0,"Internal error");let _=r[r.length-1],b=r[a].active;switch(g.Code.type){case"IFDEF":return a+=b?1:0,u=n.findIndex(s=>s.cname===g.parts[1]),u===-1&&(x.active=!1),r.push(x),"";case"IFNDEF":return a+=b?1:0,u=n.findIndex(s=>s.cname===g.parts[1]),u!==-1&&(x.active=!1),r.push(x),"";case"ELSE":if(_.flipped===!0)throw new Error(`At line: ${$+1}. Unmatched '#else' directive.`);return _.flipped=!0,_.active=!_.active,"";case"ENDIF":return r.length-1===a&&a--,r.pop(),""}if(b===!1)return"";switch(g.Code.type){case"DEFINE_NULL":return u=n.findIndex(s=>s.cname===g.parts[1]),u===-1?(n.push({cname:g.parts[1],regex:new RegExp("\\b"+g.parts[1]+"\\b","g"),value:""}),""):(n[u].value="","");case"DEFINE_VAL":return u=n.findIndex(s=>s.cname===g.parts[1]),u===-1?(n.push({cname:g.parts[1],regex:new RegExp("\\b"+g.parts[1]+"\\b","g"),value:i(g.parts[2],$).trim()}),""):(n[u].value=i(g.parts[2],$).trim(),"");case"DEFINE_MACRO":if(u=n.findIndex(s=>s.cname===g.parts[1]),u!==-1)throw new Error(`At line: ${$+1}. Cannot redefine macro '${g.parts[1]}'.`);return n.push({cname:g.parts[1],regex:new RegExp(`\\b${g.parts[1]}\\s*\\(`,"g"),value:i(g.parts[2],$),macro:i(g.parts[3],$)}),"";case"UNDEF":return n=n.filter(s=>s.cname!==g.parts[1]),"";case"MATCHES_REMAINING":return i(f,$);default:throw new Error("Internal error.")}}return y()}function de(t){let e=[{char:"=",pretokenType:"equal"},{char:"*",pretokenType:"star"},{char:"!",pretokenType:"not"},{char:"[",pretokenType:"bracket"},{char:"]",pretokenType:"bracket"},{char:"-",pretokenType:"minus"},{char:"+",pretokenType:"plus"},{char:"\\",pretokenType:"backslash"},{char:"/",pretokenType:"forwardslash"},{char:".",pretokenType:"dot"},{char:"<",pretokenType:"less"},{char:">",pretokenType:"greater"},{char:"|",pretokenType:"pipe"},{char:"&",pretokenType:"and"},{char:"%",pretokenType:"percent"},{char:"^",pretokenType:"caret"},{char:",",pretokenType:"comma"},{char:";",pretokenType:"semi"},{char:"~",pretokenType:"tilde"},{char:"`",pretokenType:"grave"},{char:"(",pretokenType:"paren"},{char:")",pretokenType:"paren"},{char:":",pretokenType:"colon"},{char:"{",pretokenType:"curly"},{char:"}",pretokenType:"curly"},{char:"#",pretokenType:"SPECIAL"}],n=[{start:/^(\/\/.*)/,pretokenType:"NONE",addLength:0},{start:/^(\s+)/,pretokenType:"NONE",addLength:0},{start:/(^\d[\d_.]*\b|^\.[\d_]+\b)/,pretokenType:"numberDec",addLength:0},{start:/^0[xX]([\da-fA-F][\da-fA-F_]*\b)/,pretokenType:"numberHex",addLength:2},{start:/^(break|case|const|continue|default|do|else|exit|fixed|for|goto|halt|if|long|return|sleep|sizeof|switch|void|while)\b/,pretokenType:"keyword",addLength:0},{start:/^(asm)/,pretokenType:"ASM",addLength:0},{start:/^(struct)/,pretokenType:"STRUCT",addLength:0},{start:/^(\w+)/,pretokenType:"variable",addLength:0}],r=[{start:/^\/\*/,end:/^([\s\S]*?\*\/)/,pretokenType:"NONE",startLength:2,removeTrailing:0,errorMsg:"Missing '*/' to end comment section."},{start:/^"/,end:/^([\s\S]*?")/,pretokenType:"string",startLength:1,removeTrailing:1,errorMsg:`Missing '"' to end string.`},{start:/^'/,end:/^([\s\S]*?')/,pretokenType:"string",startLength:1,removeTrailing:1,errorMsg:`Missing "'" to end string.`}],a={currentChar:"",remainingText:"",current:0,preTokens:[],currentLine:1};function y(){for(;a.current<t.length;)if(a.currentChar=t.charAt(a.current),a.remainingText=t.slice(a.current),!r.find(w)&&!n.find(h)&&!e.find(i))throw new Error(`At line: ${a.currentLine}. Forbidden character found: '${a.currentChar}'.`);return a.preTokens}function w(p){if(p.start.exec(a.remainingText)===null)return!1;let f=p.end.exec(a.remainingText.slice(p.startLength));if(a.current+=p.startLength,f===null)throw new Error(`At line: ${a.currentLine}. ${p.errorMsg}`);return p.pretokenType==="NONE"?(a.currentLine+=(f[1].match(/\n/g)||"").length,a.current+=f[1].length,!0):(a.preTokens.push({type:p.pretokenType,value:f[1].slice(0,-p.removeTrailing),line:a.currentLine}),a.currentLine+=(f[1].match(/\n/g)||"").length,a.current+=f[1].length,!0)}function h(p){let d=p.start.exec(a.remainingText);if(d===null)return!1;switch(p.pretokenType){case"NONE":return a.currentLine+=(d[1].match(/\n/g)||"").length,a.current+=d[1].length+p.addLength,!0;case"ASM":{let f=/^(asm[^\w]*\{)([\s\S]*)/.exec(a.remainingText);if(f===null)throw new Error(`At line: ${a.currentLine}. Error parsing 'asm { ... }' keyword`);let $=f[2].indexOf("}");if($===-1)throw new Error(`At line: ${a.currentLine}. Ending '}' not found for 'asm { ... }' keyword.`);let g=f[2].slice(0,$),x=f[1]+g+"}";return a.preTokens.push({type:"keyword",value:"asm",line:a.currentLine,extValue:g}),a.currentLine+=(x.match(/\n/g)||"").length,a.current+=x.length,!0}case"STRUCT":{let f=/^(struct\s+(\w+))/.exec(a.remainingText);if(f===null)throw new Error(`At line: ${a.currentLine}. 'struct' keyword must be followed by a type name`);return a.preTokens.push({type:"keyword",value:"struct",line:a.currentLine,extValue:f[2]}),a.currentLine+=(f[1].match(/\n/g)||"").length,a.current+=f[1].length,!0}default:return a.preTokens.push({type:p.pretokenType,value:d[1],line:a.currentLine}),a.currentLine+=(d[1].match(/\n/g)||"").length,a.current+=d[1].length+p.addLength,!0}}function i(p){if(p.char!==a.currentChar)return!1;if(p.pretokenType==="SPECIAL"){Z(p.char==="#","Internal error at tokenizer."),a.current++;let d=t.slice(a.current).split(`
`)[0];return a.current+=d.length+1,a.currentLine++,a.preTokens.push({type:"macro",value:d,line:a.currentLine-1}),!0}return a.preTokens.push({type:p.pretokenType,value:a.currentChar,line:a.currentLine}),a.current++,!0}return y()}function me(t){let e=[{sequence:["tilde"],action(i){return{type:"UnaryOperator",precedence:2,value:"~",line:t[i].line}}},{sequence:["semi"],action(i){return{type:"Terminator",precedence:12,value:";",line:t[i].line}}},{sequence:["comma"],action(i){return{type:"Delimiter",precedence:11,value:",",line:t[i].line}}},{sequence:["colon"],action(i){return{type:"Colon",precedence:0,value:":",line:t[i].line}}},{sequence:["dot"],action(i){return{type:"Member",precedence:0,value:".",line:t[i].line}}},{sequence:["macro"],action(i){return{type:"Macro",precedence:0,value:t[i].value,line:t[i].line}}},{sequence:["keyword"],action(i){let p={type:"Keyword",precedence:12,value:t[i].value,line:t[i].line};return(t[i].value==="asm"||t[i].value==="struct")&&(p.extValue=t[i].extValue),t[i].value==="sizeof"&&(p.precedence=2),p}},{sequence:["numberDec"],action(i){let p=t[i];p.value=p.value.replace(/_/g,"");let d=0n,f="long";if(p.value.includes(".")){let x=p.value.split(".");if(x.length!==2)throw new Error(`At line ${p.line}.  Found more than one decimal point in number.`);if(x[1].length>8)throw new Error(`At line ${p.line}. Fixed numbers cannot have more than 8 digits as decimal fraction.`);d=BigInt(x[0])*100000000n+BigInt(x[1].padEnd(8,"0")),f="fixed"}else d=BigInt(p.value);let $=d.toString(16),g=$.padStart((Math.floor(($.length-1)/16)+1)*16,"0");return{type:"Constant",precedence:0,value:g,line:p.line,extValue:f}}},{sequence:["numberHex"],action(i){let p=t[i],d=p.value.replace(/_/g,"").toLowerCase();return d=d.padStart((Math.floor((d.length-1)/16)+1)*16,"0"),{type:"Constant",precedence:0,value:d,line:p.line}}},{sequence:["string"],action(i){let p=t[i],d=Ee(p.value),f=/^(BURST-|S-|TS-)([0-9A-Z]{4}-[0-9A-Z]{4}-[0-9A-Z]{4}-[0-9A-Z]{5})/.exec(p.value);return f!==null&&(d=Se(f[2],p.line)),{type:"Constant",precedence:0,value:d,line:p.line}}},{sequence:["equal","equal"],action(i){return{type:"Comparision",precedence:6,value:"==",line:t[i].line}}},{sequence:["equal"],action(i){return{type:"Assignment",precedence:10,value:"=",line:t[i].line}}},{sequence:["not","equal"],action(i){return{type:"Comparision",precedence:6,value:"!=",line:t[i].line}}},{sequence:["not"],action(i){return{type:"UnaryOperator",precedence:2,value:"!",line:t[i].line}}},{sequence:["forwardslash","equal"],action(i){return{type:"SetOperator",precedence:10,value:"/=",line:t[i].line}}},{sequence:["forwardslash"],action(i){return{type:"Operator",precedence:3,value:"/",line:t[i].line}}},{sequence:["percent","equal"],action(i){return{type:"SetOperator",precedence:10,value:"%=",line:t[i].line}}},{sequence:["percent"],action(i){return{type:"Operator",precedence:3,value:"%",line:t[i].line}}},{sequence:["less","less","equal"],action(i){return{type:"SetOperator",precedence:10,value:"<<=",line:t[i].line}}},{sequence:["less","less"],action(i){return{type:"Operator",precedence:5,value:"<<",line:t[i].line}}},{sequence:["less","equal"],action(i){return{type:"Comparision",precedence:6,value:"<=",line:t[i].line}}},{sequence:["less"],action(i){return{type:"Comparision",precedence:6,value:"<",line:t[i].line}}},{sequence:["pipe","pipe"],action(i){return{type:"Comparision",precedence:9,value:"||",line:t[i].line}}},{sequence:["pipe","equal"],action(i){return{type:"SetOperator",precedence:10,value:"|=",line:t[i].line}}},{sequence:["pipe"],action(i){return{type:"Operator",precedence:7,value:"|",line:t[i].line}}},{sequence:["greater","equal"],action(i){return{type:"Comparision",precedence:6,value:">=",line:t[i].line}}},{sequence:["greater","greater","equal"],action(i){return{type:"SetOperator",precedence:10,value:">>=",line:t[i].line}}},{sequence:["greater","greater"],action(i){return{type:"Operator",precedence:5,value:">>",line:t[i].line}}},{sequence:["greater"],action(i){return{type:"Comparision",precedence:6,value:">",line:t[i].line}}},{sequence:["caret","equal"],action(i){return{type:"SetOperator",precedence:10,value:"^=",line:t[i].line}}},{sequence:["caret"],action(i){return{type:"Operator",precedence:7,value:"^",line:t[i].line}}},{sequence:["variable"],action(i){return{type:"Variable",precedence:0,value:t[i].value,line:t[i].line}}},{sequence:["star","equal"],action(i){return{type:"SetOperator",precedence:10,value:"*=",line:t[i].line}}},{sequence:["star"],action(i){return h(i)?{type:"Operator",precedence:3,value:"*",line:t[i].line}:{type:"UnaryOperator",precedence:2,value:"*",line:t[i].line}}},{sequence:["plus","equal"],action(i){return{type:"SetOperator",precedence:10,value:"+=",line:t[i].line}}},{sequence:["plus","plus"],action(i){return{type:"SetUnaryOperator",precedence:1,value:"++",line:t[i].line}}},{sequence:["plus"],action(i){return h(i)?{type:"Operator",precedence:4,value:"+",line:t[i].line}:{type:"UnaryOperator",precedence:2,value:"+",line:t[i].line}}},{sequence:["minus","minus"],action(i){return{type:"SetUnaryOperator",precedence:1,value:"--",line:t[i].line}}},{sequence:["minus","equal"],action(i){return{type:"SetOperator",precedence:10,value:"-=",line:t[i].line}}},{sequence:["minus","greater"],action(i){return{type:"Member",precedence:0,value:"->",line:t[i].line}}},{sequence:["minus"],action(i){return h(i)?{type:"Operator",precedence:4,value:"-",line:t[i].line}:{type:"UnaryOperator",precedence:2,value:"-",line:t[i].line}}},{sequence:["and","and"],action(i){return{type:"Comparision",precedence:8,value:"&&",line:t[i].line}}},{sequence:["and","equal"],action(i){return{type:"SetOperator",precedence:10,value:"&=",line:t[i].line}}},{sequence:["and"],action(i){return h(i)?{type:"Operator",precedence:7,value:"&",line:t[i].line}:{type:"UnaryOperator",precedence:2,value:"&",line:t[i].line}}}],n={mainLoopIndex:0};function r(){let i=[];for(;n.mainLoopIndex<t.length;)i.push(a());return i}function a(){let i=t[n.mainLoopIndex],p,d=e.find(w);if(d!==void 0)return p=d.action(n.mainLoopIndex),n.mainLoopIndex+=d.sequence.length,p;switch(i.value){case"]":case")":case"}":throw new Error(`At line: ${i.line}. Unexpected closing '${i.value}'.`);case"[":return p={type:"Arr",value:"",precedence:0,line:i.line},n.mainLoopIndex++,p.params=y("]",p.type,p.line),p;case"(":return n.mainLoopIndex>0&&t[n.mainLoopIndex-1].type==="variable"?p={type:"Function",value:"",precedence:0,line:i.line}:p={type:"CodeCave",value:"",precedence:0,line:i.line},n.mainLoopIndex++,p.params=y(")",p.type,p.line),p;case"{":return p={type:"CodeDomain",value:"",precedence:0,line:i.line},n.mainLoopIndex++,p.params=y("}",p.type,p.line),p;default:throw new Error(`At line: ${i.line}. Unexpected token '${i.value}' - type: '${i.type}'.`)}}function y(i,p,d){let f=[];if(n.mainLoopIndex>=t.length)throw new Error(`At line: end of file. Missing closing '${i}' for for '${p}' started at line: ${d}.`);for(;t[n.mainLoopIndex].value!==i;)if(f.push(a()),n.mainLoopIndex>=t.length)throw new Error(`At line: end of file. Missing closing '${i}' for for '${p}' started at line: ${d}.`);return n.mainLoopIndex++,f}function w(i){for(let p=0;p<i.sequence.length;p++)if(t[n.mainLoopIndex+p]?.type!==i.sequence[p])return!1;return!0}function h(i){return i>=2&&(t[i-1].type==="plus"&&t[i-2].type==="plus"||t[i-1].type==="minus"&&t[i-2].type==="minus")||i>=1&&(t[i-1].type==="variable"||t[i-1].type==="numberDec"||t[i-1].type==="numberHex"||t[i-1].type==="string"||t[i-1].value==="]"||t[i-1].value===")")}return r()}function ee(t){let e;switch(t){case"register":e={type:"register",name:"",MemoryTemplate:W("register")},e.MemoryTemplate.declaration="long",e.MemoryTemplate.size=1,e.MemoryTemplate.isDeclared=!0;break;case"long":case"void":e={type:"long",name:"",MemoryTemplate:W("long")},e.MemoryTemplate.declaration="long",e.MemoryTemplate.size=1;break;case"fixed":e={type:"fixed",name:"",MemoryTemplate:W("fixed")},e.MemoryTemplate.declaration="fixed",e.MemoryTemplate.size=1;break;case"struct":e={name:"",type:"struct",structMembers:[],structAccumulatedSize:[],MemoryTemplate:W("struct")},e.MemoryTemplate.typeDefinition="",e.MemoryTemplate.declaration="struct";break;default:throw new Error("Internal error")}return e}var Ie=[{argsMemObj:[{address:-1,name:"addr1",asmName:"pow_addr1",type:"long",scope:"pow",declaration:"long",size:1,isDeclared:!0},{address:-1,name:"addr2",asmName:"pow_addr2",type:"long",scope:"pow",declaration:"long",size:1,isDeclared:!0}],asmName:"pow",declaration:"long",sentences:[],name:"pow"},{argsMemObj:[{address:-1,name:"addr1",asmName:"mdv_addr1",type:"long",scope:"mdf",declaration:"long",size:1,isDeclared:!0},{address:-1,name:"addr2",asmName:"mdv_addr2",type:"long",scope:"mdv",declaration:"long",size:1,isDeclared:!0},{address:-1,name:"addr3",asmName:"mdv_addr3",type:"long",scope:"mdv",declaration:"long",size:1,isDeclared:!0}],asmName:"mdv",declaration:"long",sentences:[],name:"mdv"},{argsMemObj:[{address:-1,name:"addr1",asmName:"powf_addr1",type:"long",scope:"powf",declaration:"long",size:1,isDeclared:!0},{address:-1,name:"addr2",asmName:"powf_addr2",type:"fixed",scope:"powf",declaration:"fixed",size:1,isDeclared:!0}],asmName:"powf",declaration:"long",sentences:[],name:"powf"},{argsMemObj:[{address:-1,name:"addr1",asmName:"memcopy_addr1",type:"long",scope:"memcopy",declaration:"void_ptr",size:1,isDeclared:!0},{address:-1,name:"addr2",asmName:"memcopy_addr2",type:"long",scope:"memcopy",declaration:"void_ptr",size:1,isDeclared:!0}],asmName:"memcopy",declaration:"void",sentences:[],name:"memcopy"}];function W(t){return{type:t,asmName:"",isDeclared:!1,declaration:"",address:-1,name:"",scope:"",size:-1}}var Fe={address:-1,asmName:"f100000000",declaration:"fixed",isDeclared:!1,name:"f100000000",hexContent:"0000000005f5e100",scope:"",size:1,type:"fixed"},je=[{argsMemObj:[],asmName:"get_A1",declaration:"long",sentences:[],name:"Get_A1"},{argsMemObj:[],asmName:"get_A2",declaration:"long",sentences:[],name:"Get_A2"},{argsMemObj:[],asmName:"get_A3",declaration:"long",sentences:[],name:"Get_A3"},{argsMemObj:[],asmName:"get_A4",declaration:"long",sentences:[],name:"Get_A4"},{argsMemObj:[],asmName:"get_B1",declaration:"long",sentences:[],name:"Get_B1"},{argsMemObj:[],asmName:"get_B2",declaration:"long",sentences:[],name:"Get_B2"},{argsMemObj:[],asmName:"get_B3",declaration:"long",sentences:[],name:"Get_B3"},{argsMemObj:[],asmName:"get_B4",declaration:"long",sentences:[],name:"Get_B4"},{argsMemObj:[{address:-1,name:"addr",asmName:"Set_A1_addr",type:"long",scope:"Set_A1",declaration:"long",size:1,isDeclared:!0}],asmName:"set_A1",declaration:"void",sentences:[],name:"Set_A1"},{argsMemObj:[{address:-1,name:"addr",asmName:"Set_A2_addr",type:"long",scope:"Set_A2",declaration:"long",size:1,isDeclared:!0}],asmName:"set_A2",declaration:"void",sentences:[],name:"Set_A2"},{argsMemObj:[{address:-1,name:"addr",asmName:"Set_A3_addr",type:"long",scope:"Set_A3",declaration:"long",size:1,isDeclared:!0}],asmName:"set_A3",declaration:"void",sentences:[],name:"Set_A3"},{argsMemObj:[{address:-1,name:"addr",asmName:"Set_A4_addr",type:"long",scope:"Set_A4",declaration:"long",size:1,isDeclared:!0}],asmName:"set_A4",declaration:"void",sentences:[],name:"Set_A4"},{argsMemObj:[{address:-1,name:"addr1",asmName:"Set_A1_A2_addr1",type:"long",scope:"Set_A1_A2",declaration:"long",size:1,isDeclared:!0},{address:-1,name:"addr2",asmName:"Set_A1_A2_addr2",type:"long",scope:"Set_A1_A2",declaration:"long",size:1,isDeclared:!0}],asmName:"set_A1_A2",declaration:"void",sentences:[],name:"Set_A1_A2"},{argsMemObj:[{address:-1,name:"addr1",asmName:"Set_A3_A4_addr1",type:"long",scope:"Set_A3_A4",declaration:"long",size:1,isDeclared:!0},{address:-1,name:"addr2",asmName:"Set_A3_A4_addr2",type:"long",scope:"Set_A3_A4",declaration:"long",size:1,isDeclared:!0}],asmName:"set_A3_A4",declaration:"void",sentences:[],name:"Set_A3_A4"},{argsMemObj:[{address:-1,name:"addr",asmName:"Set_B1_addr",type:"long",scope:"Set_B1",declaration:"long",size:1,isDeclared:!0}],asmName:"set_B1",declaration:"void",sentences:[],name:"Set_B1"},{argsMemObj:[{address:-1,name:"addr",asmName:"Set_B2_addr",type:"long",scope:"Set_B2",declaration:"long",size:1,isDeclared:!0}],asmName:"set_B2",declaration:"void",sentences:[],name:"Set_B2"},{argsMemObj:[{address:-1,name:"addr",asmName:"Set_B3_addr",type:"long",scope:"Set_B3",declaration:"long",size:1,isDeclared:!0}],asmName:"set_B3",declaration:"void",sentences:[],name:"Set_B3"},{argsMemObj:[{address:-1,name:"addr",asmName:"Set_B4_addr",type:"long",scope:"Set_B4",declaration:"long",size:1,isDeclared:!0}],asmName:"set_B4",declaration:"void",sentences:[],name:"Set_B4"},{argsMemObj:[{address:-1,name:"addr1",asmName:"Set_B1_B2_addr1",type:"long",scope:"Set_B1_B2",declaration:"long",size:1,isDeclared:!0},{address:-1,name:"addr2",asmName:"Set_B1_B2_addr2",type:"long",scope:"Set_B1_B2",declaration:"long",size:1,isDeclared:!0}],asmName:"set_B1_B2",declaration:"void",sentences:[],name:"Set_B1_B2"},{argsMemObj:[{address:-1,name:"addr1",asmName:"Set_B3_B4_addr1",type:"long",scope:"Set_B3_B4",declaration:"long",size:1,isDeclared:!0},{address:-1,name:"addr2",asmName:"Set_B3_B4_addr2",type:"long",scope:"Set_B3_B4",declaration:"long",size:1,isDeclared:!0}],asmName:"set_B3_B4",declaration:"void",sentences:[],name:"Set_B3_B4"},{argsMemObj:[],asmName:"clear_A",declaration:"void",sentences:[],name:"Clear_A"},{argsMemObj:[],asmName:"clear_B",declaration:"void",sentences:[],name:"Clear_B"},{argsMemObj:[],asmName:"clear_A_B",declaration:"void",sentences:[],name:"Clear_A_And_B"},{argsMemObj:[],asmName:"copy_A_From_B",declaration:"void",sentences:[],name:"Copy_A_From_B"},{argsMemObj:[],asmName:"copy_B_From_A",declaration:"void",sentences:[],name:"Copy_B_From_A"},{argsMemObj:[],asmName:"check_A_Is_Zero",declaration:"long",sentences:[],name:"Check_A_Is_Zero"},{argsMemObj:[],asmName:"check_B_Is_Zero",declaration:"long",sentences:[],name:"Check_B_Is_Zero"},{argsMemObj:[],asmName:"check_A_equals_B",declaration:"long",sentences:[],name:"Check_A_Equals_B"},{argsMemObj:[],asmName:"swap_A_and_B",declaration:"void",sentences:[],name:"Swap_A_and_B"},{argsMemObj:[],asmName:"OR_A_with_B",declaration:"void",sentences:[],name:"OR_A_with_B"},{argsMemObj:[],asmName:"OR_B_with_A",declaration:"void",sentences:[],name:"OR_B_with_A"},{argsMemObj:[],asmName:"AND_A_with_B",declaration:"void",sentences:[],name:"AND_A_with_B"},{argsMemObj:[],asmName:"AND_B_with_A",declaration:"void",sentences:[],name:"AND_B_with_A"},{argsMemObj:[],asmName:"XOR_A_with_B",declaration:"void",sentences:[],name:"XOR_A_with_B"},{argsMemObj:[],asmName:"XOR_B_with_A",declaration:"void",sentences:[],name:"XOR_B_with_A"},{argsMemObj:[],asmName:"add_A_to_B",declaration:"void",sentences:[],name:"Add_A_To_B"},{argsMemObj:[],asmName:"add_B_to_A",declaration:"void",sentences:[],name:"Add_B_To_A"},{argsMemObj:[],asmName:"sub_A_from_B",declaration:"void",sentences:[],name:"Sub_A_From_B"},{argsMemObj:[],asmName:"sub_B_from_A",declaration:"void",sentences:[],name:"Sub_B_From_A"},{argsMemObj:[],asmName:"mul_A_by_B",declaration:"void",sentences:[],name:"Mul_A_By_B"},{argsMemObj:[],asmName:"mul_B_by_A",declaration:"void",sentences:[],name:"Mul_B_By_A"},{argsMemObj:[],asmName:"div_A_by_B",declaration:"void",sentences:[],name:"Div_A_By_B"},{argsMemObj:[],asmName:"div_B_by_A",declaration:"void",sentences:[],name:"Div_B_By_A"},{argsMemObj:[],asmName:"MD5_A_to_B",declaration:"void",sentences:[],name:"MD5_A_To_B"},{argsMemObj:[],asmName:"check_MD5_A_with_B",declaration:"long",sentences:[],name:"Check_MD5_A_With_B"},{argsMemObj:[],asmName:"HASH160_A_to_B",declaration:"void",sentences:[],name:"HASH160_A_To_B"},{argsMemObj:[],asmName:"check_HASH160_A_with_B",declaration:"long",sentences:[],name:"Check_HASH160_A_With_B"},{argsMemObj:[],asmName:"SHA256_A_to_B",declaration:"void",sentences:[],name:"SHA256_A_To_B"},{argsMemObj:[],asmName:"check_SHA256_A_with_B",declaration:"long",sentences:[],name:"Check_SHA256_A_With_B"},{argsMemObj:[],asmName:"get_Block_Timestamp",declaration:"long",sentences:[],name:"Get_Block_Timestamp"},{argsMemObj:[],asmName:"get_Creation_Timestamp",declaration:"long",sentences:[],name:"Get_Creation_Timestamp"},{argsMemObj:[],asmName:"get_Last_Block_Timestamp",declaration:"long",sentences:[],name:"Get_Last_Block_Timestamp"},{argsMemObj:[],asmName:"put_Last_Block_Hash_In_A",declaration:"void",sentences:[],name:"Put_Last_Block_Hash_In_A"},{argsMemObj:[{address:-1,name:"addr",asmName:"A_To_Tx_After_Timestamp_addr",type:"long",scope:"A_To_Tx_After_Timestamp",declaration:"long",size:1,isDeclared:!0}],asmName:"A_to_Tx_after_Timestamp",declaration:"void",sentences:[],name:"A_To_Tx_After_Timestamp"},{argsMemObj:[],asmName:"get_Type_for_Tx_in_A",declaration:"long",sentences:[],name:"Get_Type_For_Tx_In_A"},{argsMemObj:[],asmName:"get_Amount_for_Tx_in_A",declaration:"long",sentences:[],name:"Get_Amount_For_Tx_In_A"},{argsMemObj:[],asmName:"get_Timestamp_for_Tx_in_A",declaration:"long",sentences:[],name:"Get_Timestamp_For_Tx_In_A"},{argsMemObj:[],asmName:"get_Ticket_Id_for_Tx_in_A",declaration:"long",sentences:[],name:"Get_Random_Id_For_Tx_In_A"},{argsMemObj:[],asmName:"message_from_Tx_in_A_to_B",declaration:"void",sentences:[],name:"Message_From_Tx_In_A_To_B"},{argsMemObj:[],asmName:"B_to_Address_of_Tx_in_A",declaration:"void",sentences:[],name:"B_To_Address_Of_Tx_In_A"},{argsMemObj:[],asmName:"B_to_Address_of_Creator",declaration:"void",sentences:[],name:"B_To_Address_Of_Creator"},{argsMemObj:[],asmName:"get_Current_Balance",declaration:"long",sentences:[],name:"Get_Current_Balance"},{argsMemObj:[],asmName:"get_Previous_Balance",declaration:"long",sentences:[],name:"Get_Previous_Balance"},{argsMemObj:[{address:-1,name:"addr",asmName:"Send_To_Address_In_B_addr",type:"long",scope:"Send_To_Address_In_B",declaration:"long",size:1,isDeclared:!0}],asmName:"send_to_Address_in_B",declaration:"void",sentences:[],name:"Send_To_Address_In_B"},{argsMemObj:[],asmName:"send_All_to_Address_in_B",declaration:"void",sentences:[],name:"Send_All_To_Address_In_B"},{argsMemObj:[],asmName:"send_Old_to_Address_in_B",declaration:"void",sentences:[],name:"Send_Old_To_Address_In_B"},{argsMemObj:[],asmName:"send_A_to_Address_in_B",declaration:"void",sentences:[],name:"Send_A_To_Address_In_B"},{argsMemObj:[{address:-1,name:"addr2",asmName:"Add_Minutes_To_Timestamp_addr2",type:"long",scope:"Add_Minutes_To_Timestamp",declaration:"long",size:1,isDeclared:!0},{address:-1,name:"addr3",asmName:"Add_Minutes_To_Timestamp_addr3",type:"long",scope:"Add_Minutes_To_Timestamp",declaration:"long",size:1,isDeclared:!0}],asmName:"add_Minutes_to_Timestamp",declaration:"long",sentences:[],name:"Add_Minutes_To_Timestamp"},{argsMemObj:[],asmName:"Check_Sig_B_With_A",declaration:"long",sentences:[],name:"Check_Sig_B_With_A"},{argsMemObj:[],asmName:"Get_Code_Hash_Id",declaration:"long",sentences:[],name:"Get_Code_Hash_Id"},{argsMemObj:[],asmName:"B_To_Assets_Of_Tx_In_A",declaration:"void",sentences:[],name:"B_To_Assets_Of_Tx_In_A"},{argsMemObj:[],asmName:"Get_Map_Value_Keys_In_A",declaration:"long",sentences:[],name:"Get_Map_Value_Keys_In_A"},{argsMemObj:[],asmName:"Set_Map_Value_Keys_In_A",declaration:"void",sentences:[],name:"Set_Map_Value_Keys_In_A"},{argsMemObj:[],asmName:"Issue_Asset",declaration:"long",sentences:[],name:"Issue_Asset"},{argsMemObj:[],asmName:"Mint_Asset",declaration:"void",sentences:[],name:"Mint_Asset"},{argsMemObj:[],asmName:"Distribute_To_Asset_Holders",declaration:"void",sentences:[],name:"Distribute_To_Asset_Holders"},{argsMemObj:[],asmName:"Get_Asset_Holders_Count",declaration:"long",sentences:[],name:"Get_Asset_Holders_Count"},{argsMemObj:[],asmName:"Get_Activation_Fee",declaration:"long",sentences:[],name:"Get_Activation_Fee"},{argsMemObj:[],asmName:"Put_Last_Block_GSig_In_A",declaration:"void",sentences:[],name:"Put_Last_Block_GSig_In_A"},{argsMemObj:[],asmName:"Get_Asset_Circulating",declaration:"long",sentences:[],name:"Get_Asset_Circulating"}],Le=[{argsMemObj:[],asmName:"get_A1",declaration:"fixed",sentences:[],name:"F_Get_A1"},{argsMemObj:[],asmName:"get_A2",declaration:"fixed",sentences:[],name:"F_Get_A2"},{argsMemObj:[],asmName:"get_A3",declaration:"fixed",sentences:[],name:"F_Get_A3"},{argsMemObj:[],asmName:"get_A4",declaration:"fixed",sentences:[],name:"F_Get_A4"},{argsMemObj:[],asmName:"get_B1",declaration:"fixed",sentences:[],name:"F_Get_B1"},{argsMemObj:[],asmName:"get_B2",declaration:"fixed",sentences:[],name:"F_Get_B2"},{argsMemObj:[],asmName:"get_B3",declaration:"fixed",sentences:[],name:"F_Get_B3"},{argsMemObj:[],asmName:"get_B4",declaration:"fixed",sentences:[],name:"F_Get_B4"},{argsMemObj:[{address:-1,name:"addr",asmName:"F_Set_A1_addr",type:"fixed",scope:"F_Set_A1",declaration:"fixed",size:1,isDeclared:!0}],asmName:"set_A1",declaration:"void",sentences:[],name:"F_Set_A1"},{argsMemObj:[{address:-1,name:"addr",asmName:"F_Set_A2_addr",type:"fixed",scope:"F_Set_A2",declaration:"fixed",size:1,isDeclared:!0}],asmName:"set_A2",declaration:"void",sentences:[],name:"F_Set_A2"},{argsMemObj:[{address:-1,name:"addr",asmName:"F_Set_A3_addr",type:"fixed",scope:"F_Set_A3",declaration:"fixed",size:1,isDeclared:!0}],asmName:"set_A3",declaration:"void",sentences:[],name:"F_Set_A3"},{argsMemObj:[{address:-1,name:"addr",asmName:"F_Set_A4_addr",type:"fixed",scope:"F_Set_A4",declaration:"fixed",size:1,isDeclared:!0}],asmName:"set_A4",declaration:"void",sentences:[],name:"F_Set_A4"},{argsMemObj:[{address:-1,name:"addr",asmName:"F_Set_B1_addr",type:"fixed",scope:"F_Set_B1",declaration:"fixed",size:1,isDeclared:!0}],asmName:"set_B1",declaration:"void",sentences:[],name:"F_Set_B1"},{argsMemObj:[{address:-1,name:"addr",asmName:"F_Set_B2_addr",type:"fixed",scope:"F_Set_B2",declaration:"fixed",size:1,isDeclared:!0}],asmName:"set_B2",declaration:"void",sentences:[],name:"F_Set_B2"},{argsMemObj:[{address:-1,name:"addr",asmName:"F_Set_B3_addr",type:"fixed",scope:"F_Set_B3",declaration:"fixed",size:1,isDeclared:!0}],asmName:"set_B3",declaration:"void",sentences:[],name:"F_Set_B3"},{argsMemObj:[{address:-1,name:"addr",asmName:"F_Set_B4_addr",type:"fixed",scope:"F_Set_B4",declaration:"fixed",size:1,isDeclared:!0}],asmName:"set_B4",declaration:"void",sentences:[],name:"F_Set_B4"},{argsMemObj:[],asmName:"get_Amount_for_Tx_in_A",declaration:"fixed",sentences:[],name:"F_Get_Amount_For_Tx_In_A"},{argsMemObj:[],asmName:"get_Current_Balance",declaration:"fixed",sentences:[],name:"F_Get_Current_Balance"},{argsMemObj:[],asmName:"get_Previous_Balance",declaration:"fixed",sentences:[],name:"F_Get_Previous_Balance"},{argsMemObj:[{address:-1,name:"addr",asmName:"F_Send_To_Address_In_B_addr",type:"fixed",scope:"F_Send_To_Address_In_B",declaration:"fixed",size:1,isDeclared:!0}],asmName:"send_to_Address_in_B",declaration:"void",sentences:[],name:"F_Send_To_Address_In_B"},{argsMemObj:[],asmName:"Get_Map_Value_Keys_In_A",declaration:"fixed",sentences:[],name:"F_Get_Map_Value_Keys_In_A"},{argsMemObj:[],asmName:"Get_Activation_Fee",declaration:"fixed",sentences:[],name:"F_Get_Activation_Fee"},{argsMemObj:[],asmName:"Get_Asset_Circulating",declaration:"fixed",sentences:[],name:"F_Get_Asset_Circulating"}];function te(t,e=[],n=!1){let r=0,a=0;function y(){n&&e.push({type:"Terminator",value:";",precedence:11,line:-1});let s=[];for(;r<e.length;r++)s=s.concat(w());return s}function w(){let s=[],l=e[r]?.line??-1;if(e[r].type==="CodeDomain")return te(t,e[r].params);switch(e[r].value){case"if":return h();case"while":return i();case"for":return p();case"else":throw new Error(`At line: ${l}. 'else' not associated with an 'if(){}else{}' sentence`);case"asm":return[{type:"phrase",code:[e[r]],line:l}];case"do":return d();case"switch":return $();case"case":return g();case"default":return x();case"break":return _();case"continue":return b();case"struct":if(e[r+1]?.type==="CodeDomain")return f()}for(;r<e.length;){if(e[r].type==="Terminator")return[{type:"phrase",code:s,line:l}];if(e[r].type==="Colon")return u(s,l);switch(e[r].value){case"if":case"while":case"for":case"else":case"asm":case"label":case"do":case"break":case"continue":case"switch":case"case":case"default":throw new Error(`At line: ${e[r].line}. Statement including '${e[r].value}' in wrong way. Possible missing ';' before it.`)}s.push(e[r]),r++}throw new Error(`At line: ${e[r-1].line}. Missing ';'. `)}function h(){let s=e[r].line,l=`__if${s}`;if(r++,e[r]===void 0||e[r].type!=="CodeCave")throw new Error(`At line: ${e[r-1].line}. Expecting condition for 'if' statement.`);let o=e[r].params;r++;let c=w();return e[r+1]?.type==="Keyword"&&e[r+1]?.value==="else"?(r+=2,[{type:"ifElse",id:l,line:s,condition:o,trueBlock:c,falseBlock:w()}]):[{type:"ifEndif",id:l,line:s,condition:o,trueBlock:c}]}function i(){let s=e[r].line,l=`__loop${s}`;if(r++,e[r]===void 0||e[r].type!=="CodeCave")throw new Error(`At line: ${e[r-1].line}. Expecting condition for 'while' statement.`);let o=e[r].params;r++,t.latestLoopId.push(l);let c=w();return t.latestLoopId.pop(),[{type:"while",id:l,line:s,condition:o,trueBlock:c}]}function p(){let s=e[r].line,l=`__loop${s}`;if(r++,e[r]===void 0||e[r]?.type!=="CodeCave")throw new Error(`At line: ${e[r-1].line}. Expecting condition for 'for' statement.`);let o=te(t,e[r].params,!0);if(o.length!==3)throw new Error(`At line: ${s}. Expected 3 sentences for 'for(;;){}' loop. Got ${o.length}`);if(!o.every(N=>N.type==="phrase"))throw new Error(`At line: ${s}. Sentences inside 'for(;;)' can not be other loops or conditionals`);r++,t.latestLoopId.push(l);let c=w();return t.latestLoopId.pop(),[{type:"for",id:l,line:s,threeSentences:o,trueBlock:c}]}function d(){let s=e[r].line,l=`__loop${s}`;r++,t.latestLoopId.push(l);let o=w();if(t.latestLoopId.pop(),r++,e[r]?.value==="while"&&e[r+1]?.type==="CodeCave"&&e[r+2]?.type==="Terminator")return r+=2,[{type:"do",id:l,line:s,trueBlock:o,condition:e[r-1].params}];throw new Error(`At line: ${e[r].line}. Wrong do{}while(); sentence.`)}function f(){let s=e[r].line,l=re(e[r].extValue,"","Internal error. Missing struct type name.");r++;let o={type:"struct",line:s,name:l,members:w(),Phrase:{type:"phrase",line:e[r-1].line}};for(o.Phrase.code=[e[r-1]],r++;r<e.length;){if(e[r].type==="Terminator")return[o];o.Phrase.code.push(e[r]),r++}throw new Error(`At line: end of file. Missing ';' to end 'struct' statement started at line ${s}.`)}function $(){let s=e[r].line,l=`__switch${s}`;if(r++,e[r]===void 0||e[r].type!=="CodeCave")throw new Error(`At line: ${s}. Expecting (expression) for 'switch (expr) {block}' statement.`);if(e[r+1]===void 0||e[r+1].type!=="CodeDomain")throw new Error(`At line: ${s}. Expecting a {block} for 'switch (expression) {block}' statement.`);let o=j(e[r].params);if(o.length===0)throw new Error(`At line: ${s}. Expression cannot be empty in 'switch (expression) {block}' statement.`);r++,t.latestLoopId.push(l);let c=w();t.latestLoopId.pop();let N=c.reduce((F,C)=>C.type==="case"?F.concat([j(C.condition)]):F,[]),S=c.filter(F=>F.type==="default");if(N.length===0)throw new Error(`At line: ${s}. 'switch' statement must include at least one 'case' label.`);if(S.length>1)throw new Error(`At line: ${s}. 'switch' statement cannot have two or more 'default' labels.`);return[{type:"switch",line:s,expression:o,cases:N,hasDefault:Boolean(S.length),block:c}]}function g(){let s=e[r].line;if(r++,e[r]===void 0)throw new Error(`At line: ${e[r-1].line}. Expecting variable for 'case var:' statement.`);if(t.latestLoopId.length===0||!t.latestLoopId[t.latestLoopId.length-1].includes("switch"))throw new Error(`At line: ${s}. 'case' outside a switch statement.`);let l=[e[r]];if(e[r].type==="CodeCave"&&(l=j(e[r].params)),r++,e[r]===void 0||e[r].type!=="Colon")throw new Error(`At line: ${e[r-1].line}. Missing ':' in 'case var :' statement.`);let o="_"+a;return a++,[{type:"case",caseId:o,line:s,condition:l}]}function x(){let s=e[r].line;if(r++,e[r]===void 0||e[r].type!=="Colon")throw new Error(`At line: ${e[r-1].line}. Missing ':' in 'default :' statement.`);if(t.latestLoopId.length===0||!t.latestLoopId[t.latestLoopId.length-1].includes("switch"))throw new Error(`At line: ${s}. 'default' outside a switch statement.`);return[{type:"default",line:s}]}function u(s,l){if(s.length===0)throw new Error(`At line: ${l}. Unexpected ':'.`);if(s.length>1)throw new Error(`At line: ${l}.  Labels cannot have more than one word. Maybe missing ';'?`);if(s[0].type!=="Variable")throw new Error(`At line: ${l}.  Labels must be a name.`);return[{type:"label",line:l,id:s[0].value}]}function _(){let s=e[r].line;if(t.latestLoopId.length===0)throw new Error(`At line: ${s}. 'break' outside a loop or switch.`);if(e[r+1]?.type==="Terminator")return r++,e[r-1].extValue=t.latestLoopId[t.latestLoopId.length-1],[{type:"phrase",code:[e[r-1]],line:s}];throw new Error(`At line: ${s}. Missing ';' after 'break' keyword.`)}function b(){let s=e[r].line,l=t.latestLoopId.reduce((o,c)=>c.includes("loop")?c:o,"");if(l==="")throw new Error(`At line: ${s}. 'continue' outside a loop.`);if(e[r+1]?.type==="Terminator")return r++,e[r-1].extValue=l,[{type:"phrase",code:[e[r-1]],line:s}];throw new Error(`At line: ${s}. Missing ';' after 'continue' keyword.`)}return y()}function ne(t,e,n,r=""){let a=0;function y(){let _=[];if(n.length===0)return _;for(a=0;n[a]?.type==="Keyword";)switch(n[a].value){case"long":case"fixed":case"void":_.push(...w(n[a].value));break;case"struct":_.push(...$());break;default:a++}return _}function w(_){let b=[],s=a,l=!0;for(a++;a<n.length;)switch(n[a].type){case"Delimiter":if(s+1===a)throw new Error(`At line: ${n[a].line}. Delimiter ',' not expected.`);a++,l=!0;break;case"Keyword":return b;case"Variable":{if(l===!1){a++;break}b.push(...h(_)),l=!1,a++;break}default:a++}return b}function h(_){let b=ee(_),s=d(),l=a,o=i(),c=U(b.MemoryTemplate);if(c.name=n[l].value,c.asmName=e.currentPrefix+n[l].value,c.scope=e.currentScopeName,_==="void"){if(s===!1)throw new Error(`At line: ${n[l].line}. Can not declare variables as void.`);c.declaration="void_ptr"}else s&&(c.declaration+="_ptr");if(c.isDeclared=e.isFunctionArgument,o.length===0)return[c];c.type="array",c.typeDefinition=r+c.asmName,c.ArrayItem={type:"long",declaration:c.declaration,typeDefinition:r+c.asmName,totalSize:0},s===!1&&(c.declaration+="_ptr"),c.ArrayItem.totalSize=1+o.reduce(function(S,F){return S*F},1);let N=[c];for(let S=1;S<c.ArrayItem.totalSize;S++){let F=U(b.MemoryTemplate);F.name=`${c.name}_${S-1}`,F.asmName=`${c.asmName}_${S-1}`,F.scope=e.currentScopeName,F.declaration=c.ArrayItem.declaration,N.push(F)}return t.push(f(c,o)),N}function i(){let _=[];for(;a+1<n.length&&n[a+1].type==="Arr";)a++,_.push(p(n[a].params,n[a].line));return _}function p(_=[],b=-1){if(_.length!==1||_[0].type!=="Constant")throw new Error(`At line: ${b}. Wrong array declaration. Only constant size declarations allowed.`);return parseInt(_[0].value,16)}function d(){return n[a-1].value==="*"}function f(_,b){let s={name:j(_.typeDefinition,"Internal error. Missing type definion."),type:"array",arrayDimensions:U(b),arrayMultiplierDim:[],MemoryTemplate:_},l=b.length-1,o=_.size;do s.arrayMultiplierDim.unshift(o),o*=b[l],l--;while(l>=0);return s}function $(){let _=[],b=!1,s=a;Z(n[a].value==="struct","Internal error.");let l=re(n[s].extValue,"","Internal error. Unknow type definition");for(a++;a<n.length;){let o=n[a].line;switch(n[a].type){case"Delimiter":if(s+1===a)throw new Error(`At line: ${o}. Delimiter ',' not expected.`);a++,b=!1;break;case"Keyword":return _;case"UnaryOperator":case"Operator":if(n[a].value==="*"){b=!0,a++;break}throw new Error(`At line: ${o}. Invalid element (value: '${n[a].value}') found in struct definition.`);case"Variable":if(e.isFunctionArgument&&!b)throw new Error(`At line: ${o}. Passing struct by value as argument is not supported. Pass by reference.`);_.push(...g(l,n[s].line)),a++;break;default:throw new Error(`At line: ${o}. Invalid element (type: '${n[a].type}'  value: '${n[a].value}') found in struct definition!`)}}return _}function g(_,b){let s=[],l=x(_),o,c=d(),N=a,S=i();if(S.length===0){if(c===!1){if(l===void 0)throw new Error(`At line: ${b}. Could not find type definition for 'struct' '${_}'.`);return u(_,n[a].value,c)}return l===void 0?(o=W("structRef"),o.typeDefinition=_,o.size=1,o.declaration="struct_ptr"):(o=U(l.MemoryTemplate),o.declaration="struct_ptr",o.type="structRef",o.size=1),o.name=n[N].value,o.asmName=e.currentPrefix+n[N].value,o.scope=e.currentScopeName,o.isDeclared=e.isFunctionArgument,[o]}if(l===void 0)throw new Error(`At line: ${b}. Could not find type definition for 'struct' '${_}'.`);if(o=U(l.MemoryTemplate),c)throw new Error(`At line: ${b}. Arrays of struct pointers are not currently supported.`);o.name=n[N].value,o.asmName=e.currentPrefix+n[N].value,o.scope=e.currentScopeName,o.isDeclared=e.isFunctionArgument,o.type="array",o.typeDefinition=o.asmName,o.ArrayItem={type:o.type,declaration:o.declaration,typeDefinition:e.currentPrefix+_,totalSize:0},o.ArrayItem.totalSize=1+S.reduce(function(F,C){return F*C},o.size),s.push(o);for(let F=1;F<o.ArrayItem.totalSize;F+=o.size)s.push(...u(_,n[a-S.length].value+"_"+((F-1)/o.size).toString(),c));return t.push(f(o,S)),s}function x(_=""){let b=t.find(s=>s.type==="struct"&&s.name===_);return b===void 0&&e.currentPrefix.length>0&&(b=t.find(s=>s.type==="struct"&&s.name===e.currentPrefix+_)),b}function u(_,b,s){let l=j(x(_),"Internal error."),o=[U(l.MemoryTemplate)];return s||o.push(...U(l.structMembers)),o.forEach(c=>{c.name===""?c.name=b:c.name=b+"_"+c.name,c.asmName=e.currentPrefix+c.name}),o}return y()}function ue(t,e){let n={latestLoopId:[],isFunctionArgument:!1,currentScopeName:"",currentPrefix:""};function r(){a(),t.Global.macros.forEach(y),i(),t.typesDefinitions=[ee("register"),ee("long"),ee("fixed")],t.memory.push(...p(t.Config.maxAuxVars)),t.memory.push(...f(t.Config.maxConstVars)),(t.Config.fixedAPIFunctions||$())&&t.memory.push(Fe),g(),t.functions.forEach(_),t.Config.APIFunctions&&(t.Global.APIFunctions=je.slice()),t.Config.fixedAPIFunctions&&t.Global.APIFunctions.push(...Le),t.Global.BuiltInFunctions=Ie.slice(),s(),b(),l()}function a(){t.Global.code=[];let o=0;for(;o<e.length;){if(e[o].type==="Keyword"&&e[o+1]?.type==="Variable"&&e[o+2]?.type==="Function"&&e[o+3]?.type==="CodeDomain"){if(e[o].value==="struct")throw new Error(`At line: ${e[o].line}. Function returning a struct currently not implemented.`);t.functions.push({argsMemObj:[],sentences:[],declaration:e[o].value,line:e[o+1].line,name:e[o+1].value,arguments:e[o+2].params,code:e[o+3].params}),o+=4;continue}if(e[o].type==="Keyword"&&e[o+1]?.type==="UnaryOperator"&&e[o+1]?.value==="*"&&e[o+2]?.type==="Variable"&&e[o+3]?.type==="Function"&&e[o+4]?.type==="CodeDomain"){t.functions.push({argsMemObj:[],sentences:[],declaration:e[o].value+"_ptr",typeDefinition:e[o].extValue,line:e[o+2].line,name:e[o+2].value,arguments:e[o+3].params,code:e[o+4].params}),o+=5;continue}if(e[o].type==="Macro"){let c=e[o].value.replace(/\s\s+/g," ").split(" ");t.Global.macros.push({type:c[0],property:c[1],value:c.slice(2).join(" "),line:e[o].line}),o++;continue}t.Global.code.push(e[o]),o++}}function y(o){let c,N=!1,S=!1;switch(o.value){case void 0:case"":case"true":case"1":c=!0;break;case"false":case"0":c=!1;break;default:c=!0,N=!0}switch(o.type){case"pragma":S=w(o,c);break;case"include":if(o.property==="APIFunctions"){t.Config.APIFunctions=c,S=!0;break}if(o.property==="fixedAPIFunctions"){t.Config.fixedAPIFunctions=c,S=!0;break}throw new Error(`At line: ${o.line}. Unknow macro property '#${o.type} ${o.property}'. Do you mean 'APIFunctions'? Check valid values on Help page`);case"program":h(o);break;default:throw new Error(`At line: ${o.line}. Unknow macro: '#${o.type}'. Please check valid values on Help page`)}if(N&&S)throw new Error(`At line: ${o.line}. Macro: '#${o.type} ${o.property}' with wrong value. Please check valid values on Help page.`)}function w(o,c){let N=parseInt(o.value);switch(o.property){case"maxAuxVars":if(N>=1&&N<=10)return t.Config.maxAuxVars=N,!1;throw new Error(`At line: ${o.line}. Value out of permitted range 1..10.`);case"maxConstVars":if(N>=0&&N<=10)return t.Config.maxConstVars=N,!1;throw new Error(`At line: ${o.line}. Value out of permitted range 0..10.`);case"reuseAssignedVar":return t.Config.reuseAssignedVar=c,!0;case"enableRandom":return t.Config.enableRandom=c,!0;case"enableLineLabels":return t.Config.enableLineLabels=c,!0;case"optimizationLevel":if(N>=0&&N<=3)return t.Config.optimizationLevel=N,!1;throw new Error(`At line: ${o.line}. Value out of permitted range 0..3.`);case"version":return t.Config.sourcecodeVersion=o.value,!1;case"outputSourceLineNumber":return t.Config.outputSourceLineNumber=c,!0;default:throw new Error(`At line: ${o.line}. Unknow macro property: '#${o.type} ${o.property}'. Please check valid values on Help page`)}}function h(o){switch(o.property){case"name":if(/^[0-9a-zA-Z]{1,30}$/.test(o.value)){t.Config.PName=o.value;return}throw new Error(`At line: ${o.line}. Program name must contains only letters [a-z][A-Z][0-9], from 1 to 30 chars.`);case"description":if(o.value.length>=1e3)throw new Error(`At line: ${o.line}. Program description max lenght is 1000 chars. It is ${o.value.length} chars.`);t.Config.PDescription=o.value;return;case"activationAmount":if(/^[0-9_]{1,20}$/.test(o.value)){t.Config.PActivationAmount=o.value.replace(/_/g,"");return}throw new Error(`At line: ${o.line}. Program activation must be only numbers or '_'.`);case"userStackPages":if(/^\d\s*$|^10\s*$/.test(o.value)){t.Config.PUserStackPages=Number(o.value);return}throw new Error(`At line: ${o.line}. Program user stack pages must be a number between 0 and 10, included.`);case"codeStackPages":if(/^\d\s*$|^10\s*$/.test(o.value)){t.Config.PCodeStackPages=Number(o.value);return}throw new Error(`At line: ${o.line}. Program code stack pages must be a number between 0 and 10, included.`);case"codeHashId":if(/^\d+\s*$/.test(o.value)){t.Config.PCodeHashId=o.value.trim();return}throw new Error(`At line: ${o.line}. Program code hash id must be a decimal number. Use 0 to let compiler fill the value at assembly output.`);default:throw new Error(`At line: ${o.line}. Unknow macro property: '#${o.type} ${o.property}'. Please check valid values on Help page`)}}function i(){try{if(process.env.JEST==="true")return}catch{}if(t.Config.sourcecodeVersion===""){if(!t.Config.compilerVersion.includes("dev"))throw new Error(`Compiler version not set. Pin current compiler version in your program adding '#pragma version ${t.Config.compilerVersion}' to code.`);t.Config.sourcecodeVersion=t.Config.compilerVersion}if(t.Config.sourcecodeVersion!==t.Config.compilerVersion){if(t.Config.sourcecodeVersion!=="dev")throw new Error(`This compiler is version '${t.Config.compilerVersion}'. File needs a compiler version '${t.Config.sourcecodeVersion}'. Update '#pragma version' macro or run another SmartC version.`);t.Config.sourcecodeVersion=t.Config.compilerVersion}}function p(o){let c=d(),N=[];for(let S=0;S<o;S++){let F=U(c.MemoryTemplate);F.name=`r${S}`,F.asmName=`r${S}`,N.push(F)}return N}function d(){let o=t.typesDefinitions.find(c=>c.type==="register");return j(o,"Internal error.")}function f(o){let c=d(),N=[];for(let S=1;S<=o;S++){let F=U(c.MemoryTemplate);F.name=`n${S}`,F.asmName=`n${S}`,F.hexContent=S.toString(16).padStart(16,"0"),N.push(F)}return N}function $(){return!!e.find(o=>o.type==="Keyword"&&o.value==="fixed"||o.type==="Constant"&&o.extValue==="fixed")}function g(){n.currentScopeName="",n.currentPrefix="",t.Global.sentences=te(n,t.Global.code),t.Global.sentences.forEach(x),delete t.Global.code}function x(o){switch(o.type){case"phrase":t.memory.push(...ne(t.typesDefinitions,n,j(o.code)));return;case"ifElse":o.falseBlock.forEach(x);case"ifEndif":case"while":case"do":o.trueBlock.forEach(x);return;case"for":t.memory.push(...ne(t.typesDefinitions,n,j(o.threeSentences[0].code))),o.trueBlock.forEach(x);return;case"struct":u(o),t.memory.push(...ne(t.typesDefinitions,n,j(o.Phrase.code)));return;case"switch":o.block.forEach(x);return;case"label":{let c=W("label");c.asmName=o.id,c.name=o.id,c.isDeclared=!0,t.memory.push(c)}}}function u(o){let c=ee("struct");c.name=n.currentPrefix+o.name,c.MemoryTemplate.typeDefinition=n.currentPrefix+o.name,c.MemoryTemplate.isDeclared=n.isFunctionArgument;let N=n.currentPrefix;n.currentPrefix="",o.members.forEach(F=>{if(F.type!=="phrase")throw new Error(`At line: ${F.line}. Invalid sentence in struct members.`);F.code!==void 0&&c.structMembers.push(...ne(t.typesDefinitions,n,F.code,o.name+"_"))}),c.MemoryTemplate.size=c.structMembers.length;let S=0;c.structMembers.forEach(F=>{c.structAccumulatedSize.push([F.name,S]),F.type!=="struct"&&S++}),n.currentPrefix=N,t.typesDefinitions.push(c)}function _(o,c){o.sentences=te(n,o.code);let N=!1;o.arguments?.length===1&&o.arguments[0].type==="Keyword"&&o.arguments[0].value==="void"&&(N=!0),n.currentScopeName=o.name,n.currentPrefix=n.currentScopeName+"_",n.isFunctionArgument=!0;let S=te(n,o.arguments,!0);if(S.length!==1||S[0].type!=="phrase"||S[0].code===void 0)throw new Error(`At line: ${o.line}.Wrong arguments for function '${o.name}'.`);if(o.argsMemObj=ne(t.typesDefinitions,n,S[0].code),o.argsMemObj.length===0&&N===!1)throw new Error(`At line: ${o.line}. No variables in arguments for function '${o.name}'. Do you mean 'void'?`);t.memory=t.memory.concat(o.argsMemObj),n.isFunctionArgument=!1,delete t.functions[c].arguments,delete t.functions[c].code,o.sentences.forEach(x)}function b(){let o,c;for(o=0;o<t.memory.length-1;o++)for(c=o+1;c<t.memory.length;c++)if(t.memory[o].asmName===t.memory[c].asmName)throw t.memory[o].type!==t.memory[c].type?new Error(`At line: unknown. Global check: it was found that variable '${t.memory[o].name}' was declared more one time with types '${t.memory[o].type}' and '${t.memory[c].type}'.`):t.memory[o].type==="label"?new Error(`At line: unknow. Global check: it was found that label '${t.memory[o].name}' was declared more than one time.`):new Error(`At line: unknow. Global check: it was found that variable '${t.memory[o].name}' was declared more than one time.`)}function s(){let o,c;for(o=0;o<t.functions.length;o++){for(c=o+1;c<t.functions.length;c++)if(t.functions[o].name===t.functions[c].name)throw new Error(`At line: ${t.functions[c].line}. Found second definition for function '${t.functions[c].name}'.`);for(c=0;c<t.Global.BuiltInFunctions.length;c++)if(t.functions[o].name===t.Global.BuiltInFunctions[c].name)throw new Error(`At line: ${t.functions[o].line}. Function '${t.functions[o].name}' has same name of one built-in Functions.`);if(t.Config.APIFunctions===!0){for(c=0;c<t.Global.APIFunctions.length;c++)if(t.functions[o].name===t.Global.APIFunctions[c].name||t.functions[o].name===t.Global.APIFunctions[c].asmName)throw new Error(`At line: ${t.functions[o].line}. Function '${t.functions[o].name}' has same name of one API Functions.`)}}}function l(){let o=0;t.memory.forEach(c=>{switch(c.type){case"struct":c.hexContent=o.toString(16).padStart(16,"0");return;case"array":c.address=o,o++,c.hexContent=o.toString(16).padStart(16,"0");return;case"label":return;default:c.address=o,o++}})}return r()}function G(t){let e=j(t,"Internal error. Undefined AST to create syntactic tree");if(e.length===0)return{type:"nullASN"};let n=qe(e);switch(e[n].type){case"Constant":return Je(e);case"Variable":return Ze(e);case"CodeCave":return Ke(e);case"Operator":case"Assignment":case"SetOperator":case"Comparision":case"Delimiter":return Xe(e,n);case"Keyword":return We(e,n);case"UnaryOperator":return Qe(e,n);case"SetUnaryOperator":if(n===0)return Ye(e);if(n===e.length-1)return Ve(e);throw new Error(`At line: ${e[n].line}. Invalid use of 'SetUnaryOperator' '${e[n].value}'.`);default:throw new Error(`Internal error at line: ${e[0].line}. Token '${e[0].type}' with value '${e[0].value}' does not match any syntax rules.`)}}function qe(t){let e=t.map(r=>r.precedence),n=Math.max(...e);switch(n){case 0:return 0;case 12:case 10:case 2:return e.indexOf(n);default:return e.lastIndexOf(n)}}function Je(t){if(t.length!==1)throw new Error(`At line: ${t[0].line}. Constants cannot have modifiers.`);return{type:"endASN",Token:t[0]}}function Ze(t){if(t.length===1)return{type:"endASN",Token:t[0]};let e=1;t[1].type==="Function"&&(t[1].extValue=t[0].value,e++);let n={type:"lookupASN",Token:t[e-1],modifiers:[]};for(n.Token.type==="Function"&&(n.FunctionArgs=G(n.Token.params),delete n.Token.params);e<t.length;e++)switch(t[e].type){case"Arr":n.modifiers.push({type:"Array",Center:G(t[e].params)});break;case"Member":if(t[e+1]?.type==="Variable")break;throw new Error(`At line: ${t[e].line}. Expecting a variable for '${t[e].value}' modifier.`);case"Variable":if(t[e-1].type!=="Member")throw new Error(`At line: ${t[e].line}. Probable missing ';'. Expecting a member modifier before '${t[e].value}'.`);if(t[e-1].value==="."){n.modifiers.push({type:"MemberByVal",Center:t[e]});break}n.modifiers.push({type:"MemberByRef",Center:t[e]});break;default:throw new Error(`At line: ${t[e].line}. Probable missing ';'. Invalid type of variable modifier: '${t[e].type}'.`)}return n}function Ke(t){if(t.length===1){let e=G(t[0].params);return delete t[0].params,e}if(t[0].params===void 0)return G(t.slice(1));if(t.length===2){let e=G(t.slice(1)),n=t[0].params.reduce((r,a)=>{if(a.type==="Keyword")return r+a.value;if(a.value==="*")return r+"_ptr";throw new Error(`At line: ${t[0].line}. Unexpected '${a.type}' with value '${a.value}' during type casting.`)},"");if(!Be(n))throw new Error(`At line: ${t[0].line}. Unexpected declaration '${n}' during type casting.`);if(n==="struct")throw new Error(`At line: ${t[0].line}. 'struct' is not allowed for type casting.`);return t[0].declaration=n,delete t[0].params,{type:"unaryASN",Operation:t[0],Center:e}}throw new Error(`At line: ${t[0].line}. Modifiers not implemented on '${t[0].type}'.`)}function Xe(t,e){if(e===0)throw new Error(`At line: ${t[0].line}. Missing left value for binary operator '${t[e].value}'.`);if(e===t.length-1)throw new Error(`At line: ${t[0].line}. Missing right value for binary operator '${t[e].value}'.`);return{type:"binaryASN",Left:G(t.slice(0,e)),Operation:t[e],Right:G(t.slice(e+1))}}function We(t,e){if(e!==0)throw new Error(`At line: ${t[e].line}. Probable missing ';' before keyword ${t[e].value}.`);switch(t[0].value){case"goto":case"const":case"sizeof":if(t.length===1)throw new Error(`At line: ${t[0].line}. Missing arguments for keyword '${t[0].value}'.`);return{type:"unaryASN",Operation:t[0],Center:G(t.slice(1))};case"exit":case"halt":case"break":case"continue":case"label":case"asm":if(t.length!==1)throw new Error(`At line: ${t[0].line}. Keyword '${t[0].value}' does not accept arguments.`);return{type:"endASN",Token:t[0]};case"long":case"fixed":case"void":case"struct":return t.length===1?{type:"endASN",Token:t[0]}:t.length===2&&t[1].value==="*"?(t[0].value="long",{type:"endASN",Token:t[0]}):{type:"unaryASN",Operation:t[0],Center:G(t.slice(1))};case"return":case"sleep":return t.length===1?{type:"endASN",Token:t[0]}:{type:"unaryASN",Operation:t[0],Center:G(t.slice(1))};default:throw new Error(`Internal error at line: ${t[0].line}. Keyword '${t[0].value}' shown up.`)}}function Qe(t,e){if(e!==0)throw new Error(`At line: ${t[e].line}. Invalid use of 'UnaryOperator' '${t[e].value}'.`);if(t.length===1)throw new Error(`At line: ${t[0].line}. Missing value to apply unary operator '${t[0].value}'.`);if(t[0].value==="*"&&t.length>0&&t[1].type!=="Variable"&&t[1].type!=="CodeCave"&&t[1].type!=="SetUnaryOperator")throw new Error(`At line: ${t[1].line}. Invalid lvalue for pointer operation. Can not have type '${t[1].type}'.`);return{type:"unaryASN",Center:G(t.slice(1)),Operation:t[0]}}function Ye(t){if(t.length===1)throw new Error(`At line: ${t[0].line}. Missing value to apply 'SetUnaryOperator' '${t[0].value}'.`);if(t[1].type!=="Variable")throw new Error(`At line: ${t[0].line}. 'SetUnaryOperator' '${t[0].value}' expecting a variable, got a '${t[1].type}'.`);for(let e=1;e<t.length;e++)if(!(t[e].type==="Variable"||t[e].type==="Member"))throw new Error(`At line: ${t[0].line}. Can not use 'SetUnaryOperator' with types '${t[e].type}'.`);return{type:"exceptionASN",Left:G(t.slice(1)),Operation:t[0]}}function Ve(t){let e=t.length-1;if(t[0].type!=="Variable")throw new Error(`At line: ${t[0].line}. 'SetUnaryOperator' '${t[e].value}' expecting a variable, got a '${t[0].type}'.`);for(let n=1;n<t.length-1;n++)if(!(t[n].type==="Variable"||t[n].type==="Member"))throw new Error(`At line: ${t[0].line}. Can not use 'SetUnaryOperator' with types  '${t[n].type}'.`);return{type:"exceptionASN",Right:G(t.slice(0,e)),Operation:t[e]}}function fe(t){function e(){t.Global.sentences.forEach(n),t.functions.forEach(r=>{r.sentences.forEach(n)})}function n(r){switch(r.type){case"phrase":r.CodeAST=G(j(r.code,"Internal error. Unknow object arrived at processSentence")),delete r.code;break;case"ifElse":r.falseBlock.forEach(n);case"ifEndif":case"while":case"do":if(j(r.condition).length===0)throw new Error(`At line ${r.line}. Sentence condition can not be empty`);r.ConditionAST=G(r.condition),delete r.condition,r.trueBlock.forEach(n);break;case"for":r.threeSentences.forEach(n),r.trueBlock.forEach(n);break;case"struct":n(r.Phrase);break;case"switch":r.JumpTable={type:"switchASN",Expression:G(r.expression),caseConditions:j(r.cases).map(a=>G(a))},delete r.expression,delete r.cases,r.block.forEach(n);break;case"case":delete r.condition;break}}return e()}function pe(t,e,n){let r,a=1,y,w=e.split(`
`);function h(){do y=0,r=i().concat(n),t>=1&&(w=w.filter(p),w.forEach($),w.forEach(b),w.forEach(d)),t>=2&&(w.forEach(f),w.forEach(g),w.forEach(u),w.forEach(s),w.forEach(_),w=w.flatMap(x)),t>=3&&(w.forEach(N),w.forEach(F),w.forEach(S),w.forEach(C),w.forEach(T),w.forEach(I));while(y!==0);return w.join(`
`)}function i(){let A=[];return w.forEach(O=>{let v=/^.+\s:(\w+)$/.exec(O);v!==null&&A.push(v[1])}),A}function p(A){let O=/^(\w+):$/.exec(A);return O!==null?r.indexOf(O[1])!==-1?!0:(y++,!1):A==="DELETE"?(y++,!1):!0}function d(A,O,v){let M=/^.+\s:(\w+)$/.exec(A);if(M===null)return;let E=O;for(;++E<v.length-1;){let H=/^\s*(\w+):\s*$/.exec(v[E]);if(H===null){if(o(v[E]))continue;break}if(M[1]===H[1]){v[O]="DELETE",y++;return}}}function f(A,O,v){let M=/^\s*JMP\s+:(\w+)\s*$/.exec(A);if(M===null)return;let E=l(M[1]);if(/^\s*(RET|FIN)\s*$/.exec(E)!==null){v[O]=E,y++;return}let H=/^\s*(\w+):\s*$/.exec(E);H!==null&&(v[O]="JMP :"+H[1],y++)}function $(A,O,v){if(/^\s*(RET|FIN|JMP)\b.*$/.exec(A)===null)return;let E=O;for(;++E<v.length-1&&/^\s*(\w+):\s*$/.exec(v[E])===null;)o(v[E])||(v[E]="DELETE",y++)}function g(A,O,v){let M=/^\s*(BGT|BLT|BGE|BLE|BEQ|BNE|BZR|BNZ)\s+\$(\w+)\s+(\$\w+\s+)?:(\w+)\s*$/.exec(A);if(M===null)return;let E=/^\s*(\w+):\s*$/.exec(v[O+2]);if(E===null||M[4]!==E[1])return;let H=/^\s*JMP\s+:(\w+)\s*$/.exec(v[O+1]);H!==null&&(v[O]=A.replace(M[1],c(M[1])).replace(M[4],H[1]),v[O+1]="DELETE",y++)}function x(A,O,v){let M=/^\s*(BGT|BLT|BGE|BLE|BEQ|BNE|BZR|BNZ)\s+\$(\w+)\s+(\$\w+\s+)?:(\w+)\s*$/.exec(A);if(M===null)return[A];let E=l(M[4]);if(/^\s*(RET|FIN)\s*$/.exec(E)!==null){if(/^\s*(RET|FIN)\s*$/.test(v[O+1]))return[A];let J=`__opt_${a}`;a++;let Y=A.replace(M[1],c(M[1])).replace(M[4],J);return y++,[Y,E,`${J}:`]}let H=/^\s*(\w+):\s*$/.exec(E);return H!==null?(y++,[A.replace(M[4],H[1])]):[A]}function u(A,O,v){let M=/^\s*NOT\s+@(r\d)\s*$/.exec(A);if(M===null)return;let E=/^\s*SET\s+@(r\d)\s+\$(\w+)\s*$/.exec(v[O-1]),H=/^\s*SET\s+@(\w+)\s+\$(r\d)\s*$/.exec(v[O+1]);E===null||H===null||E[1]===H[2]&&E[2]===H[1]&&M[1]===E[1]&&(v[O-1]="DELETE",v[O]="NOT @"+E[2],v[O+1]="DELETE",y++)}function _(A,O,v){let M=/^\s*MUL\s+@(\w+)\s+\$(\w+)\s*$/.exec(A);if(M===null)return;let E=/^\s*DIV\s+@(\w+)\s+\$(\w+)\s*$/.exec(v[O+1]);E!==null&&M[1]===E[1]&&(v[O]=`MDV @${M[1]} $${M[2]} $${E[2]}`,v[O+1]="DELETE",y++)}function b(A,O,v){/^\s*SET\s+@(\w+)\s+\$\1\s*$/.exec(A)!==null&&(v[O]="DELETE",y++)}function s(A,O,v){let M=/^\s*POP\s+@(r\d)\s*$/.exec(A);if(M===null)return;let E=/^\s*PSH\s+\$(r\d+)\s*$/.exec(v[O+1]);E!==null&&E[1]===M[1]&&(v[O]="DELETE",v[O+1]="DELETE",y++)}function l(A){let O,v,M=w.findIndex(E=>E.indexOf(A+":")!==-1);if(M===-1)return"";for(;++M<w.length-1;)if(O=/^\s*(\w+):\s*$/.exec(w[M]),O===null&&!o(w[M]))return v=/^\s*JMP\s+:(\w+)\s*$/.exec(w[M]),v!==null?v[1]+":":w[M];return""}function o(A){return A===""||A==="DELETE"||/^\s*\^\w+(.*)/.exec(A)!==null}function c(A){switch(A){case"BGT":return"BLE";case"BLT":return"BGE";case"BGE":return"BLT";case"BLE":return"BGT";case"BEQ":return"BNE";case"BNE":return"BEQ";case"BZR":return"BNZ";case"BNZ":return"BZR";default:throw new Error("Internal error.")}}function N(A,O,v){let M=/^\s*(\w+)\s+@(\w+)\s+\$(\w+)\s*$/.exec(A);if(M===null)return;let E=/^\s*SET\s+@(\w+)\s+\$(\w+)\s*$/.exec(v[O+1]);if(E!==null&&M[2]===E[2]&&M[3]===E[1])switch(M[1]){case"ADD":case"MUL":case"AND":case"XOR":case"BOR":v[O]=M[1]+" @"+M[3]+" $"+M[2],v[O+1]="DELETE",y++}}function S(A,O,v){let M=/^\s*SET\s+@(\w+)\s+\$(\w+)\s*$/.exec(A);if(M===null)return;let E=/^\s*(\w+)\s+@(\w+)\s+\$(\w+)\s*$/.exec(v[O+1]);if(E!==null&&M[1]===E[3])switch(E[1]){case"ADD":case"SUB":case"MUL":case"DIV":case"AND":case"XOR":case"BOR":case"MOD":case"SHL":case"SHR":v[O]=E[1]+" @"+E[2]+" $"+M[2],v[O+1]="DELETE",y++}}function F(A,O,v){let M=/^\s*SET\s+@(r\d)\s+\$(\w+)\s*$/.exec(A);if(M===null)return;let E=/^\s*(PSH|SLP)\s+\$(\w+)\s*$/.exec(v[O+1]);E!==null&&E[2]===M[1]&&(v[O]="DELETE",v[O+1]=E[1]+" $"+M[2],y++)}function C(A,O,v){let M=/^\s*SET\s+@(\w+)\s+\$(\w+)\s*$/.exec(A);if(M===null)return;let E=O;for(;++E<v.length-1&&!(/^\s*(\w+):\s*$/.exec(v[E])!==null||/^.+\s:(\w+)$/.exec(v[E])!==null||/^\s*(RET|FIN)\s*$/.exec(v[E])!==null);)if(v[E].indexOf(M[1])>=0){let k=/^\s*SET\s+@(\w+)\s+\$\(\$(\w+)\s*\+\s*\$(\w+)\)\s*$/.exec(v[E]);if(k!==null&&M[1]===k[3]){v[O]="DELETE",v[E]="SET @"+k[1]+" $($"+k[2]+" + $"+M[2]+")",y++;continue}if(k=/^\s*SET\s+@\(\$(\w+)\s*\+\s*\$(\w+)\)\s+\$(\w+)\s*$/.exec(v[E]),k!==null&&M[1]===k[2]){v[O]="DELETE",v[E]="SET @($"+k[1]+" + $"+M[2]+") $"+k[3],y++;continue}if(k!==null&&M[1]===k[3]){v[O]="DELETE",v[E]="SET @($"+k[1]+" + $"+k[2]+") $"+M[2],y++;continue}break}}function T(A,O,v){let M=/^\s*POP\s+@(r\d)\s*$/.exec(A);if(M!==null){let E=/^\s*SET\s+@(\w+)\s+\$(\w+)\s*$/.exec(v[O+1]);E!==null&&E[2]===M[1]&&(v[O]="POP @"+E[1],v[O+1]="DELETE",y++)}}function I(A,O,v){let M=/^\s*CLR\s+@(\w+)\s*$/.exec(A);if(M===null)return;let E=O;for(;++E<v.length-1&&!(/^\s*(\w+):\s*$/.exec(v[E])!==null||/^.+\s:(\w+)$/.exec(v[E])!==null||/^\s*(RET|FIN)\s*$/.exec(v[E])!==null);){if(v[E].indexOf(M[1])===-1)continue;let k=/^\s*SET\s+@(\w+)\s+\$\(\$(\w+)\s*\+\s*\$(\w+)\)\s*$/.exec(v[E]);if(k!==null&&M[1]===k[3]){v[O]="DELETE",v[E]="SET @"+k[1]+" $($"+k[2]+")",y++;continue}if(k=/^\s*SET\s+@\(\$(\w+)\s*\+\s*\$(\w+)\)\s+\$(\w+)\s*$/.exec(v[E]),k!==null&&M[1]===k[2]){v[O]="DELETE",v[E]="SET @($"+k[1]+") $"+k[3],y++;continue}break}}return h()}var m={createConstantMemObj(t){let e,n="long";switch(typeof t){case"number":if(t%1!=0){let r=BigInt(Math.trunc(t)),a=BigInt(Math.trunc(t%1*1e8));e=(r*100000000n+a).toString(16),n="fixed";break}e=t.toString(16);break;case"bigint":e=t.toString(16);break;case"string":e=t;break;default:e=""}return e=e.padStart((Math.floor((e.length-1)/16)+1)*16,"0"),{address:-1,name:"",asmName:"",type:"constant",scope:"",size:e.length/16,declaration:n,isDeclared:!0,hexContent:e}},createVoidMemObj(){return{address:-1,name:"",asmName:"",type:"void",scope:"",size:0,declaration:"void",isDeclared:!0}},genMulToken(t=-1){return{type:"Operator",precedence:3,value:"*",line:t}},genDivToken(t=-1){return{type:"Operator",precedence:3,value:"/",line:t}},genAddToken(t=-1){return{type:"Operator",precedence:4,value:"+",line:t}},genSubToken(t=-1){return{type:"Operator",precedence:4,value:"-",line:t}},genAssignmentToken(t){return{type:"Assignment",precedence:9,value:"=",line:t}},genIncToken(){return{type:"SetUnaryOperator",precedence:2,value:"++",line:-1}},genDecToken(){return{type:"SetUnaryOperator",precedence:2,value:"--",line:-1}},genNotEqualToken(){return{type:"Comparision",precedence:6,value:"!=",line:-1}},genAPICallToken(t,e){return{type:"APICall",precedence:0,value:j(e),line:t}},genBuiltInToken(t,e){return{type:"BuiltInCall",precedence:0,value:j(e),line:t}},genPushToken(t){return{type:"Push",precedence:12,value:"",line:t}},mulHexContents(t,e){let n=this.HexContentsToBigint(t),r=this.HexContentsToBigint(e);return(n*r).toString(16).padStart(16,"0").slice(-16)},divHexContents(t,e){let n=this.HexContentsToBigint(t),r=this.HexContentsToBigint(e);if(r===0n)throw new Error("Division by zero");return(n/r).toString(16).padStart(16,"0").slice(-16)},addHexContents(t,e){let n=this.HexContentsToBigint(t),r=this.HexContentsToBigint(e);return(n+r).toString(16).padStart(16,"0").slice(-16)},subHexContents(t,e){let n=this.HexContentsToBigint(t),r=this.HexContentsToBigint(e),a=n-r;return a<0&&(a+=18446744073709551616n),a.toString(16).padStart(16,"0").slice(-16)},HexContentsToBigint(t){return typeof t=="undefined"?0n:BigInt(typeof t=="number"?t:"0x"+t)},splitASTOnDelimiters(t){let e=[];function n(r){if(r.type==="endASN"||r.type==="lookupASN"){e.push(r);return}r.type==="binaryASN"&&r.Operation.type==="Delimiter"?(n(r.Left),n(r.Right)):e.push(r)}return n(t),e},isNotValidDeclarationOp(t,e){let n=this.getDeclarationFromMemory(e);return t==="void"||n==="void"?!0:!(t===n||t==="void_ptr"&&n.includes("_ptr")||n==="void_ptr"&&t.includes("_ptr")||t.includes("_ptr")&&e.type==="constant")},getDeclarationFromMemory(t){return t.Offset===void 0?t.declaration:t.Offset.declaration},setMemoryDeclaration(t,e){t.Offset===void 0?t.declaration=e:t.Offset.declaration=e},findVarNameInAst(t,e){function n(a){let y,w;switch(a.type){case"nullASN":return!0;case"endASN":return!(a.Token.type==="Variable"&&a.Token.value===t);case"lookupASN":return r(a);case"unaryASN":return n(a.Center);case"binaryASN":return y=n(a.Left),w=n(a.Right),!!(y&&w);case"exceptionASN":return a.Left!==void 0?n(a.Left):n(j(a.Right));case"switchASN":return!1}}function r(a){return t.split("_").find(h=>h===a.Token.value)?!1:a.modifiers.find(h=>h.type==="Array"&&n(h.Center)===!1)===void 0?a.Token.type==="Function"&&a.FunctionArgs!==void 0?n(a.FunctionArgs):!0:!1}return n(e)},assertAsnType(t,e){if(e.type!==void 0&&e.type===t)return e;throw new Error("Internal error")}};function le(t,e,n,r){function a(){switch(e.type){case"register":case"long":case"fixed":case"structRef":return y();case"array":return g();default:throw new Error(`Internal error at line: ${r}.`)}}function y(){let _,b,s;switch(e.Offset?.type){case void 0:switch(n.type){case"constant":return w();case"register":case"long":case"fixed":case"structRef":return i();case"array":return f();default:throw new Error(`Internal error at line: ${r}.`)}case"constant":return $(e.Offset);case"variable":return _=P(t,n,r),b=t.getMemoryObjectByLocation(e.Offset.addr).asmName,s=`SET @($${e.asmName} + $${b}) $${_.FlatMem.asmName}
`,u(_),_.asmCode+s}}function w(){let _;switch(n.Offset?.type){case void 0:return h();case"constant":return n.hexContent=j(n.hexContent),_=t.getMemoryObjectByLocation(m.addHexContents(n.Offset.value,n.hexContent),r).asmName,`SET @${e.asmName} $${_}
`;case"variable":throw new Error("Not implemented.")}}function h(){if(n.hexContent=j(n.hexContent),n.hexContent.length>17)throw new Error(`At line: ${r}. Overflow on long value assignment (value bigger than 64 bits)`);if(n.hexContent==="0000000000000000")return`CLR @${e.asmName}
`;let _=t.memory.find(b=>b.asmName===`n${Number("0x"+n.hexContent)}`&&b.hexContent===n.hexContent);return _?`SET @${e.asmName} $${_.asmName}
`:`SET @${e.asmName} #${n.hexContent}
`}function i(){let _;switch(n.Offset?.type){case void 0:return p();case"constant":return d(n.Offset);case"variable":return _=t.getMemoryObjectByLocation(n.Offset.addr,r).asmName,`SET @${e.asmName} $($${n.asmName} + $${_})
`}}function p(){if(e.declaration!==n.declaration)throw new Error(`Internal error at line: ${r}.`);return e.address===n.address?"":`SET @${e.asmName} $${n.asmName}
`}function d(_){if(_.value===0)return`SET @${e.asmName} $($${n.asmName})
`;let b=P(t,m.createConstantMemObj(_.value),r),s=`SET @${e.asmName} $($${n.asmName} + $${b.FlatMem.asmName})
`;return u(b),b.asmCode+s}function f(){if(n.Offset===void 0)return`SET @${e.asmName} $${n.asmName}
`;if(n.Offset.type==="constant"){let b=m.addHexContents(n.hexContent,n.Offset.value),s=t.getMemoryObjectByLocation(b,r);return`SET @${e.asmName} $${s.asmName}
`}let _=t.getMemoryObjectByLocation(n.Offset.addr,r).asmName;return`SET @${e.asmName} $($${n.asmName} + $${_})
`}function $(_){let b=P(t,n,r),s;if(_.value===0)return s=`SET @($${e.asmName}) $${b.FlatMem.asmName}
`,b.isNew&&t.freeRegister(b.FlatMem.address),b.asmCode+s;let l=P(t,m.createConstantMemObj(_.value),r);return s=`SET @($${e.asmName} + $${l.FlatMem.asmName}) $${b.FlatMem.asmName}
`,u(l),u(b),b.asmCode+l.asmCode+s}function g(){let _,b,s;switch(e.Offset?.type){case void 0:return x();case"constant":throw new Error(`Internal error at line: ${r}.`);case"variable":return _=P(t,n,r),s=t.getMemoryObjectByLocation(e.Offset.addr,r).asmName,b=`SET @($${e.asmName} + $${s}) $${_.FlatMem.asmName}
`,u(_),_.asmCode+b}}function x(){Z(n.type==="constant",`Internal error at line: ${r}.`);let _=j(e.ArrayItem).totalSize-1;if(n.size>_)throw new Error(`At line: ${r}. Overflow on array value assignment (value bigger than array size).`);let b=j(n.hexContent).padStart(_*16,"0"),s="";for(let l=0;l<_;l++){let o=t.getMemoryObjectByLocation(m.addHexContents(e.hexContent,l),r),c=m.createConstantMemObj(b.slice(16*(_-l-1),16*(_-l)));s+=le(t,o,c,r)}return s}function u(_){_.isNew&&t.freeRegister(_.FlatMem.address)}return a()}function ge(t,e,n,r,a,y,w){let h="",i=y;a&&(i=w);let p=P(t,n,e.line);if(p.isNew&&(n.Offset?.type==="variable"&&t.freeRegister(n.Offset.addr),t.freeRegister(n.address)),r.type==="constant"&&r.hexContent==="0000000000000000"&&(e.value==="=="||e.value==="!="))return h+=tt(e.value,a),h+=` $${p.FlatMem.asmName} :${i}
`,p.isNew===!0&&t.freeRegister(p.FlatMem.address),p.asmCode+h;let d=P(t,r,e.line);return h+=et(e.value,a),h+=` $${p.FlatMem.asmName} $${d.FlatMem.asmName} :${i}
`,p.isNew===!0&&t.freeRegister(p.FlatMem.address),d.isNew===!0&&t.freeRegister(d.FlatMem.address),p.asmCode+d.asmCode+h}function et(t,e){let n="";switch(t){case">":n="BLE";break;case"<":n="BGE";break;case">=":n="BLT";break;case"<=":n="BGT";break;case"==":n="BNE";break;case"!=":n="BEQ";break}if(e===!1)return n;switch(t){case">":return"BGT";case"<":return"BLT";case">=":return"BGE";case"<=":return"BLE";case"==":return"BEQ";case"!=":return"BNE"}return"Internal error."}function tt(t,e){return e?t==="=="?"BZR":"BNZ":t==="=="?"BNZ":"BZR"}function _e(t,e,n){let r;switch(e.value){case"break":return`JMP :%generateUtils.getLatestLoopId()%_${e.value}
`;case"continue":return`JMP :%generateUtils.getLatestPureLoopId()%_${e.value}
`;case"goto":return`JMP :${j(n).name}
`;case"halt":return`STP
`;case"exit":return`FIN
`;case"return":return n===void 0?`RET
`:(r=P(t,n,e.line),r.asmCode+=`PSH $${r.FlatMem.asmName}
`,r.asmCode+=`RET
`,t.freeRegister(n.address),r.isNew===!0&&t.freeRegister(r.FlatMem.address),r.asmCode);case"sleep":return n===void 0?`SLP
`:(r=P(t,j(n),e.line),r.asmCode+=`SLP $${r.FlatMem.asmName}
`,t.freeRegister(n.address),r.isNew===!0&&t.freeRegister(r.FlatMem.address),r.asmCode);case"asm":{let a=j(e.extValue).split(`
`);return a=a.map(y=>y.trim()),a.join(`
`).trim()+`
`}default:throw new Error("Internal error.")}}function he(t,e,n,r){let a=P(t,n,e.line),y=P(t,r,e.line);function w(){switch(Z(n.type!=="constant"),a.FlatMem.declaration){case"fixed":return h();default:if(y.FlatMem.declaration==="fixed")throw new Error("Internal error");return d()}}function h(){switch(y.FlatMem.declaration){case"fixed":return i();default:return p()}}function i(){switch(e.value){case"+":case"+=":case"-":case"-=":return b(ye(e.value)+` @${a.FlatMem.asmName} $${y.FlatMem.asmName}
`);case"*":case"*=":return b(`MDV @${a.FlatMem.asmName} $${y.FlatMem.asmName} $f100000000
`);case"/":case"/=":return b(`MDV @${a.FlatMem.asmName} $f100000000 $${y.FlatMem.asmName}
`);default:throw new Error("Internal error")}}function p(){switch(e.value){case"/":case"/=":case"*":case"*=":case">>":case">>=":case"<<":case"<<=":return b(ye(e.value)+` @${a.FlatMem.asmName} $${y.FlatMem.asmName}
`);default:throw new Error("Internal error")}}function d(){let s=f();return s!==void 0?s:b(ye(e.value)+` @${a.FlatMem.asmName} $${y.FlatMem.asmName}
`)}function f(){if(r.type==="constant"){let s=$();if(s===void 0)return t.freeRegister(y.FlatMem.address),"";if(s.length>0)return Z(a.isNew===!1,"Internal error. Expecting not new item."),a.asmCode+s}}function $(){switch(e.value){case"+":case"+=":return g();case"-":case"-=":return x();case"*":case"*=":return u();case"/":case"/=":return _();default:return""}}function g(){switch(r.hexContent){case"0000000000000000":return;case"0000000000000001":return t.freeRegister(y.FlatMem.address),L(t,m.genIncToken(),a.FlatMem);case"0000000000000002":if(t.freeRegister(y.FlatMem.address),!t.memory.find(s=>s.asmName==="n2"&&s.hexContent==="0000000000000002"))return L(t,m.genIncToken(),a.FlatMem)+L(t,m.genIncToken(),a.FlatMem)}return""}function x(){if(r.hexContent!=="0000000000000000")return r.hexContent==="0000000000000001"?(t.freeRegister(y.FlatMem.address),L(t,m.genDecToken(),a.FlatMem)):""}function u(){if(r.hexContent==="0000000000000001"){t.freeRegister(y.FlatMem.address);return}return r.hexContent==="0000000000000000"?(t.freeRegister(y.FlatMem.address),L(t,m.genAssignmentToken(e.line),a.FlatMem,r)):""}function _(){if(r.hexContent==="0000000000000001"){t.freeRegister(y.FlatMem.address);return}return""}function b(s){return t.freeRegister(y.FlatMem.address),a.isNew===!0&&(s+=L(t,m.genAssignmentToken(e.line),n,a.FlatMem),t.freeRegister(a.FlatMem.address)),a.asmCode+y.asmCode+s}return w()}function ye(t){switch(t){case"+":case"+=":return"ADD";case"-":case"-=":return"SUB";case"*":case"*=":return"MUL";case"/":case"/=":return"DIV";case"|":case"|=":return"BOR";case"&":case"&=":return"AND";case"^":case"^=":return"XOR";case"%":case"%=":return"MOD";case"<<":case"<<=":return"SHL";case">>":case">>=":return"SHR";default:throw new Error("Internal error.")}}function De(t,e,n){let r=e.split(`
`),a=[];return r.forEach(y=>{if(y.length===0){a.push("");return}let w=/^\s*SET\s+@(\w+)\s+#([\da-f]{16})\b\s*$/.exec(y);if(w===null){let i=/^\s*CLR\s+@(\w+)\s*$/.exec(y);if(i!==null){a.push("^const SET @"+i[1]+" #0000000000000000");return}let p=/^\s*SET\s+@(\w+)\s+\$n(\d+)\s*$/.exec(y);if(p!==null){a.push(`^const SET @${p[1]} #${BigInt(p[2]).toString(16).padStart(16,"0")}`);return}throw new Error(`Internal error at line ${n}`)}let h=j(t.find(i=>i.asmName===w[1]));if(h.hexContent!==void 0)throw new Error(`At line: ${n}. Left side of an assigment with 'const' keyword already has been set.`);h.hexContent=w[2],a.push("^const "+y)}),a.join(`
`)}function R(t,e=""){switch(t){case"Jump":return`JMP :${e}
`;case"Push":return`PSH $${e}
`;case"Pop":return`POP @${e}
`;case"exit":return`FIN
`;case"Label":return`${e}:
`;case"Function":return`JSR :__fn_${e}
`;case"LongToFixed":return`MUL @${e} $f100000000
`;case"FixedToLong":return`DIV @${e} $f100000000
`;default:throw new Error(`Unknow simple instruction: ${t}`)}}function se(t,e,n){let r=P(t,e.SolvedMem,n);if(r.FlatMem.type!=="register"){let a=m.getDeclarationFromMemory(e.SolvedMem),y=t.getNewRegister(n);r.asmCode+=`SET @${y.asmName} $${r.FlatMem.asmName}
`,m.setMemoryDeclaration(y,a),t.freeRegister(r.FlatMem.address),t.freeRegister(e.SolvedMem.address),r.FlatMem=y}return r.isNew===!0&&t.freeRegister(e.SolvedMem.address),{SolvedMem:r.FlatMem,asmCode:e.asmCode+r.asmCode}}function Re(t,e,n,r){let a="",y=[];return r.forEach(w=>{let h=P(t,w,-1);a+=h.asmCode,y.push(h.FlatMem)}),a+="FUN",n.type!=="void"&&(a+=` @${n.asmName}`),a+=` ${e.value}`,y.forEach(w=>{a+=` $${w.asmName}`}),y.forEach(w=>t.freeRegister(w.address)),a+`
`}function ze(t,e,n,r){let a,y,w="",h=r.map(i=>P(t,i,-1));switch(e.value){case"pow":case"powf":w=h[0].asmCode+h[1].asmCode+`SET @${n.asmName} $${h[0].FlatMem.asmName}
POW @${n.asmName} $${h[1].FlatMem.asmName}
`;break;case"mdv":w=h[0].asmCode+h[1].asmCode+`SET @${n.asmName} $${h[0].FlatMem.asmName}
MDV @${n.asmName} $${h[1].FlatMem.asmName} $${h[2].FlatMem.asmName}
`;break;case"memcopy":switch(a="COMPLEX",(r[0].type==="constant"||r[1].type==="constant")&&(r[0].type==="constant"&&r[1].type==="constant"?a="SIMPLE":r[0].type==="constant"?a="MIXED_LEFT":a="MIXED_RIGHT"),a){case"SIMPLE":r[0].hexContent=j(r[0].hexContent),r[1].hexContent=j(r[1].hexContent),w=`SET @${t.getMemoryObjectByLocation(r[0].hexContent).asmName} $${t.getMemoryObjectByLocation(r[1].hexContent).asmName}
`;break;case"MIXED_LEFT":r[0].hexContent=j(r[0].hexContent),w=h[1].asmCode+`SET @${t.getMemoryObjectByLocation(r[0].hexContent).asmName} $($${h[1].FlatMem.asmName})
`;break;case"MIXED_RIGHT":r[1].hexContent=j(r[1].hexContent),w=h[0].asmCode+`SET @($${h[0].FlatMem.asmName}) $${t.getMemoryObjectByLocation(r[1].hexContent).asmName}
`;break;default:y=t.getNewRegister(),w=h[1].asmCode+h[0].asmCode+`SET @${y.asmName} $($${h[1].FlatMem.asmName})
SET @($${h[0].FlatMem.asmName}) $${y.asmName}
`,t.freeRegister(y.address);break}break;default:throw new Error(`Internal error at line: ${e.line}. Built-in function not implemented.`)}return h.forEach(i=>{i.isNew&&t.freeRegister(i.FlatMem.address)}),w}function P(t,e,n){let r=m.getDeclarationFromMemory(e);function a(){let w="";if(e.type==="constant")return y(e.hexContent);if(e.Offset===void 0)return{FlatMem:e,asmCode:"",isNew:!1};let h;if(e.Offset.type==="variable"){h=t.getNewRegister(),h.declaration=r;let p=t.getMemoryObjectByLocation(e.Offset.addr,n).asmName;return w+=`SET @${h.asmName} $($${e.asmName} + $${p})
`,{FlatMem:h,asmCode:w,isNew:!0}}let i;switch(e.type){case"register":case"long":case"structRef":return h=t.getNewRegister(),h.declaration=r,e.Offset.value===0?(w+=`SET @${h.asmName} $($${e.asmName})
`,{FlatMem:h,asmCode:w,isNew:!0}):(i=y(e.Offset.value),w+=i.asmCode,w+=`SET @${h.asmName} $($${e.asmName} + $${i.FlatMem.asmName})
`,i.isNew&&t.freeRegister(i.FlatMem.address),{FlatMem:h,asmCode:w,isNew:!0});case"array":return h=t.getMemoryObjectByLocation(m.addHexContents(e.hexContent,e.Offset.value),n),t.freeRegister(e.address),{FlatMem:h,asmCode:w,isNew:!0};default:throw new Error(`Internal error at line: ${n}. Not implemented type in flattenMemory()`)}}function y(w){w=j(w);let h;typeof w=="number"?h=w.toString(16):h=w,h=h.padStart(16,"0"),Z(h.length<=16);let i="n";r==="fixed"&&(i="f");let p=t.memory.find($=>$.asmName===i+Number("0x"+h)&&$.hexContent===h);if(p)return{FlatMem:p,asmCode:"",isNew:!1};let d=t.getNewRegister();d.declaration=r;let f="";return h==="0000000000000000"?f+=`CLR @${d.asmName}
`:f+=`SET @${d.asmName} #${h}
`,{FlatMem:d,asmCode:f,isNew:!0}}return a()}function L(t,e,n,r,a,y,w){switch(e.type){case"Assignment":return le(t,j(n),j(r),e.line);case"Operator":case"SetOperator":return he(t,e,j(n),j(r));case"UnaryOperator":case"SetUnaryOperator":return nt(e,j(n));case"Comparision":return ge(t,e,j(n),j(r),j(a),j(y),j(w));case"Push":{let h=P(t,j(n),e.line);return h.asmCode+=`PSH $${h.FlatMem.asmName}
`,h.isNew===!0&&t.freeRegister(h.FlatMem.address),h.asmCode}case"Keyword":return _e(t,e,n);default:throw new Error(`Internal error at line: ${e.line}.`)}}function nt(t,e){if(e.declaration==="fixed")switch(t.value){case"++":return`ADD @${e.asmName} $f100000000
`;case"--":return`SUB @${e.asmName} $f100000000
`;case"~":return`NOT @${e.asmName}
`;default:throw new Error(`Internal error at line: ${t.line}.`)}switch(t.value){case"++":return`INC @${e.asmName}
`;case"--":return`DEC @${e.asmName}
`;case"~":return`NOT @${e.asmName}
`;default:throw new Error(`Internal error at line: ${t.line}.`)}}function Q(t,e,n,r){let a=m.getDeclarationFromMemory(e.SolvedMem);if(a===n)return e;function y(){switch(n){case"void":return t.freeRegister(e.SolvedMem.address),e.SolvedMem=m.createVoidMemObj(),e;case"long":return h();case"fixed":return w();case"void_ptr":case"long_ptr":case"fixed_ptr":case"struct_ptr":return i();case"struct":default:throw new Error("Internal error")}}function w(){switch(a){case"long":return e=se(t,e,r),e.asmCode+=R("LongToFixed",e.SolvedMem.asmName),m.setMemoryDeclaration(e.SolvedMem,"fixed"),e;case"void":return e.SolvedMem=t.getNewRegister(r),e.asmCode+=`CLR @${e.SolvedMem.asmName}
`,m.setMemoryDeclaration(e.SolvedMem,"fixed"),e;case"struct":case"void_ptr":case"long_ptr":case"fixed_ptr":case"struct_ptr":throw new Error(`At line: ${r}. It is not possible to cast ${a} to fixed number.`);default:throw new Error("Internal error")}}function h(){switch(a){case"void":return e.SolvedMem=t.getNewRegister(r),e.asmCode+=`CLR @${e.SolvedMem.asmName}
`,m.setMemoryDeclaration(e.SolvedMem,"long"),e;case"fixed":return e=se(t,e,r),e.asmCode+=R("FixedToLong",e.SolvedMem.asmName),m.setMemoryDeclaration(e.SolvedMem,"long"),e;case"struct":throw new Error(`At line: ${r}. It is not possible to cast ${a} to long number.`);case"void_ptr":case"long_ptr":case"fixed_ptr":case"struct_ptr":return m.setMemoryDeclaration(e.SolvedMem,"long"),e;default:throw new Error("Internal error")}}function i(){switch(a){case"void":return e.SolvedMem=m.createConstantMemObj(0),m.setMemoryDeclaration(e.SolvedMem,n),e;case"long":return m.setMemoryDeclaration(e.SolvedMem,n),e;case"fixed":throw new Error(`At line: ${r}. It is not possible to cast ${a} to a pointer type.`);case"struct":return e.SolvedMem=m.createConstantMemObj(e.SolvedMem.hexContent),m.setMemoryDeclaration(e.SolvedMem,n),e;case"void_ptr":case"long_ptr":case"fixed_ptr":case"struct_ptr":return m.setMemoryDeclaration(e.SolvedMem,n),e;default:throw new Error("Internal error")}}return y()}function Ce(t,e,n){let r="",a;function y(){switch(a=m.assertAsnType("binaryASN",n.RemAST),a.Operation.type){case"Delimiter":return w();case"Operator":return h();case"Assignment":case"SetOperator":return i();case"Comparision":return b();default:throw new Error("Internal error.")}}function w(){if(n.jumpFalse!==void 0)throw new Error(`At line: ${a.Operation.line}. It is not possible to evaluate multiple sentences in logical operations.`);let C=D(t,e,{RemAST:a.Left,logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue});C.asmCode+=e.getPostOperations();let T=D(t,e,{RemAST:a.Right,logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue});return C.asmCode+=T.asmCode,C.asmCode+=e.getPostOperations(),e.freeRegister(T.SolvedMem.address),C}function h(){let C=D(t,e,{RemAST:a.Left,logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue}),T=D(t,e,{RemAST:a.Right,logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue});if(C.asmCode+=T.asmCode,C.SolvedMem.type==="void"||T.SolvedMem.type==="void")throw new Error(`At line: ${a.Operation.line}. Can not make operations with void values.`);let I=N(C.SolvedMem,T.SolvedMem,a.Operation.value);if(I)return{SolvedMem:I,asmCode:C.asmCode};if(S(C.SolvedMem,T.SolvedMem,a.Operation.value)){let M=T;T=C,C=M,C.asmCode=T.asmCode}let A=m.getDeclarationFromMemory(C.SolvedMem),O=m.getDeclarationFromMemory(T.SolvedMem);switch(C=se(e,C,a.Operation.line),$(a.Operation.value,A,O)){case"left":C=Q(e,C,O,a.Operation.line);break;case"right":{let M=T.asmCode;T=Q(e,T,A,a.Operation.line),C.asmCode+=T.asmCode.slice(M.length)}}return C.asmCode+=L(e,a.Operation,C.SolvedMem,T.SolvedMem),n.logicalOp===!0?(C.asmCode+=L(e,m.genNotEqualToken(),C.SolvedMem,m.createConstantMemObj(0),n.revLogic,n.jumpFalse,n.jumpTrue),e.freeRegister(T.SolvedMem.address),e.freeRegister(C.SolvedMem.address),{SolvedMem:m.createVoidMemObj(),asmCode:C.asmCode}):(e.freeRegister(T.SolvedMem.address),C)}function i(){p(),e.isLeftSideOfAssignment=!0,e.hasVoidArray=!1;let C=D(t,e,{RemAST:a.Left,logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue});e.isLeftSideOfAssignment=!1,d(C.SolvedMem);let T="";if(e.isDeclaration.length!==0&&(T=e.isDeclaration,e.isDeclaration=""),C.SolvedMem.type==="array"&&C.SolvedMem.Offset?.type==="constant"){if(C.SolvedMem.ArrayItem!==void 0&&C.SolvedMem.ArrayItem.totalSize<=C.SolvedMem.Offset.value+1)throw new Error(`At line ${a.Operation.line}. Array index is outside array size.`);C.SolvedMem=e.getMemoryObjectByLocation(m.addHexContents(C.SolvedMem.hexContent,C.SolvedMem.Offset.value))}let I=f(C.SolvedMem);if(e.isDeclaration=T,I.SolvedMem.type==="void")throw new Error(`At line: ${a.Operation.line}. Invalid right value for '${a.Operation.type}'. Possible void value.`);let A=m.getDeclarationFromMemory(C.SolvedMem),O=m.getDeclarationFromMemory(I.SolvedMem);switch($(a.Operation.value,A,O)){case"left":throw new Error("Internal error");case"right":I=Q(e,I,A,a.Operation.line)}return C.asmCode+=I.asmCode+L(e,a.Operation,C.SolvedMem,I.SolvedMem),e.isConstSentence===!0?_(C.SolvedMem,I.SolvedMem,C.asmCode,a.Operation.line):(e.freeRegister(I.SolvedMem.address),C)}function p(){if(n.jumpFalse!==void 0)throw new Error(`At line: ${a.Operation.line}. Can not use assignment during logical operations with branches`);if(a.Left.type==="binaryASN"||a.Left.type==="unaryASN"&&a.Left.Operation.value!=="*")throw new Error(`At line: ${a.Operation.line}. Invalid left value for assignment.`)}function d(C){if(C.address===-1)throw new Error(`At line: ${a.Operation.line}. Invalid left value for ${a.Operation.type}.`);if(C.type==="array"&&e.hasVoidArray===!1&&(C.Offset===void 0||C.Offset.type==="variable"&&C.Offset.addr===0&&C.Offset.declaration.includes("_ptr")))throw new Error(`At line: ${a.Operation.line}. Invalid left value for '${a.Operation.type}'. Can not reassign an array.`);if(e.hasVoidArray&&(a.Right.type!=="endASN"||a.Right.type==="endASN"&&a.Right.Token.type!=="Constant"))throw new Error(`At line: ${a.Operation.line}. Invalid right value for multi-array assignment. It must be a constant.`)}function f(C){if(a.Operation.type!=="Assignment"||t.Config.reuseAssignedVar===!1||C.type!=="long"&&C.type!=="fixed"||C.Offset!==void 0||!m.findVarNameInAst(C.name,a.Right))return D(t,e,{RemAST:a.Right,logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue});let T=U(e.registerInfo),I=U(C);I.type="register",I.declaration=C.declaration,e.registerInfo.unshift({inUse:!1,Template:I});let A=D(t,e,{RemAST:a.Right,logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue});e.registerInfo.shift();let O=U(e.registerInfo);if(A.SolvedMem.address!==C.address&&e.isTemp(A.SolvedMem.address)){let v=A.SolvedMem.address+1;e.registerInfo=T,e.registerInfo.splice(v,0,{inUse:!1,Template:I});let M=D(t,e,{RemAST:a.Right,logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue});if(M.SolvedMem.address===C.address)return e.registerInfo.splice(v,1),M;e.registerInfo=O}return A}function $(C,T,I){if(T===I)return T==="fixed"?x(C):"none";let A=g(C,T,I);return A!=="notFixedLong"?A:u(C,T,I)}function g(C,T,I){let A="none";if(T==="long"&&I==="fixed"&&(A="right"),T==="fixed"&&I==="long"&&(A="left"),A==="none")return"notFixedLong";switch(C){case"=":case"+=":case"-=":return"right";case"+":case"-":return A==="left"?"right":"left";case"/":case"*":return A==="left"?"none":"left";case"%":case"&":case"|":case"^":case"%=":case"&=":case"|=":case"^=":throw new Error(`At line ${a.Operation.line}. Cannot use operator ${C} with fixed type numbers.`);case">>":case"<<":case">>=":case"<<=":if(A==="right")throw new Error(`At line ${a.Operation.line}. Cannot use operator ${C} with fixed type numbers on right side.`);return"none";case"/=":case"*=":return A==="left"?"none":"right";case"==":case"!=":case"<=":case">=":case"<":case">":return A==="left"?"right":"left";default:throw new Error("Internal error")}}function x(C){switch(C){case"%":case"&":case"|":case"^":case"%=":case"&=":case"|=":case"^=":case">>":case"<<":throw new Error(`At line ${a.Operation.line}. Cannot use operator ${C} with fixed type numbers.`);case">>=":case"<<=":throw new Error(`At line ${a.Operation.line}. Cannot use operator ${C} with fixed type numbers on right side.`);default:return"none"}}function u(C,T,I){switch(C){case"=":if(T==="void_ptr"&&I.includes("_ptr")||T.includes("_ptr")&&I==="void_ptr")return"right";if(T.includes("ptr")&&I==="long"&&e.hasVoidArray)return"none";throw new Error(`At line ${a.Operation.line}. Left and right side of assigment does not match. Types are '${T}' and '${I}'.`);case"+=":case"-=":if(T===I+"_ptr")return"none";throw new Error(`At line ${a.Operation.line}. Left and right side of ${C} does not match. Types are '${T}' and '${I}'.`);case"+":case"-":if(T.includes("_ptr")&&I==="long")return"right";if(I.includes("_ptr")&&T==="long")return"left";throw new Error(`At line ${a.Operation.line}. Left and right side of ${C} does not match. Types are '${T}' and '${I}'.`);case"==":case"!=":case"<=":case">=":case"<":case">":if(T.includes("_ptr")&&I.includes("_ptr")||T.includes("_ptr")&&I==="long")return"right";if(T==="long"&&I.includes("_ptr"))return"left";throw new Error(`At line ${a.Operation.line}. Left and right side of ${C} does not match. Types are '${T}' and '${I}'.`);default:throw new Error(`At line ${a.Operation.line}. Left and right side of ${C} does not match. Types are '${T}' and '${I}'.`)}}function _(C,T,I,A){if(T.address!==-1||T.type!=="constant"||T.hexContent===void 0)throw new Error(`At line: ${A}. Right side of an assigment with 'const' keyword must be a constant.`);return I=De(e.memory,I,A),{SolvedMem:C,asmCode:I}}function b(){if(n.logicalOp===!1&&n.jumpFalse===void 0)return s();switch(a.Operation.value){case"||":return l();case"&&":return o();case"==":case"!=":case"<=":case">=":case"<":case">":return c();default:throw new Error("Internal error")}}function s(){let C=e.getNewJumpID(a.Operation.line),T="__CMP_"+C+"_sF",I="__CMP_"+C+"_sT",A="__CMP_"+C+"_end",O=!1;a.Operation.value==="||"&&(O=!0);let{SolvedMem:v,asmCode:M}=D(t,e,{RemAST:a,logicalOp:!0,revLogic:O,jumpFalse:T,jumpTrue:I}),E=e.getNewRegister();return M+=R("Label",O?T:I),M+=L(e,m.genAssignmentToken(a.Operation.line),E,m.createConstantMemObj(O?0:1)),M+=R("Jump",A),M+=R("Label",O?I:T),M+=L(e,m.genAssignmentToken(a.Operation.line),E,m.createConstantMemObj(O?1:0)),M+=R("Label",A),e.freeRegister(v.address),{SolvedMem:E,asmCode:M}}function l(){let C=e.getNewJumpID(a.Operation.line),T="__OR_"+C+"_next";return r+=D(t,e,{RemAST:a.Left,logicalOp:!0,revLogic:!0,jumpFalse:T,jumpTrue:n.jumpTrue}).asmCode,r+=R("Label",T),r+=D(t,e,{RemAST:a.Right,logicalOp:!0,revLogic:!0,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue}).asmCode,r+=R("Jump",n.jumpFalse),{SolvedMem:m.createVoidMemObj(),asmCode:r}}function o(){let C=e.getNewJumpID(a.Operation.line),T="__AND_"+C+"_next";return r+=D(t,e,{RemAST:a.Left,logicalOp:!0,revLogic:!1,jumpFalse:n.jumpFalse,jumpTrue:T}).asmCode,r+=R("Label",T),r+=D(t,e,{RemAST:a.Right,logicalOp:!0,revLogic:!1,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue}).asmCode,r+=R("Jump",n.jumpTrue),{SolvedMem:m.createVoidMemObj(),asmCode:r}}function c(){let C=D(t,e,{RemAST:a.Left,logicalOp:!1,revLogic:n.revLogic}),T=D(t,e,{RemAST:a.Right,logicalOp:!1,revLogic:n.revLogic}),I=m.getDeclarationFromMemory(C.SolvedMem),A=m.getDeclarationFromMemory(T.SolvedMem);switch($(a.Operation.value,I,A)){case"left":C=Q(e,C,A,a.Operation.line);break;case"right":T=Q(e,T,I,a.Operation.line)}return r=C.asmCode+T.asmCode,r+=L(e,a.Operation,C.SolvedMem,T.SolvedMem,n.revLogic,n.jumpFalse,n.jumpTrue),e.freeRegister(C.SolvedMem.address),e.freeRegister(T.SolvedMem.address),{SolvedMem:m.createVoidMemObj(),asmCode:r}}function N(C,T,I){if(C.type==="constant"&&T.type==="constant")switch(I){case"+":return m.createConstantMemObj(m.addHexContents(C.hexContent,T.hexContent));case"*":return m.createConstantMemObj(m.mulHexContents(C.hexContent,T.hexContent));case"/":return m.createConstantMemObj(m.divHexContents(C.hexContent,T.hexContent));case"-":return m.createConstantMemObj(m.subHexContents(C.hexContent,T.hexContent))}}function S(C,T,I){switch(I){case"+":case"*":case"&":case"^":case"|":break;default:return!1}return C.declaration==="fixed"&&T.declaration==="long"?I==="+":!!(F(I,C)||e.isTemp(T.address)&&!e.isTemp(C.address)||T.type==="constant"&&!F(I,T))}function F(C,T){if(C==="+"||C==="+="){if(T.hexContent==="0000000000000000"||T.hexContent==="0000000000000001"||T.hexContent==="0000000000000002")return!0}else if((C==="*"||C==="*=")&&(T.hexContent==="0000000000000000"||T.hexContent==="0000000000000001"))return!0;return!1}return y()}function we(t,e,n){let r;function a(){switch(r=m.assertAsnType("endASN",n.RemAST),r.Token.type){case"Constant":return y();case"Variable":return w();case"Keyword":return h();default:throw new Error(`Internal error at line: ${r.Token.line}.`)}}function y(){if(n.logicalOp)return n.revLogic===!1?r.Token.value==="0000000000000000"?{SolvedMem:m.createVoidMemObj(),asmCode:R("Jump",n.jumpFalse)}:{SolvedMem:m.createVoidMemObj(),asmCode:""}:r.Token.value!=="0000000000000000"?{SolvedMem:m.createVoidMemObj(),asmCode:R("Jump",n.jumpTrue)}:{SolvedMem:m.createVoidMemObj(),asmCode:""};let i=m.createConstantMemObj(r.Token.value);return r.Token.extValue==="fixed"&&(i.declaration="fixed"),{SolvedMem:i,asmCode:""}}function w(){if(n.logicalOp){let{SolvedMem:p,asmCode:d}=D(t,e,{RemAST:r,logicalOp:!1,revLogic:n.revLogic});return d+=L(e,m.genNotEqualToken(),p,m.createConstantMemObj(0),n.revLogic,n.jumpFalse,n.jumpTrue),e.freeRegister(p.address),{SolvedMem:m.createVoidMemObj(),asmCode:d}}return{SolvedMem:e.getMemoryObjectByName(r.Token.value,r.Token.line,e.isDeclaration),asmCode:""}}function h(){if(n.logicalOp)throw new Error(`At line: ${r.Token.line}. Cannot use of keyword '${r.Token.value}' in logical statements.`);switch(r.Token.value){case"break":case"continue":case"asm":case"exit":case"halt":case"sleep":return{SolvedMem:m.createVoidMemObj(),asmCode:L(e,r.Token)};case"void":throw new Error(`At line: ${r.Token.line}. Invalid use of keyword 'void'.`);case"long":{let i=t.typesDefinitions.find(p=>p.type==="long");return{SolvedMem:j(i).MemoryTemplate,asmCode:""}}case"struct":{let i=t.typesDefinitions.find(p=>p.type==="struct"&&p.name===r.Token.extValue);return{SolvedMem:j(i).MemoryTemplate,asmCode:""}}case"return":if(e.CurrentFunction===void 0)throw new Error(`At line: ${r.Token.line}. Can not use 'return' in global statements.`);if(e.CurrentFunction.declaration!=="void")throw new Error(`At line: ${r.Token.line}. Function '${e.CurrentFunction.name}' must return a '${e.CurrentFunction.declaration}' value.`);return e.CurrentFunction.name==="main"||e.CurrentFunction.name==="catch"?{SolvedMem:m.createVoidMemObj(),asmCode:R("exit")}:{SolvedMem:m.createVoidMemObj(),asmCode:L(e,r.Token)};default:throw new Error(`Internal error at line: ${r.Token.line}.`)}}return a()}function be(t,e,n){let r=m.assertAsnType("exceptionASN",n.RemAST);if(n.jumpFalse!==void 0)throw new Error(`At line: ${r.Operation.line}. Can not use SetUnaryOperator (++ or --) during logical operations with branches`);if(r.Left!==void 0){let y=D(t,e,{RemAST:r.Left,logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue});return y.asmCode+=L(e,r.Operation,y.SolvedMem),y}let a=D(t,e,{RemAST:j(r.Right),logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue});return e.postOperations+=L(e,r.Operation,a.SolvedMem),a}function xe(t,e,n){let r;function a(){r=m.assertAsnType("lookupASN",n.RemAST),Z(r.Token.type==="Function");let h=j(r.Token.extValue),i=t.functions.find($=>$.name===h),p=t.Global.APIFunctions.find($=>$.name===h),d=t.Global.BuiltInFunctions.find($=>$.name===h),f=m.splitASTOnDelimiters(j(r.FunctionArgs));if(i)return y(i,f);if(d)return w("builtin",d,f);if(p)return w("api",p,f);throw new Error(`At line: ${r.Token.line}. Function '${h}' not declared.`)}function y(h,i){let p,d="",f=!1;h.name===e.CurrentFunction?.name&&(f=!0,e.memory.filter(g=>g.scope===h.name&&g.address>0).reverse().forEach(g=>{d+=R("Push",g.asmName)}));let $=e.registerInfo.filter(g=>g.inUse===!0).reverse();if($.forEach(g=>{d+=R("Push",g.Template.asmName)}),i[0].type==="nullASN"&&i.pop(),i.length!==h.argsMemObj.length)throw new Error(`At line: ${r.Token.line}. Wrong number of arguments for function '${h.name}'. It must have '${h.argsMemObj.length}' args.`);for(let g=i.length-1;g>=0;g--){let x=D(t,e,{RemAST:i[g],logicalOp:!1,revLogic:!1}),u=h.argsMemObj[g];if(m.isNotValidDeclarationOp(u.declaration,x.SolvedMem))throw new Error(`At line: ${r.Token.line}. Type of function argument #${g+1} is different from variable:  Expecting '${u.declaration}', got '${x.SolvedMem.declaration}'.`);if(x.SolvedMem.size!==1&&x.SolvedMem.Offset===void 0)throw new Error(`At line: ${r.Token.line}. Overflow in argument size.`);d+=x.asmCode,d+=L(e,m.genPushToken(r.Token.line),x.SolvedMem),e.freeRegister(x.SolvedMem.address)}return d+=R("Function",h.name),h.declaration==="void"?p=m.createVoidMemObj():(p=e.getNewRegister(),p.declaration=h.declaration,p.typeDefinition=h.typeDefinition,d+=R("Pop",p.asmName)),$.reverse(),$.forEach(g=>{d+=R("Pop",g.Template.asmName)}),f&&e.memory.filter(g=>g.scope===h.name&&g.address>0).forEach(g=>{d+=R("Pop",g.asmName)}),{SolvedMem:p,asmCode:d}}function w(h,i,p){let d,f=[],$="";if(i.declaration==="void"?d=m.createVoidMemObj():(d=e.getNewRegister(),d.declaration=i.declaration),p[0].type==="nullASN"&&p.pop(),p.length!==i.argsMemObj.length)throw new Error(`At line: ${r.Token.line}. Wrong number of arguments for function '${i.name}'. It must have '${i.argsMemObj.length}' args.`);return p.forEach((g,x)=>{let u=D(t,e,{RemAST:g,logicalOp:!1,revLogic:!1});if($+=u.asmCode,m.isNotValidDeclarationOp(i.argsMemObj[x].declaration,u.SolvedMem))throw new Error(`At line: ${r.Token.line}. Type of API Function argument #${x+1} is different from variable.  Expecting '${i.argsMemObj[x].declaration}', got '${u.SolvedMem.declaration}'.`);if(u.SolvedMem.size!==1&&u.SolvedMem.Offset===void 0)throw new Error(`At line: ${r.Token.line}. Overflow in argument size.`);f.push(u.SolvedMem)}),h==="api"?$+=Re(e,m.genAPICallToken(r.Token.line,i.asmName),d,f):$+=ze(e,m.genBuiltInToken(r.Token.line,i.asmName),d,f),f.forEach(g=>e.freeRegister(g.address)),{SolvedMem:d,asmCode:$}}return a()}function $e(t,e,n){let r=-1,a;function y(){a=m.assertAsnType("lookupASN",n.RemAST);let s;switch(a.Token.type){case"Variable":s={SolvedMem:e.getMemoryObjectByName(a.Token.value,a.Token.line,e.isDeclaration),asmCode:""};break;case"Function":s=xe(t,e,n);break;default:throw new Error(`Internal error at line: ${a.Token.line}.`)}if(a.modifiers.length!==0&&s.SolvedMem.type==="void")throw new Error(`At line: ${a.Token.line}. Function returning void value can not have modifiers.`);let l=a.modifiers.reduce(w,s);if(n.logicalOp===!0){if(l.SolvedMem.type==="void")throw new Error(`At line: ${a.Token.line}. Function returning void value can not be used in conditionals decision.`);return l.asmCode+=L(e,m.genNotEqualToken(),l.SolvedMem,m.createConstantMemObj(0),n.revLogic,n.jumpFalse,n.jumpTrue),e.freeRegister(l.SolvedMem.address),{SolvedMem:m.createVoidMemObj(),asmCode:l.asmCode}}return l}function w(s,l){switch(l.type){case"MemberByVal":case"MemberByRef":return h(s,l);case"Array":return f(s,l)}}function h(s,l){let o=l.Center.value;if(o==="length"&&l.type==="MemberByVal")return i(s.SolvedMem);let c=p(s.SolvedMem),N=d(c,o),S=0,F=c.structMembers[N];if(F.ArrayItem&&(s.SolvedMem.ArrayItem={declaration:F.ArrayItem.declaration,totalSize:F.ArrayItem.totalSize,type:F.ArrayItem.type,typeDefinition:F.ArrayItem.typeDefinition},S=1),r=-1,l.type==="MemberByRef"){if(m.getDeclarationFromMemory(s.SolvedMem)!=="struct_ptr")throw new Error(`At line: ${a.Token.line}.  Variable '${s.SolvedMem.name}' not defined as struct pointer. Try to use '.' instead.`);if(s.SolvedMem.Offset===void 0)return s.SolvedMem.Offset={type:"constant",value:S+c.structAccumulatedSize[N][1],declaration:F.declaration,typeDefinition:F.typeDefinition},s;if(s.SolvedMem.Offset.type==="constant"){let C=e.getNewRegister();return C.declaration=s.SolvedMem.Offset.declaration,C.typeDefinition=s.SolvedMem.Offset.typeDefinition,s.asmCode+=L(e,m.genAssignmentToken(a.Token.line),C,s.SolvedMem),C.Offset={type:"constant",value:c.structAccumulatedSize[N][1],declaration:F.declaration,typeDefinition:F.typeDefinition},{SolvedMem:C,asmCode:s.asmCode}}throw new Error(`Internal error at line: ${a.Token.line}. Inspection needed.`)}if(m.getDeclarationFromMemory(s.SolvedMem)==="struct_ptr")throw new Error(`At line: ${a.Token.line}. Using wrong member notation. Try to use '->' instead.`);if(s.SolvedMem.Offset===void 0)return s.SolvedMem=e.getMemoryObjectByLocation(Number("0x"+s.SolvedMem.hexContent)+c.structAccumulatedSize[N][1]),s;if(s.SolvedMem.Offset.type==="constant"){let C=s.SolvedMem.Offset.value+Number("0x"+s.SolvedMem.hexContent);return s.SolvedMem=e.getMemoryObjectByLocation(C+c.structAccumulatedSize[N][1]),s}return s.asmCode+=L(e,m.genAddToken(a.Token.line),e.getMemoryObjectByLocation(s.SolvedMem.Offset.addr,a.Token.line),m.createConstantMemObj(S+c.structAccumulatedSize[N][1])),s.SolvedMem.Offset.declaration=F.declaration,s.SolvedMem.Offset.typeDefinition=F.typeDefinition,s}function i(s){let l=g(s);if(l===void 0)throw new Error(`At line: ${a.Token.line}. Array type definition not found for variable '${s.name}'.`);let o=j(l.MemoryTemplate.ArrayItem?.totalSize);return s.Offset?.type==="variable"&&e.freeRegister(s.Offset.addr),e.freeRegister(s.address),{SolvedMem:m.createConstantMemObj((o-1)/l.MemoryTemplate.size),asmCode:""}}function p(s){let l=s.typeDefinition;if(s.Offset?.declaration==="struct"&&(l=s.Offset.typeDefinition),l===void 0)throw new Error(`At line: ${a.Token.line}. Variable '${s.name}' has no struct type definition`);let o=t.typesDefinitions.find(c=>c.type==="struct"&&c.name===l);return j(o)}function d(s,l){let o=-1;if(o=s.structAccumulatedSize.findIndex(c=>c[0]===l),o===-1)throw new Error(`At line: ${a.Token.line}. Member '${l}' not found on struct type definition.`);return o}function f(s,l){r++;let o=$(s.SolvedMem,r);if(s.SolvedMem.ArrayItem===void 0){if(s.SolvedMem.Offset!==void 0)throw new Error("Internal error.");s.SolvedMem.ArrayItem={type:s.SolvedMem.type,declaration:s.SolvedMem.declaration==="void_ptr"?"long":s.SolvedMem.declaration.slice(0,-4),typeDefinition:"",totalSize:0}}let c=D(t,e,{RemAST:l.Center,logicalOp:!1,revLogic:!1});if(c.SolvedMem.Offset){let N=e.getNewRegister();N.declaration=m.getDeclarationFromMemory(c.SolvedMem),c.asmCode+=L(e,m.genAssignmentToken(a.Token.line),N,c.SolvedMem),c.SolvedMem.Offset.type==="variable"&&e.freeRegister(c.SolvedMem.Offset.addr),e.freeRegister(c.SolvedMem.address),c.SolvedMem=N}if(s.asmCode+=c.asmCode,c.SolvedMem.type==="void")return e.hasVoidArray=!0,s;if(s.SolvedMem.Offset===void 0)return x(s,c.SolvedMem,o);if(s.SolvedMem.Offset.type==="constant")return u(s,c.SolvedMem,o);if(s.SolvedMem.Offset.declaration=s.SolvedMem.ArrayItem.declaration,s.SolvedMem.Offset.typeDefinition=s.SolvedMem.ArrayItem.typeDefinition,e.isTemp(s.SolvedMem.Offset.addr))return _(s,c.SolvedMem,o);throw new Error("Internal error.")}function $(s,l){let o=g(s);if(o!==void 0)return o.arrayMultiplierDim[l];if(m.getDeclarationFromMemory(s).includes("_ptr")===!1)throw new Error(`At line: ${a.Token.line}. Array type definition not found. Is '${s}' declared as array or pointer?`);return 1}function g(s){let l=s.typeDefinition;return s.Offset&&s.Offset.declaration!=="struct"&&(l=s.Offset?.typeDefinition),t.typesDefinitions.find(o=>o.type==="array"&&o.name===l)}function x(s,l,o){let c=b(l.address),N;if(s.SolvedMem.ArrayItem===void 0)throw new Error("Internal error.");if(m.getDeclarationFromMemory(l)==="fixed")throw new Error(`At line ${a.Token.line}. Array index cannot be fixed type.`);switch(c){case"constant":return s.SolvedMem.Offset={type:"constant",value:Number(`0x${l.hexContent}`)*o,declaration:s.SolvedMem.ArrayItem.declaration,typeDefinition:s.SolvedMem.ArrayItem.typeDefinition},s;case"register":return s.SolvedMem.Offset={type:"variable",addr:l.address,declaration:s.SolvedMem.ArrayItem.declaration,typeDefinition:s.SolvedMem.ArrayItem.typeDefinition},s.asmCode+=L(e,m.genMulToken(a.Token.line),l,m.createConstantMemObj(o)),s;case"regularVariable":return o===1?(s.SolvedMem.Offset={type:"variable",addr:l.address,declaration:s.SolvedMem.ArrayItem.declaration,typeDefinition:s.SolvedMem.ArrayItem.typeDefinition},s):(N=e.getNewRegister(),s.asmCode+=L(e,m.genAssignmentToken(a.Token.line),N,m.createConstantMemObj(o)),s.asmCode+=L(e,m.genMulToken(a.Token.line),N,l),s.SolvedMem.Offset={type:"variable",addr:N.address,declaration:s.SolvedMem.ArrayItem.declaration,typeDefinition:s.SolvedMem.ArrayItem.typeDefinition},s)}}function u(s,l,o){let c=b(l.address),N;if(s.SolvedMem.ArrayItem===void 0||s.SolvedMem.Offset?.type!=="constant")throw new Error("Internal error.");switch(c){case"constant":return s.SolvedMem.Offset.value+=Number(`0x${l.hexContent}`)*o,s.SolvedMem.Offset.declaration=s.SolvedMem.ArrayItem.declaration,s.SolvedMem.Offset.typeDefinition=s.SolvedMem.ArrayItem.typeDefinition,s;case"register":return s.asmCode+=L(e,m.genMulToken(a.Token.line),l,m.createConstantMemObj(o)),s.asmCode+=L(e,m.genAddToken(a.Token.line),l,m.createConstantMemObj(s.SolvedMem.Offset.value)),s.SolvedMem.Offset={type:"variable",addr:l.address,declaration:s.SolvedMem.ArrayItem.declaration,typeDefinition:s.SolvedMem.ArrayItem.typeDefinition},s;case"regularVariable":return o===1&&s.SolvedMem.Offset.value===0?(s.SolvedMem.Offset={type:"variable",addr:l.address,declaration:s.SolvedMem.ArrayItem.declaration,typeDefinition:s.SolvedMem.ArrayItem.typeDefinition},s):(N=e.getNewRegister(),s.asmCode+=L(e,m.genAssignmentToken(a.Token.line),N,l),s.asmCode+=L(e,m.genMulToken(a.Token.line),N,m.createConstantMemObj(o)),s.asmCode+=L(e,m.genAddToken(a.Token.line),N,m.createConstantMemObj(s.SolvedMem.Offset.value)),s.SolvedMem.Offset={type:"variable",addr:N.address,declaration:s.SolvedMem.ArrayItem.declaration,typeDefinition:s.SolvedMem.ArrayItem.typeDefinition},s)}}function _(s,l,o){let c=b(l.address),N;if(s.SolvedMem.Offset===void 0||s.SolvedMem.Offset.type!=="variable")throw new Error("Internal error.");switch(c){case"constant":return o*=Number("0x"+l.hexContent),s.asmCode+=L(e,m.genAddToken(a.Token.line),e.getMemoryObjectByLocation(s.SolvedMem.Offset.addr,a.Token.line),m.createConstantMemObj(o)),s;case"register":return s.asmCode+=L(e,m.genMulToken(a.Token.line),l,m.createConstantMemObj(o)),s.asmCode+=L(e,m.genAddToken(a.Token.line),e.getMemoryObjectByLocation(s.SolvedMem.Offset.addr,a.Token.line),l),e.freeRegister(l.address),s;case"regularVariable":return o===1?(s.asmCode+=L(e,m.genAddToken(a.Token.line),e.getMemoryObjectByLocation(s.SolvedMem.Offset.addr,a.Token.line),l),s):(N=e.getNewRegister(),s.asmCode+=L(e,m.genAssignmentToken(a.Token.line),N,l),s.asmCode+=L(e,m.genMulToken(a.Token.line),N,m.createConstantMemObj(o)),s.asmCode+=L(e,m.genAddToken(a.Token.line),e.getMemoryObjectByLocation(s.SolvedMem.Offset.addr,a.Token.line),N),e.freeRegister(N.address),s)}}function b(s){return s===-1?"constant":e.isTemp(s)?"register":"regularVariable"}return y()}function ve(t,e,n){let r;function a(){r=m.assertAsnType("switchASN",n.RemAST);let w="",h=D(t,e,{RemAST:r.Expression,logicalOp:!1,revLogic:n.revLogic});return w+=h.asmCode,h.SolvedMem.type==="constant"?h.SolvedMem.hexContent==="0000000000000000"?y(!1):y(!0):(r.caseConditions.forEach((i,p)=>{let d=D(t,e,{RemAST:i,logicalOp:!1,revLogic:n.revLogic});w+=d.asmCode,w+=L(e,m.genNotEqualToken(),h.SolvedMem,d.SolvedMem,n.revLogic,n.jumpFalse+"_"+p,n.jumpTrue)}),w+=R("Jump",n.jumpTrue),{SolvedMem:m.createVoidMemObj(),asmCode:w})}function y(w){let h="";return r.caseConditions.forEach((i,p)=>{let d={RemAST:i,logicalOp:!0,revLogic:!0,jumpFalse:n.jumpFalse+"_"+p+"_next",jumpTrue:n.jumpFalse+"_"+p};w||(d.revLogic=!1,d.jumpFalse=n.jumpFalse+"_"+p,d.jumpTrue=n.jumpFalse+"_"+p+"_next"),h+=D(t,e,d).asmCode,h+=R("Label",n.jumpFalse+"_"+p+"_next")}),h+=R("Jump",n.jumpTrue),{SolvedMem:m.createVoidMemObj(),asmCode:h}}return a()}function Te(t,e,n){let r;function a(){switch(r=m.assertAsnType("unaryASN",n.RemAST),r.Operation.type){case"UnaryOperator":return y();case"Keyword":return g();case"CodeCave":return s();default:throw new Error(`Internal error at line: ${r.Operation.line}.`)}}function y(){switch(r.Operation.value){case"!":return w();case"+":return h();case"*":return p();case"-":return d();case"~":return f();case"&":return $();default:throw new Error(`Internal error at line: ${r.Operation.line}.`)}}function w(){if(n.logicalOp===!0)return D(t,e,{RemAST:r.Center,logicalOp:!0,revLogic:!n.revLogic,jumpFalse:n.jumpTrue,jumpTrue:n.jumpFalse});let l=e.getNewJumpID(r.Operation.line),o="__NOT_"+l+"_sF",c="__NOT_"+l+"_sT",N="__NOT_"+l+"_end",S=D(t,e,{RemAST:r.Center,logicalOp:!0,revLogic:!n.revLogic,jumpFalse:c,jumpTrue:o}),F=e.getNewRegister();return S.asmCode+=R("Label",c),S.asmCode+=L(e,m.genAssignmentToken(r.Operation.line),F,m.createConstantMemObj(1)),S.asmCode+=R("Jump",N),S.asmCode+=R("Label",o),S.asmCode+=L(e,m.genAssignmentToken(r.Operation.line),F,m.createConstantMemObj(0)),S.asmCode+=R("Label",N),e.freeRegister(S.SolvedMem.address),{SolvedMem:F,asmCode:S.asmCode}}function h(){return D(t,e,{RemAST:r.Center,logicalOp:n.logicalOp,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue})}function i(){return D(t,e,{RemAST:r.Center,logicalOp:!1,revLogic:n.revLogic,jumpFalse:n.jumpFalse,jumpTrue:n.jumpTrue})}function p(){let l=i();if(e.isDeclaration.length!==0)return l;let o=m.getDeclarationFromMemory(l.SolvedMem);if(o.includes("_ptr")===!1)throw r.Center.type==="endASN"||r.Center.type==="lookupASN"?new Error(`At line: ${r.Operation.line}. Trying to read/set content of variable ${r.Center.Token.value} that is not declared as pointer.`):new Error(`At line: ${r.Operation.line}. Trying to read/set content of a value that is not declared as pointer.`);if(l.SolvedMem.Offset){let c=e.getNewRegister();c.declaration=m.getDeclarationFromMemory(l.SolvedMem),l.asmCode+=L(e,m.genAssignmentToken(r.Operation.line),c,l.SolvedMem),l.SolvedMem.Offset.type==="variable"&&e.freeRegister(l.SolvedMem.Offset.addr),e.freeRegister(l.SolvedMem.address),l.SolvedMem=c}return l.SolvedMem.Offset={type:"constant",value:0,declaration:o.slice(0,-4)},n.logicalOp===!0?(l.asmCode+=L(e,m.genNotEqualToken(),l.SolvedMem,m.createConstantMemObj(0),n.revLogic,n.jumpFalse,n.jumpTrue),e.freeRegister(l.SolvedMem.address),{SolvedMem:m.createVoidMemObj(),asmCode:l.asmCode}):l}function d(){let{SolvedMem:l,asmCode:o}=i();if(l.type==="constant")return{SolvedMem:m.createConstantMemObj(m.subHexContents(0,l.hexContent)),asmCode:o};let c=e.getNewRegister();return c.declaration=m.getDeclarationFromMemory(l),o+=L(e,m.genAssignmentToken(r.Operation.line),c,m.createConstantMemObj(0)),o+=L(e,m.genSubToken(r.Operation.line),c,l),e.freeRegister(l.address),n.logicalOp===!0?(o+=L(e,m.genNotEqualToken(),c,m.createConstantMemObj(0),n.revLogic,n.jumpFalse,n.jumpTrue),e.freeRegister(c.address),{SolvedMem:m.createVoidMemObj(),asmCode:o}):{SolvedMem:c,asmCode:o}}function f(){let l=!1,{SolvedMem:o,asmCode:c}=i(),N;return e.isTemp(o.address)?N=o:(N=e.getNewRegister(),N.declaration=m.getDeclarationFromMemory(o),c+=L(e,m.genAssignmentToken(r.Operation.line),N,o),l=!0),c+=L(e,r.Operation,N),n.logicalOp===!0?(c+=L(e,m.genNotEqualToken(),N,m.createConstantMemObj(0),n.revLogic,n.jumpFalse,n.jumpTrue),e.freeRegister(o.address),e.freeRegister(N.address),{SolvedMem:m.createVoidMemObj(),asmCode:c}):(l&&e.freeRegister(o.address),{SolvedMem:N,asmCode:c})}function $(){if(n.jumpFalse!==void 0)throw new Error(`At line: ${r.Operation.line}. Can not use UnaryOperator '&' during logical operations with branches.`);let{SolvedMem:l,asmCode:o}=i(),c;switch(l.type){case"void":throw new Error(`At line: ${r.Operation.line}. Trying to get address of void value.`);case"register":throw new Error(`At line: ${r.Operation.line}. Returning address of a register.`);case"constant":throw new Error(`At line: ${r.Operation.line}. Trying to get address of a constant value.`);case"array":if(l.Offset!==void 0){if(l.Offset.type==="constant"){c=m.createConstantMemObj(m.addHexContents(l.hexContent,l.Offset.value)),c.declaration=l.declaration;break}let N=U(l);delete N.Offset,c=e.getNewRegister(),c.declaration=l.declaration,o+=L(e,m.genAssignmentToken(r.Operation.line),c,N),o+=L(e,m.genAddToken(),c,e.getMemoryObjectByLocation(l.Offset.addr));break}c=m.createConstantMemObj(l.address);break;case"struct":c=m.createConstantMemObj(l.hexContent),c.declaration="struct_ptr";break;case"structRef":if(l.Offset!==void 0)throw new Error(`Internal error at line: ${r.Operation.line}. Get address of 'structRef' with offset not implemented. `);c=m.createConstantMemObj(l.address),c.declaration="struct_ptr";break;case"long":case"fixed":c=m.createConstantMemObj(l.address),c.declaration=l.type;break;default:throw new Error(`Internal error at line ${r.Operation.line}.`)}return c.declaration.includes("_ptr")||(c.declaration+="_ptr"),{SolvedMem:c,asmCode:o}}function g(){switch(r.Operation.value){case"long":case"fixed":case"void":return e.isDeclaration=r.Operation.value,i();case"const":return e.isConstSentence=!0,i();case"return":return x();case"goto":return u();case"sleep":return _();case"sizeof":return b();case"struct":return{SolvedMem:m.createVoidMemObj(),asmCode:""};default:throw new Error(`Internal error: At line: ${r.Operation.line}. Invalid use of keyword '${r.Operation.value}'`)}}function x(){if(e.CurrentFunction===void 0)throw new Error(`At line: ${r.Operation.line}. Can not use 'return' in global statements.`);if(e.CurrentFunction.declaration==="void")throw new Error(`At line: ${r.Operation.line}. Function '${e.CurrentFunction.name}' must return a ${e.CurrentFunction.declaration}' value.`);if(e.CurrentFunction.name==="main"||e.CurrentFunction.name==="catch")throw new Error(`At line: ${r.Operation.line}.  Special function ${e.CurrentFunction.name} must return void value.`);let l=i();if(l.asmCode+=e.getPostOperations(),m.isNotValidDeclarationOp(e.CurrentFunction.declaration,l.SolvedMem))throw new Error(`At line: ${r.Operation.line}. Function ${e.CurrentFunction.name} must return '${e.CurrentFunction.declaration}' value, but it is returning '${l.SolvedMem.declaration}'.`);return l.asmCode+=L(e,r.Operation,l.SolvedMem),e.freeRegister(l.SolvedMem.address),{SolvedMem:m.createVoidMemObj(),asmCode:l.asmCode}}function u(){let l=i();if(l.asmCode+=e.getPostOperations(),l.SolvedMem.type!=="label")throw new Error(`At line: ${r.Operation.line}. Argument for keyword 'goto' is not a label.`);return l.asmCode+=L(e,r.Operation,l.SolvedMem),e.freeRegister(l.SolvedMem.address),{SolvedMem:m.createVoidMemObj(),asmCode:l.asmCode}}function _(){let l=i();return l.asmCode+=e.getPostOperations(),l.asmCode+=L(e,r.Operation,l.SolvedMem),e.freeRegister(l.SolvedMem.address),{SolvedMem:m.createVoidMemObj(),asmCode:l.asmCode}}function b(){let l=i();if(l.SolvedMem.type==="structRef"&&l.SolvedMem.Offset!==void 0)throw new Error(`At line: ${r.Operation.line}. Struct pointer members not supported by 'sizeof'.`);let o=l.SolvedMem.size;return l.SolvedMem.Offset===void 0&&l.SolvedMem.ArrayItem!==void 0&&(o=l.SolvedMem.ArrayItem.totalSize),{SolvedMem:m.createConstantMemObj(o),asmCode:l.asmCode}}function s(){if(r.Operation.declaration===""||r.Operation.declaration===void 0)throw new Error("Internal error.");let l=i();return m.getDeclarationFromMemory(l.SolvedMem)===r.Operation.declaration?l:Q(e,l,r.Operation.declaration,r.Operation.line)}return a()}function D(t,e,n){switch(n.RemAST.type){case"nullASN":return{SolvedMem:m.createVoidMemObj(),asmCode:""};case"endASN":return we(t,e,n);case"lookupASN":return $e(t,e,n);case"unaryASN":return Te(t,e,n);case"exceptionASN":return be(t,e,n);case"binaryASN":return Ce(t,e,n);case"switchASN":return ve(t,e,n)}}function X(t,e,n){let r={CurrentFunction:t.Program.functions[t.currFunctionIndex],memory:t.Program.memory,jumpId:t.jumpId,registerInfo:[],postOperations:"",isDeclaration:"",isLeftSideOfAssignment:!1,isConstSentence:!1,hasVoidArray:!1,isTemp:w,getNewRegister:h,freeRegister:i,getPostOperations:p,getMemoryObjectByName:d,getMemoryObjectByLocation:f,getNewJumpID:$};function a(){e.InitialAST=j(e.InitialAST),e.initialIsReversedLogic=e.initialIsReversedLogic??!1,r.memory.filter(u=>/^r\d$/.test(u.asmName)).forEach(u=>{r.registerInfo.push({inUse:!1,Template:u})});let g=D(t.Program,r,{RemAST:e.InitialAST,logicalOp:e.initialJumpTarget!==void 0,revLogic:e.initialIsReversedLogic,jumpFalse:e.initialJumpTarget,jumpTrue:e.initialJumpNotTarget});y(e.InitialAST,g.SolvedMem),g.asmCode+=r.postOperations,t.jumpId=r.jumpId;let x=g.asmCode.split(`
`);return g.asmCode=x.map(u=>u.includes("%generateUtils.getLatestLoopId()%")?u.replace("%generateUtils.getLatestLoopId()%",t.getLatestLoopID()):u.includes("%generateUtils.getLatestPureLoopId()%")?u.replace("%generateUtils.getLatestPureLoopId()%",t.getLatestPureLoopID()):u).join(`
`),g.asmCode}function y(g,x){if(e.initialJumpTarget===void 0&&x.type==="register"&&(g.type==="unaryASN"&&g.Operation.value!=="*"||g.type==="binaryASN"&&(g.Operation.type==="Comparision"||g.Operation.type==="Operator")))throw new Error(`At line: ${g.Operation.line}. Operation returning a value that is not being used. Use casting to (void) to avoid this error.`)}function w(g){return g===-1?!1:r.registerInfo.find(u=>u.Template.address===g)?.inUse===!0}function h(g=n){let x=r.registerInfo.find(u=>u.inUse===!1);if(x===void 0)throw new Error(`At line: ${g}. No more registers available. Try to reduce nested operations or increase 'maxAuxVars'.`);return x.inUse=!0,U(x.Template)}function i(g){if(g===void 0||g===-1)return;let x=r.registerInfo.find(u=>u.Template.address===g);x!==void 0&&(x.inUse=!1)}function p(){let g=r.postOperations;return r.postOperations="",g}function d(g,x=n,u=""){let _;if(r.CurrentFunction!==void 0&&(_=r.memory.find(b=>b.name===g&&b.scope===r.CurrentFunction?.name)),_===void 0&&(_=r.memory.find(b=>b.name===g&&b.scope==="")),_===void 0)throw new Error(`At line: ${x}. Using variable '${g}' before declaration.`);return u!==""?(_.isDeclared=!0,U(_)):U(_)}function f(g,x=n){let u;typeof g=="number"?u=g:u=parseInt(g,16);let _=r.memory.find(b=>b.address===u);if(_===void 0)throw new Error(`At line: ${x}. No variable found at address '${u}'.`);return U(_)}function $(g){let x="";return t.Program.Config.enableLineLabels&&(x+=g+"_"),t.Program.Config.enableRandom===!0?x+Math.random().toString(36).substr(2,5):(r.jumpId++,x+r.jumpId.toString(36))}return a()}function Me(t){let e={Program:t,latestLoopId:[],jumpId:0,assemblyCode:"",currFunctionIndex:-1,currSourceLine:0,getNewJumpID:function(d){let f="";return this.Program.Config.enableLineLabels&&(f+=d+"_"),this.Program.Config.enableRandom===!0?f+Math.random().toString(36).substr(2,5):(this.jumpId++,f+this.jumpId.toString(36))},getLatestLoopID:function(){return this.latestLoopId[this.latestLoopId.length-1]},getLatestPureLoopID:function(){return this.latestLoopId.reduce((d,f)=>f.includes("loop")?f:d,"")}};function n(){return y(),t.memory.forEach(w),r(""),t.functions.findIndex(d=>d.name==="catch")!==-1&&r("ERR :__fn_catch"),e.currFunctionIndex=-1,t.Global.sentences.forEach(p),t.functions.find(d=>d.name==="main")===void 0?r("FIN"):r("JMP :__fn_main"),t.functions.forEach((d,f)=>{e.currFunctionIndex=f,r(""),h(),d.sentences!==void 0&&d.sentences.forEach(p),i()}),pe(t.Config.optimizationLevel,e.assemblyCode,t.memory.filter(d=>d.type==="label").map(d=>d.asmName))}function r(d,f=0){t.Config.outputSourceLineNumber===!0&&f!==0&&f!==e.currSourceLine&&(e.assemblyCode+=`^comment line ${f}
`,e.currSourceLine=f),e.assemblyCode+=d+`
`}function a(d,f=0){d.length!==0&&(t.Config.outputSourceLineNumber===!0&&f!==0&&f!==e.currSourceLine&&(e.assemblyCode+=`^comment line ${f}
`,e.currSourceLine=f),e.assemblyCode+=d)}function y(){t.Config.PName!==""&&r(`^program name ${t.Config.PName}`),t.Config.PDescription!==""&&r(`^program description ${t.Config.PDescription}`),t.Config.PActivationAmount!==""&&r("^program activationAmount "+t.Config.PActivationAmount),t.Config.PUserStackPages!==0&&r(`^program userStackPages ${t.Config.PUserStackPages}`),t.Config.PCodeStackPages!==0&&r(`^program codeStackPages ${t.Config.PCodeStackPages}`),t.Config.PCodeHashId!==""&&r(`^program codeHashId ${t.Config.PCodeHashId}`)}function w(d){d.address!==-1&&(r(`^declare ${d.asmName}`),d.hexContent!==void 0&&r(`^const SET @${d.asmName} #${d.hexContent}`))}function h(){let d=t.functions[e.currFunctionIndex].name;if(d==="main"||d==="catch"){r(`__fn_${d}:`,t.functions[e.currFunctionIndex].line),r("PCS");return}r(`__fn_${d}:`,t.functions[e.currFunctionIndex].line),t.functions[e.currFunctionIndex].argsMemObj.forEach(f=>{r(`POP @${f.asmName}`)})}function i(){let d=t.functions[e.currFunctionIndex].name;if(d==="main"||d==="catch"){e.assemblyCode.lastIndexOf("FIN")+4!==e.assemblyCode.length&&r("FIN");return}if(e.assemblyCode.lastIndexOf("RET")+4!==e.assemblyCode.length){if(t.functions[e.currFunctionIndex].declaration==="void"){r("RET");return}r("CLR @r0"),r("PSH $r0"),r("RET")}}function p(d){let f,$;switch(d.type){case"phrase":a(X(e,{InitialAST:d.CodeAST},d.line),d.line);break;case"ifEndif":f="__if"+e.getNewJumpID(d.line),$=X(e,{InitialAST:d.ConditionAST,initialJumpTarget:f+"_endif",initialJumpNotTarget:f+"_start"},d.line),a($,d.line),r(f+"_start:"),d.trueBlock.forEach(p),r(f+"_endif:");break;case"ifElse":f="__if"+e.getNewJumpID(d.line),$=X(e,{InitialAST:d.ConditionAST,initialJumpTarget:f+"_else",initialJumpNotTarget:f+"_start"},d.line),a($,d.line),r(f+"_start:"),d.trueBlock.forEach(p),r("JMP :"+f+"_endif"),r(f+"_else:"),d.falseBlock.forEach(p),r(f+"_endif:");break;case"while":f="__loop"+e.getNewJumpID(d.line),r(f+"_continue:",d.line),$=X(e,{InitialAST:d.ConditionAST,initialJumpTarget:f+"_break",initialJumpNotTarget:f+"_start"},d.line),a($),r(f+"_start:"),e.latestLoopId.push(f),d.trueBlock.forEach(p),e.latestLoopId.pop(),r("JMP :"+f+"_continue"),r(f+"_break:");break;case"do":f="__loop"+e.getNewJumpID(d.line),r(f+"_continue:",d.line),e.latestLoopId.push(f),d.trueBlock.forEach(p),e.latestLoopId.pop(),$=X(e,{InitialAST:d.ConditionAST,initialJumpTarget:f+"_break",initialJumpNotTarget:f+"_continue",initialIsReversedLogic:!0},d.line),a($),r(f+"_break:");break;case"for":f="__loop"+e.getNewJumpID(d.line),$=X(e,{InitialAST:d.threeSentences[0].CodeAST},d.line),a($,d.line),r(f+"_condition:"),$=X(e,{InitialAST:d.threeSentences[1].CodeAST,initialJumpTarget:f+"_break",initialJumpNotTarget:f+"_start"},d.line),a($,d.line),r(f+"_start:"),e.latestLoopId.push(f),d.trueBlock.forEach(p),e.latestLoopId.pop(),r(f+"_continue:"),$=X(e,{InitialAST:d.threeSentences[2].CodeAST},d.line),a($,d.line),r("JMP :"+f+"_condition"),r(f+"_break:");break;case"switch":{f="__switch"+e.getNewJumpID(d.line);let g=f;g+=d.hasDefault?"_default":"_break",$=X(e,{InitialAST:d.JumpTable,initialJumpTarget:f,initialJumpNotTarget:g,initialIsReversedLogic:!1},d.line),a($,d.line),e.latestLoopId.push(f),d.block.forEach(p),e.latestLoopId.pop(),r(f+"_break:");break}case"case":r(e.getLatestLoopID()+d.caseId+":",d.line);break;case"default":r(e.getLatestLoopID()+"_default:",d.line);break;case"label":r(d.id+":",d.line);break;case"struct":}}return n()}function Ae(t){let e=Number((BigInt(t.length)/512n+1n)*512n);t=t.padEnd(e,"0");let r=t.match(/[\s\S]{8}/g).map(f=>i(Number("0x"+f))),a=h(d(r,4*8*r.length)),y=BigInt(p(a[0]));return((BigInt(p(a[1]))<<32n)+y).toString(10);function h(f){let $=f.map(u=>p(u)),g=[],x;for(let u of $)x=u>>24&255,x|=(u>>16&255)<<8,x|=(u>>8&255)<<16,x|=(u&255)<<24,g.push(i(x));return g}function i(f){return f>=2147483648?f-4294967296:f}function p(f){return f<0?f+4294967296:f}function d(f,$){function g(z,K){let V=(z&65535)+(K&65535);return(z>>16)+(K>>16)+(V>>16)<<16|V&65535}function x(z,K){return z>>>K|z<<32-K}function u(z,K){return z>>>K}function _(z,K,V){return z&K^~z&V}function b(z,K,V){return z&K^z&V^K&V}function s(z){return x(z,2)^x(z,13)^x(z,22)}function l(z){return x(z,6)^x(z,11)^x(z,25)}function o(z){return x(z,7)^x(z,18)^u(z,3)}function c(z){return x(z,17)^x(z,19)^u(z,10)}let N=[1116352408,1899447441,-1245643825,-373957723,961987163,1508970993,-1841331548,-1424204075,-670586216,310598401,607225278,1426881987,1925078388,-2132889090,-1680079193,-1046744716,-459576895,-272742522,264347078,604807628,770255983,1249150122,1555081692,1996064986,-1740746414,-1473132947,-1341970488,-1084653625,-958395405,-710438585,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,-2117940946,-1838011259,-1564481375,-1474664885,-1035236496,-949202525,-778901479,-694614492,-200395387,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,-2067236844,-1933114872,-1866530822,-1538233109,-1090935817,-965641998],S=[1779033703,-1150833019,1013904242,-1521486534,1359893119,-1694144372,528734635,1541459225],F=new Array(64),C,T,I,A,O,v,M,E,H,J,Y,k;for(f[$>>5]|=128<<24-$%32,f[($+64>>9<<4)+15]=$,H=0;H<f.length;H+=16){for(C=S[0],T=S[1],I=S[2],A=S[3],O=S[4],v=S[5],M=S[6],E=S[7],J=0;J<64;J++)J<16?F[J]=f[J+H]:F[J]=g(g(g(c(F[J-2]),F[J-7]),o(F[J-15])),F[J-16]),Y=g(g(g(g(E,l(O)),_(O,v,M)),N[J]),F[J]),k=g(s(C),b(C,T,I)),E=M,M=v,v=O,O=g(A,Y),A=I,I=T,T=C,C=g(Y,k);S[0]=g(C,S[0]),S[1]=g(T,S[1]),S[2]=g(I,S[2]),S[3]=g(A,S[3]),S[4]=g(O,S[4]),S[5]=g(v,S[5]),S[6]=g(M,S[6]),S[7]=g(E,S[7])}return S}}function Oe(t){let e=[{opCode:240,name:"blank",size:0,argsType:[],regex:/^\s*$/},{opCode:241,name:"label",size:0,argsType:[],regex:/^\s*(\w+):\s*$/},{opCode:242,name:"comment",size:0,argsType:[],regex:/^\s*\^comment\s+(.*)/},{opCode:243,name:"declare",size:0,argsType:[],regex:/^\s*\^declare\s+(\w+)\s*$/},{opCode:244,name:"const",size:0,argsType:[],regex:/^\s*\^const\s+SET\s+@(\w+)\s+#([\da-f]{16})\b\s*$/},{opCode:245,name:"program",size:0,argsType:[],regex:/^\s*\^program\s+(\w+\b)(.*)$/},{opCode:1,name:"SET_VAL",size:13,argsType:["I","L"],regex:/^\s*SET\s+@(\w+)\s+#([\da-f]{16})\b\s*$/},{opCode:2,name:"SET_DAT",size:9,argsType:["I","I"],regex:/^\s*SET\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:3,name:"CLR_DAT",size:5,argsType:["I"],regex:/^\s*CLR\s+@(\w+)\s*$/},{opCode:4,name:"INC_DAT",size:5,argsType:["I"],regex:/^\s*INC\s+@(\w+)\s*$/},{opCode:5,name:"DEC_DAT",size:5,argsType:["I"],regex:/^\s*DEC\s+@(\w+)\s*$/},{opCode:6,name:"ADD_DAT",size:9,argsType:["I","I"],regex:/^\s*ADD\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:7,name:"SUB_DAT",size:9,argsType:["I","I"],regex:/^\s*SUB\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:8,name:"MUL_DAT",size:9,argsType:["I","I"],regex:/^\s*MUL\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:9,name:"DIV_DAT",size:9,argsType:["I","I"],regex:/^\s*DIV\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:10,name:"BOR_DAT",size:9,argsType:["I","I"],regex:/^\s*BOR\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:11,name:"AND_DAT",size:9,argsType:["I","I"],regex:/^\s*AND\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:12,name:"XOR_DAT",size:9,argsType:["I","I"],regex:/^\s*XOR\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:13,name:"NOT_DAT",size:5,argsType:["I"],regex:/^\s*NOT\s+@(\w+)\s*$/},{opCode:14,name:"SET_IND",size:9,argsType:["I","I"],regex:/^\s*SET\s+@(\w+)\s+\$\(\$(\w+)\)\s*$/},{opCode:15,name:"SET_IDX",size:13,argsType:["I","I","I"],regex:/^\s*SET\s+@(\w+)\s+\$\(\$(\w+)\s*\+\s*\$(\w+)\)\s*$/},{opCode:16,name:"PSH_DAT",size:5,argsType:["I"],regex:/^\s*PSH\s+\$(\w+)\s*$/},{opCode:17,name:"POP_DAT",size:5,argsType:["I"],regex:/^\s*POP\s+@(\w+)\s*$/},{opCode:18,name:"JMP_SUB",size:5,argsType:["J"],regex:/^\s*JSR\s+:(\w+)\s*$/},{opCode:19,name:"RET_SUB",size:1,argsType:[],regex:/^\s*RET\s*$/},{opCode:20,name:"IND_DAT",size:9,argsType:["I","I"],regex:/^\s*SET\s+@\(\$(\w+)\)\s+\$(\w+)\s*$/},{opCode:21,name:"IDX_DAT",size:13,argsType:["I","I","I"],regex:/^\s*SET\s+@\(\$(\w+)\s*\+\s*\$(\w+)\)\s+\$(\w+)\s*$/},{opCode:22,name:"MOD_DAT",size:9,argsType:["I","I"],regex:/^\s*MOD\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:23,name:"SHL_DAT",size:9,argsType:["I","I"],regex:/^\s*SHL\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:24,name:"SHR_DAT",size:9,argsType:["I","I"],regex:/^\s*SHR\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:25,name:"POW_DAT",size:9,argsType:["I","I"],regex:/^\s*POW\s+@(\w+)\s+\$(\w+)\s*$/},{opCode:26,name:"JMP_ADR",size:5,argsType:["J"],regex:/^\s*JMP\s+:(\w+)\s*$/},{opCode:27,name:"BZR_DAT",size:6,argsType:["I","B"],regex:/^\s*BZR\s+\$(\w+)\s+:(\w+)\s*$/},{opCode:30,name:"BNZ_DAT",size:6,argsType:["I","B"],regex:/^\s*BNZ\s+\$(\w+)\s+:(\w+)\s*$/},{opCode:31,name:"BGT_DAT",size:10,argsType:["I","I","B"],regex:/^\s*BGT\s+\$(\w+)\s+\$(\w+)\s+:(\w+)\s*$/},{opCode:32,name:"BLT_DAT",size:10,argsType:["I","I","B"],regex:/^\s*BLT\s+\$(\w+)\s+\$(\w+)\s+:(\w+)\s*$/},{opCode:33,name:"BGE_DAT",size:10,argsType:["I","I","B"],regex:/^\s*BGE\s+\$(\w+)\s+\$(\w+)\s+:(\w+)\s*$/},{opCode:34,name:"BLE_DAT",size:10,argsType:["I","I","B"],regex:/^\s*BLE\s+\$(\w+)\s+\$(\w+)\s+:(\w+)\s*$/},{opCode:35,name:"BEQ_DAT",size:10,argsType:["I","I","B"],regex:/^\s*BEQ\s+\$(\w+)\s+\$(\w+)\s+:(\w+)\s*$/},{opCode:36,name:"BNE_DAT",size:10,argsType:["I","I","B"],regex:/^\s*BNE\s+\$(\w+)\s+\$(\w+)\s+:(\w+)\s*$/},{opCode:37,name:"SLP_DAT",size:5,argsType:["I"],regex:/^\s*SLP\s+\$(\w+)\s*$/},{opCode:38,name:"FIZ_DAT",size:5,argsType:["I"],regex:/^\s*FIZ\s+\$(\w+)\s*$/},{opCode:39,name:"STZ_DAT",size:5,argsType:["I"],regex:/^\s*STZ\s+\$(\w+)\s*$/},{opCode:40,name:"FIN_IMD",size:1,argsType:[],regex:/^\s*FIN\s*$/},{opCode:41,name:"STP_IMD",size:1,argsType:[],regex:/^\s*STP\s*$/},{opCode:42,name:"SLP_IMD",size:1,argsType:[],regex:/^\s*SLP\s*$/},{opCode:43,name:"ERR_ADR",size:5,argsType:["J"],regex:/^\s*ERR\s+:(\w+)\s*$/},{opCode:44,name:"MDV_DAT",size:13,argsType:["I","I","I"],regex:/^\s*MDV\s+@(\w+)\s+\$(\w+)\s+\$(\w+)\s*$/},{opCode:48,name:"SET_PCS",size:1,argsType:[],regex:/^\s*PCS\s*$/},{opCode:50,name:"EXT_FUN",size:3,argsType:["F"],regex:/^\s*FUN\s+(\w+)\s*$/},{opCode:51,name:"EXT_FUN_DAT",size:7,argsType:["F","I"],regex:/^\s*FUN\s+(\w+)\s+\$(\w+)\s*$/},{opCode:52,name:"EXT_FUN_DAT_2",size:11,argsType:["F","I","I"],regex:/^\s*FUN\s+(\w+)\s+\$(\w+)\s+\$(\w+)\s*$/},{opCode:53,name:"EXT_FUN_RET",size:7,argsType:["F","I"],regex:/^\s*FUN\s+@(\w+)\s+(\w+)\s*$/},{opCode:54,name:"EXT_FUN_RET_DAT",size:11,argsType:["F","I","I"],regex:/^\s*FUN\s+@(\w+)\s+(\w+)\s+\$(\w+)\s*$/},{opCode:55,name:"EXT_FUN_RET_DAT_2",size:15,argsType:["F","I","I","I"],regex:/^\s*FUN\s+@(\w+)\s+(\w+)\s+\$(\w+)\s+\$(\w+)\s*$/},{opCode:127,name:"NOP",size:1,argsType:[],regex:/^\s*NOP\s*$/}],n=[{name:"get_A1",apiCode:256,opCode:53},{name:"get_A2",apiCode:257,opCode:53},{name:"get_A3",apiCode:258,opCode:53},{name:"get_A4",apiCode:259,opCode:53},{name:"get_B1",apiCode:260,opCode:53},{name:"get_B2",apiCode:261,opCode:53},{name:"get_B3",apiCode:262,opCode:53},{name:"get_B4",apiCode:263,opCode:53},{name:"set_A1",apiCode:272,opCode:51},{name:"set_A2",apiCode:273,opCode:51},{name:"set_A3",apiCode:274,opCode:51},{name:"set_A4",apiCode:275,opCode:51},{name:"set_A1_A2",apiCode:276,opCode:52},{name:"set_A3_A4",apiCode:277,opCode:52},{name:"set_B1",apiCode:278,opCode:51},{name:"set_B2",apiCode:279,opCode:51},{name:"set_B3",apiCode:280,opCode:51},{name:"set_B4",apiCode:281,opCode:51},{name:"set_B1_B2",apiCode:282,opCode:52},{name:"set_B3_B4",apiCode:283,opCode:52},{name:"clear_A",apiCode:288,opCode:50},{name:"clear_B",apiCode:289,opCode:50},{name:"clear_A_B",apiCode:290,opCode:50},{name:"copy_A_From_B",apiCode:291,opCode:50},{name:"copy_B_From_A",apiCode:292,opCode:50},{name:"check_A_Is_Zero",apiCode:293,opCode:53},{name:"check_B_Is_Zero",apiCode:294,opCode:53},{name:"check_A_equals_B",apiCode:295,opCode:53},{name:"swap_A_and_B",apiCode:296,opCode:50},{name:"OR_A_with_B",apiCode:297,opCode:50},{name:"OR_B_with_A",apiCode:298,opCode:50},{name:"AND_A_with_B",apiCode:299,opCode:50},{name:"AND_B_with_A",apiCode:300,opCode:50},{name:"XOR_A_with_B",apiCode:301,opCode:50},{name:"XOR_B_with_A",apiCode:302,opCode:50},{name:"add_A_to_B",apiCode:320,opCode:50},{name:"add_B_to_A",apiCode:321,opCode:50},{name:"sub_A_from_B",apiCode:322,opCode:50},{name:"sub_B_from_A",apiCode:323,opCode:50},{name:"mul_A_by_B",apiCode:324,opCode:50},{name:"mul_B_by_A",apiCode:325,opCode:50},{name:"div_A_by_B",apiCode:326,opCode:50},{name:"div_B_by_A",apiCode:327,opCode:50},{name:"MD5_A_to_B",apiCode:512,opCode:50},{name:"check_MD5_A_with_B",apiCode:513,opCode:53},{name:"HASH160_A_to_B",apiCode:514,opCode:50},{name:"check_HASH160_A_with_B",apiCode:515,opCode:53},{name:"SHA256_A_to_B",apiCode:516,opCode:50},{name:"check_SHA256_A_with_B",apiCode:517,opCode:53},{name:"Check_Sig_B_With_A",apiCode:518,opCode:53},{name:"get_Block_Timestamp",apiCode:768,opCode:53},{name:"get_Creation_Timestamp",apiCode:769,opCode:53},{name:"get_Last_Block_Timestamp",apiCode:770,opCode:53},{name:"put_Last_Block_Hash_In_A",apiCode:771,opCode:50},{name:"A_to_Tx_after_Timestamp",apiCode:772,opCode:51},{name:"get_Type_for_Tx_in_A",apiCode:773,opCode:53},{name:"get_Amount_for_Tx_in_A",apiCode:774,opCode:53},{name:"get_Timestamp_for_Tx_in_A",apiCode:775,opCode:53},{name:"get_Ticket_Id_for_Tx_in_A",apiCode:776,opCode:53},{name:"message_from_Tx_in_A_to_B",apiCode:777,opCode:50},{name:"B_to_Address_of_Tx_in_A",apiCode:778,opCode:50},{name:"B_to_Address_of_Creator",apiCode:779,opCode:50},{name:"Get_Code_Hash_Id",apiCode:780,opCode:53},{name:"B_To_Assets_Of_Tx_In_A",apiCode:781,opCode:50},{name:"get_Current_Balance",apiCode:1024,opCode:53},{name:"get_Previous_Balance",apiCode:1025,opCode:53},{name:"send_to_Address_in_B",apiCode:1026,opCode:51},{name:"send_All_to_Address_in_B",apiCode:1027,opCode:50},{name:"send_Old_to_Address_in_B",apiCode:1028,opCode:50},{name:"send_A_to_Address_in_B",apiCode:1029,opCode:50},{name:"add_Minutes_to_Timestamp",apiCode:1030,opCode:55},{name:"Get_Map_Value_Keys_In_A",apiCode:1031,opCode:53},{name:"Set_Map_Value_Keys_In_A",apiCode:1032,opCode:50},{name:"Issue_Asset",apiCode:1033,opCode:53},{name:"Mint_Asset",apiCode:1034,opCode:50},{name:"Distribute_To_Asset_Holders",apiCode:1035,opCode:50},{name:"Get_Asset_Holders_Count",apiCode:1036,opCode:53},{name:"Get_Activation_Fee",apiCode:1037,opCode:53},{name:"Put_Last_Block_GSig_In_A",apiCode:1038,opCode:50},{name:"Get_Asset_Circulating",apiCode:1039,opCode:53}],r={memory:[],code:[],labels:[],PName:"",PDescription:"",PActivationAmount:"",PUserStackPages:0,PCodeStackPages:0,PCodeHashId:"",PCodeHashIdLine:-1,assembledCode:"",codeHashId:"",bytecode:"",bytedata:""};function a(){let u=t.split(`
`);r.code=u.map((_,b)=>{for(let s of e){let l=s.regex.exec(_);if(l!==null)return w(l,s,b)}throw new Error(`assembler() error #1. No rule found to process line ${b}: "${_}".`)});do{r.labels=[];let _=0;r.code.forEach(b=>{b.address=_,b.station.length!==0&&r.labels.push({label:b.station,address:_}),_+=b.size})}while(!r.code.every(p));if(r.code.forEach(d),r.code.forEach($),r.bytedata=g(r.memory),r.codeHashId=Ae(r.bytecode),r.PCodeHashId==="0"&&(r.PCodeHashId=r.codeHashId,u[r.PCodeHashIdLine]=`^program codeHashId ${r.codeHashId}`),r.PCodeHashId!==""&&r.PCodeHashId!==r.codeHashId)throw new Error(`assembler() error #8. This compilation did not produce expected machine code hash id. Expected: ${r.PCodeHashId} Generated: ${r.codeHashId}.`);return r.assembledCode=u.join(`
`),f()}function y(u){let _=r.memory.findIndex(b=>b.name===u);return _===-1?r.memory.push({name:u,value:0n})-1:_}function w(u,_,b){let s=h();switch(s.source=u[0],_.opCode){case 240:return s;case 241:return s.station=u[1],s;case 242:return s;case 243:return y(u[1]),s;case 244:return r.memory[y(u[1])].value=BigInt("0x"+u[2]),s;case 245:switch(u[1]){case"name":r.PName=u[2].trim();break;case"description":r.PDescription=u[2].trim();break;case"activationAmount":r.PActivationAmount=u[2].trim();break;case"userStackPages":r.PUserStackPages=Number(u[2].trim());break;case"codeStackPages":r.PCodeStackPages=Number(u[2].trim());break;case"codeHashId":r.PCodeHashId=u[2].trim(),r.PCodeHashIdLine=b;break;default:throw new Error(`assembler() error #7. Unknow '^program' directive: '${u[1]}'`)}return s}s.size=_.size,s.instructionValues.push({type:"O",value:BigInt(_.opCode)});let l=0;for(_.opCode>=53&&_.opCode<=55&&(s.instructionValues.push({type:"F",value:BigInt(i(u[2],_.opCode,s.source))}),s.instructionValues.push({type:"I",value:BigInt(y(u[1]))}),l=2);l<_.argsType.length;l++)switch(_.argsType[l]){case"I":s.instructionValues.push({type:"I",value:BigInt(y(u[l+1]))});break;case"L":s.instructionValues.push({type:"L",value:BigInt("0x"+u[l+1])});break;case"B":s.branchLabel=u[l+1];break;case"J":s.jumpLabel=u[l+1];break;case"F":{s.instructionValues.push({type:"F",value:BigInt(i(u[1],_.opCode,s.source))});break}default:throw new Error("Internal error.")}return s}function h(){return{source:"",address:-1,station:"",size:0,instructionValues:[],compiledInstruction:""}}function i(u,_,b){let s=n.find(l=>l.name===u&&l.opCode===_);if(s)return s.apiCode;throw new Error(`assembler() error #2. API function not found. Instruction: '${b}'`)}function p(u,_){if(u.branchLabel!==void 0){let b=r.labels.find(l=>l.label===u.branchLabel);if(b===void 0)throw new Error(`assembler() error #4. Unknow label ${u.branchLabel}. Instruction: '${u.source}'`);let s=b.address-u.address;if(s<-128||s>127){let l=h();switch(l.source=`JUMP: ${u.source}`,l.size=5,l.jumpLabel=u.branchLabel,l.instructionValues.push({type:"O",value:0x1an}),u.instructionValues[0].value){case 0x1bn:u.instructionValues[0].value=0x1en;break;case 0x1en:u.instructionValues[0].value=0x1bn;break;case 0x1fn:u.instructionValues[0].value=0x22n;break;case 0x22n:u.instructionValues[0].value=0x1fn;break;case 0x21n:u.instructionValues[0].value=0x20n;break;case 0x20n:u.instructionValues[0].value=0x21n;break;case 0x23n:u.instructionValues[0].value=0x24n;break;case 0x24n:u.instructionValues[0].value=0x23n;break}if(u.branchLabel=`__${u.address}`,r.code[_+1].station.length!==0){let o=h();o.source=`JUMP: ${u.source}`,o.size=0,o.station=`__${u.address}`,r.code.splice(_+1,0,l,o)}else r.code[_+1].station=`__${u.address}`,r.code.splice(_+1,0,l);return!1}}return!0}function d(u){if(u.branchLabel!==void 0){let b=j(r.labels.find(s=>s.label===u.branchLabel)).address-u.address;u.instructionValues.push({type:"B",value:BigInt(b)}),delete u.branchLabel}else if(u.jumpLabel!==void 0){let _=r.labels.find(b=>b.label===u.jumpLabel);if(_===void 0)throw new Error(`assembler() error #5: Unknow jump label ${u.jumpLabel}. Source: "${u.source}"`);u.instructionValues.push({type:"J",value:BigInt(_.address)}),delete u.jumpLabel}}function f(){let u=0,_=0;r.PCodeStackPages>0?u=r.PCodeStackPages:(t.indexOf("JSR ")!==-1||t.indexOf("RET")!==-1)&&(u=1),r.PUserStackPages>0?_=r.PUserStackPages:(t.indexOf("POP ")!==-1||t.indexOf("PSH ")!==-1)&&(_=1);let b=Math.ceil(r.memory.length/32),s=Math.ceil(r.bytecode.length/(32*16)),l=(u+_+b+s)*1e7;return{DataPages:b,CodeStackPages:u,UserStackPages:_,CodePages:s,MinimumFeeNQT:l.toString(10),ByteCode:r.bytecode,MachineCodeHashId:r.codeHashId,ByteData:r.bytedata,Memory:r.memory.map(o=>o.name),Labels:r.labels,AssemblyCode:r.assembledCode,PName:r.PName,PDescription:r.PDescription,PActivationAmount:r.PActivationAmount}}function $(u){u.instructionValues.forEach(_=>{u.compiledInstruction+=x(_.value,_.type)}),r.bytecode+=u.compiledInstruction}function g(u){let _=-1,b="";for(let s=u.length-1;s>=0;s--)if(u[s].value!==0n){_=s;break}for(let s=0;s<=_;s++)b+=x(u[s].value,"L");return b}function x(u,_){let b=0,s="";switch(_){case"O":return u.toString(16).padStart(2,"0");case"B":return((256n+u)%256n).toString(16).padStart(2,"0");case"F":b=2;break;case"J":case"I":b=4;break;case"L":b=8}for(let l=0,o=256n;l<b;l++)s+=(u%o).toString(16).padStart(2,"0"),u=u/o;return s}return a()}var oe=class{constructor(e){this.Program={Global:{BuiltInFunctions:[],APIFunctions:[],macros:[],sentences:[]},functions:[],memory:[],typesDefinitions:[],Config:{compilerVersion:"2.0-dev",enableRandom:!1,enableLineLabels:!1,maxAuxVars:3,maxConstVars:0,optimizationLevel:2,reuseAssignedVar:!0,sourcecodeVersion:"",APIFunctions:!1,fixedAPIFunctions:!1,PName:"",PDescription:"",PActivationAmount:"",PUserStackPages:0,PCodeStackPages:0,PCodeHashId:"",outputSourceLineNumber:!1}},this.language=e.language,this.sourceCode=e.sourceCode}compile(){let e,n,r;if(this.MachineCode)return this;switch(this.language){case"C":e=ce(this.sourceCode),n=de(e),r=me(n),ue(this.Program,r),fe(this.Program),this.preAssemblyCode=Me(this.Program);break;case"Assembly":this.preAssemblyCode=this.sourceCode;break;default:throw new Error('Invalid usage. Language must be "C" or "Assembly".')}return this.MachineCode=Oe(this.preAssemblyCode),this}getAssemblyCode(){if(!this.MachineCode)throw new Error("Source code was not compiled.");return this.MachineCode.AssemblyCode}getMachineCode(){if(!this.MachineCode)throw new Error("Source code was not compiled.");return this.MachineCode}getCompilerVersion(){return this.Program.Config.compilerVersion}};typeof window!="undefined"&&typeof window.document!="undefined"&&(window.SmartC=oe);var rt=[{opCode:240,size:0,regex:/^\s*$/},{opCode:241,size:0,regex:/^\s*(\w+):\s*$/},{opCode:242,size:0,regex:/^(\s*\^comment)(\s+.*)/},{opCode:243,size:0,regex:/^(\s*\^declare)(\s+\w+\s*)$/},{opCode:244,size:0,regex:/^(\s*\^const)(\s+.*)/},{opCode:245,size:0,regex:/^(\s*\^program\s+\w+\b)(.*)$/},{opCode:1,size:13,regex:/^(\s*SET\s+)(@\w+\s+)(#[\da-f]{16}\b\s*)$/},{opCode:2,size:9,regex:/^(\s*SET\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:3,size:5,regex:/^(\s*CLR\s+)(@\w+\s*)$/},{opCode:4,size:5,regex:/^(\s*INC\s+)(@\w+\s*)$/},{opCode:5,size:5,regex:/^(\s*DEC\s+)(@\w+\s*)$/},{opCode:6,size:9,regex:/^(\s*ADD\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:7,size:9,regex:/^(\s*SUB\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:8,size:9,regex:/^(\s*MUL\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:9,size:9,regex:/^(\s*DIV\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:10,size:9,regex:/^(\s*BOR\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:11,size:9,regex:/^(\s*AND\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:12,size:9,regex:/^(\s*XOR\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:13,size:5,regex:/^(\s*NOT\s+)(@\w+\s*)$/},{opCode:14,size:9,regex:/^(\s*SET\s+)(@\w+)(\s+\$\()(\$\w+)(\)\s*)$/},{opCode:15,size:13,regex:/^(\s*SET\s+)(@\w+\s+)(\$\()(\$\w+)(\s*\+\s*)(\$\w+)(\)\s*)$/},{opCode:16,size:5,regex:/^(\s*PSH\s+)(\$\w+\s*)$/},{opCode:17,size:5,regex:/^(\s*POP\s+)(@\w+\s*)$/},{opCode:18,size:5,regex:/^(\s*JSR\s+)(:\w+\s*)$/},{opCode:19,size:1,regex:/^\s*RET\s*$/},{opCode:20,size:9,regex:/^(\s*SET\s+)(@\()(\$\w+)(\)\s+)(\$\w+\s*)$/},{opCode:21,size:13,regex:/^(\s*SET\s+)(@\()(\$\w+)(\s*\+\s*)(\$\w+)(\)\s+)(\$\w+\s*)$/},{opCode:22,size:9,regex:/^(\s*MOD\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:23,size:9,regex:/^(\s*SHL\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:24,size:9,regex:/^(\s*SHR\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:25,size:9,regex:/^(\s*POW\s+)(@\w+\s+)(\$\w+\s*)$/},{opCode:26,size:5,regex:/^(\s*JMP\s+)(:\w+\s*)$/},{opCode:27,size:6,regex:/^(\s*BZR\s+)(\$\w+\s+)(:\w+\s*)$/},{opCode:30,size:6,regex:/^(\s*BNZ\s+)(\$\w+\s+)(:\w+\s*)$/},{opCode:31,size:10,regex:/^(\s*BGT\s+)(\$\w+\s+)(\$\w+\s+)(:\w+\s*)$/},{opCode:32,size:10,regex:/^(\s*BLT\s+)(\$\w+\s+)(\$\w+\s+)(:\w+\s*)$/},{opCode:33,size:10,regex:/^(\s*BGE\s+)(\$\w+\s+)(\$\w+\s+)(:\w+\s*)$/},{opCode:34,size:10,regex:/^(\s*BLE\s+)(\$\w+\s+)(\$\w+\s+)(:\w+\s*)$/},{opCode:35,size:10,regex:/^(\s*BEQ\s+)(\$\w+\s+)(\$\w+\s+)(:\w+\s*)$/},{opCode:36,size:10,regex:/^(\s*BNE\s+)(\$\w+\s+)(\$\w+\s+)(:\w+\s*)$/},{opCode:37,size:5,regex:/^(\s*SLP\s+)(\$\w+\s*)$/},{opCode:38,size:5,regex:/^(\s*FIZ\s+)(\$\w+\s*)$/},{opCode:39,size:5,regex:/^(\s*STZ\s+)(\$\w+\s*)$/},{opCode:40,size:1,regex:/^\s*FIN\s*$/},{opCode:41,size:1,regex:/^\s*STP\s*$/},{opCode:42,size:1,regex:/^\s*SLP\s*$/},{opCode:43,size:5,regex:/^(\s*ERR\s+)(:\w+\s*)$/},{opCode:44,size:13,regex:/^(\s*MDV\s+)(@\w+\s+)(\$\w+\s+)(\$\w+\s*)$/},{opCode:48,size:1,regex:/^\s*PCS\s*$/},{opCode:50,size:3,regex:/^(\s*FUN\s+)(\w+\s*)$/},{opCode:51,size:7,regex:/^(\s*FUN\s+)(\w+\s+)(\$\w+\s*)$/},{opCode:52,size:11,regex:/^(\s*FUN\s+)(\w+\s+)(\$\w+\s+)(\$(\w+)\s*)$/},{opCode:53,size:7,regex:/^(\s*FUN\s+)(@\w+\s+)(\w+\s*)$/},{opCode:54,size:11,regex:/^\s*(FUN)\s+@(\w+)\s+(\w+)\s+\$(\w+)\s*$/},{opCode:55,size:15,regex:/^(\s*FUN\s+)(@\w+\s+)(\w+\s+)(\$\w+\s+)(\$\w+\s*)$/},{opCode:127,size:1,regex:/^\s*NOP\s*$/}],ie=[{fnCode:256,fnName:"get_A1"},{fnCode:257,fnName:"get_A2"},{fnCode:258,fnName:"get_A3"},{fnCode:259,fnName:"get_A4"},{fnCode:260,fnName:"get_B1"},{fnCode:261,fnName:"get_B2"},{fnCode:262,fnName:"get_B3"},{fnCode:263,fnName:"get_B4"},{fnCode:272,fnName:"set_A1"},{fnCode:273,fnName:"set_A2"},{fnCode:274,fnName:"set_A3"},{fnCode:275,fnName:"set_A4"},{fnCode:276,fnName:"set_A1_A2"},{fnCode:277,fnName:"set_A3_A4"},{fnCode:278,fnName:"set_B1"},{fnCode:279,fnName:"set_B2"},{fnCode:280,fnName:"set_B3"},{fnCode:281,fnName:"set_B4"},{fnCode:282,fnName:"set_B1_B2"},{fnCode:283,fnName:"set_B3_B4"},{fnCode:288,fnName:"clear_A"},{fnCode:289,fnName:"clear_B"},{fnCode:290,fnName:"clear_A_B"},{fnCode:291,fnName:"copy_A_From_B"},{fnCode:292,fnName:"copy_B_From_A"},{fnCode:293,fnName:"check_A_Is_Zero"},{fnCode:294,fnName:"check_B_Is_Zero"},{fnCode:295,fnName:"check_A_equals_B"},{fnCode:296,fnName:"swap_A_and_B"},{fnCode:297,fnName:"OR_A_with_B"},{fnCode:298,fnName:"OR_B_with_A"},{fnCode:299,fnName:"AND_A_with_B"},{fnCode:300,fnName:"AND_B_with_A"},{fnCode:301,fnName:"XOR_A_with_B"},{fnCode:302,fnName:"XOR_B_with_A"},{fnCode:320,fnName:"add_A_to_B"},{fnCode:321,fnName:"add_B_to_A"},{fnCode:322,fnName:"sub_A_from_B"},{fnCode:323,fnName:"sub_B_from_A"},{fnCode:324,fnName:"mul_A_by_B"},{fnCode:325,fnName:"mul_B_by_A"},{fnCode:326,fnName:"div_A_by_B"},{fnCode:327,fnName:"div_B_by_A"},{fnCode:512,fnName:"MD5_A_to_B"},{fnCode:513,fnName:"check_MD5_A_with_B"},{fnCode:514,fnName:"HASH160_A_to_B"},{fnCode:515,fnName:"check_HASH160_A_with_B"},{fnCode:516,fnName:"SHA256_A_to_B"},{fnCode:517,fnName:"check_SHA256_A_with_B"},{fnCode:518,fnName:"Check_Sig_B_With_A"},{fnCode:768,fnName:"get_Block_Timestamp"},{fnCode:769,fnName:"get_Creation_Timestamp"},{fnCode:770,fnName:"get_Last_Block_Timestamp"},{fnCode:771,fnName:"put_Last_Block_Hash_In_A"},{fnCode:772,fnName:"A_to_Tx_after_Timestamp"},{fnCode:773,fnName:"get_Type_for_Tx_in_A"},{fnCode:774,fnName:"get_Amount_for_Tx_in_A"},{fnCode:775,fnName:"get_Timestamp_for_Tx_in_A"},{fnCode:776,fnName:"get_Ticket_Id_for_Tx_in_A"},{fnCode:777,fnName:"message_from_Tx_in_A_to_B"},{fnCode:778,fnName:"B_to_Address_of_Tx_in_A"},{fnCode:779,fnName:"B_to_Address_of_Creator"},{fnCode:780,fnName:"Get_Code_Hash_Id"},{fnCode:1024,fnName:"get_Current_Balance"},{fnCode:1025,fnName:"get_Previous_Balance"},{fnCode:1026,fnName:"send_to_Address_in_B"},{fnCode:1027,fnName:"send_All_to_Address_in_B"},{fnCode:1028,fnName:"send_Old_to_Address_in_B"},{fnCode:1029,fnName:"send_A_to_Address_in_B"},{fnCode:1030,fnName:"add_Minutes_to_Timestamp"},{fnCode:1031,fnName:"Get_Map_Value_Keys_In_A"},{fnCode:1032,fnName:"Set_Map_Value_Keys_In_A"},{fnCode:1033,fnName:"Issue_Asset"},{fnCode:1034,fnName:"Mint_Asset"},{fnCode:1035,fnName:"Distribute_To_Asset_Holders"},{fnCode:1036,fnName:"Get_Asset_Holders_Count"},{fnCode:1037,fnName:"Get_Activation_Fee"},{fnCode:1038,fnName:"Put_Last_Block_GSig_In_A"}];function B(t,e){return`<span class='${e}'>${t}</span>`}var ae={Config:{preAll:"",preLine:"",postAll:"",postLine:"<br>",spanErrorClass:"asmError",spanLabelClass:"asmLabel",spanNumberClass:"asmNumber",spanCommentClass:"asmComment",spanVariableClass:"asmVariable",spanDirectiveClass:"asmDirective",spanInstructionClass:"asmInstruction"},colorText(t){let n=t.split(`
`).map((r,a)=>this.Config.preLine.replace(/%line%/g,(a+1).toString(10))+this.colorLine(r)+this.Config.postLine.replace(/%line%/g,(a+1).toString(10)));return this.Config.preAll+n.join("")+this.Config.postAll},colorLine(t){let e,n=null,r=rt.find(a=>a.regex.exec(t)!==null);if(r!==void 0&&(n=r.regex.exec(t)),n===null||r===void 0)return B(t,this.Config.spanErrorClass);switch(r.opCode){case 240:return t;case 241:return B(n[0],this.Config.spanLabelClass);case 242:return B(n[1],this.Config.spanDirectiveClass)+B(n[2],this.Config.spanCommentClass);case 243:return B(n[1],this.Config.spanDirectiveClass)+B(n[2],this.Config.spanVariableClass);case 244:return B(n[1],this.Config.spanDirectiveClass)+this.colorLine(n[2]);case 245:return B(n[1],this.Config.spanDirectiveClass)+n[2];case 1:return B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+B(n[3],this.Config.spanNumberClass);case 2:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 22:case 23:case 24:case 25:return B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+B(n[3],this.Config.spanVariableClass);case 3:case 4:case 5:case 13:case 16:case 17:case 37:case 38:case 39:return B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass);case 19:case 40:case 41:case 42:case 48:case 127:return B(n[0],this.Config.spanInstructionClass);case 14:return B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+n[3]+B(n[4],this.Config.spanVariableClass)+n[5];case 15:return B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+n[3]+B(n[4],this.Config.spanVariableClass)+n[5]+B(n[6],this.Config.spanVariableClass)+n[7];case 20:return B(n[1],this.Config.spanInstructionClass)+n[2]+B(n[3],this.Config.spanVariableClass)+n[4]+B(n[5],this.Config.spanVariableClass);case 21:return B(n[1],this.Config.spanInstructionClass)+n[2]+B(n[3],this.Config.spanVariableClass)+n[4]+B(n[5],this.Config.spanVariableClass)+n[6]+B(n[7],this.Config.spanVariableClass);case 18:case 26:case 43:return B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanLabelClass);case 27:case 30:return B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+B(n[3],this.Config.spanLabelClass);case 31:case 32:case 33:case 34:case 35:case 36:return B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+B(n[3],this.Config.spanVariableClass)+B(n[4],this.Config.spanLabelClass);case 44:return B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+B(n[3],this.Config.spanVariableClass)+B(n[4],this.Config.spanVariableClass);case 50:return e=n[2].trim(),ie.findIndex(a=>a.fnName===e)===-1?B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanErrorClass):B(n[0],this.Config.spanInstructionClass);case 51:return e=n[2].trim(),ie.findIndex(a=>a.fnName===e)===-1?B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanErrorClass)+B(n[3],this.Config.spanVariableClass):B(n[1]+n[2],this.Config.spanInstructionClass)+B(n[3],this.Config.spanVariableClass);case 52:return e=n[2].trim(),ie.findIndex(a=>a.fnName===e)===-1?B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanErrorClass)+B(n[3],this.Config.spanVariableClass)+B(n[4],this.Config.spanVariableClass):B(n[1]+n[2],this.Config.spanInstructionClass)+B(n[3],this.Config.spanVariableClass)+B(n[4],this.Config.spanVariableClass);case 53:return e=n[3].trim(),ie.findIndex(a=>a.fnName===e)===-1?B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+B(n[3],this.Config.spanErrorClass):B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+B(n[3],this.Config.spanInstructionClass);case 55:return e=n[3].trim(),ie.findIndex(a=>a.fnName===e)===-1?B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+B(n[3],this.Config.spanErrorClass)+B(n[4],this.Config.spanVariableClass)+B(n[5],this.Config.spanVariableClass):B(n[1],this.Config.spanInstructionClass)+B(n[2],this.Config.spanVariableClass)+B(n[3],this.Config.spanInstructionClass)+B(n[4],this.Config.spanVariableClass)+B(n[5],this.Config.spanVariableClass);case 54:default:return B(t,this.Config.spanErrorClass)}}};var q={resizerInterval:void 0,colorMode:"source",colorToggleTimeout:0,myCodeMirror:void 0,defaultFontFamily:void 0,defaultFontSize:void 0};window.onload=()=>{q.defaultFontFamily=document.body.style.fontFamily,q.defaultFontSize=document.body.style.fontSize,document.getElementById("help").addEventListener("click",Ue),document.getElementById("compile").addEventListener("click",ke),document.getElementById("save").addEventListener("click",He),document.getElementById("load").addEventListener("click",Ge),document.getElementById("cbx_nostalgic_font").addEventListener("change",ot),document.getElementById("cbx_disable_auto_save").addEventListener("change",st),document.getElementById("copy_assembly").addEventListener("click",()=>navigator.clipboard.writeText(document.getElementById("assembly_output").innerText));let t=document.getElementById("tab-1-content");q.myCodeMirror=CodeMirror(t,{value:"",lineNumbers:!0,lineWrapping:!0,matchBrackets:!0,mode:"text/x-csrc",indentUnit:4,autoCloseBrackets:!0,showTrailingSpace:!0,foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"]}),q.myCodeMirror.setOption("theme","abcdef");let e=new oe({language:"C",sourceCode:`#pragma version dev
#pragma maxAuxVars 1
long a, b, c; a=b/~c;`});try{e.compile(),e.getMachineCode().MachineCodeHashId==="7488355358104845254"?document.getElementById("status_output").innerHTML='<span class="msg_success">Start up test done!</span>':document.getElementById("status_output").innerHTML='<span class="msg_failure">Start up test failed...</span>'}catch{document.getElementById("status_output").innerHTML='<span class="msg_failure">Start up test crashed...</span>'}document.title=document.title.replace("%version%",e.getCompilerVersion());let n=document.getElementById("h1_title");n.innerHTML=n.innerHTML.replace("%version%",e.getCompilerVersion()),shortcut.add("F1",Ue),shortcut.add("F2",He),shortcut.add("F4",ke),shortcut.add("F8",Ge),at()};function at(){localStorage.getItem("disableAutoSave")!=="true"?(q.myCodeMirror.setValue(localStorage.getItem("program")),q.autoSaveTimer=setTimeout(Ne,15e3),document.getElementById("cbx_disable_auto_save").checked=!1):document.getElementById("cbx_disable_auto_save").checked=!0,localStorage.getItem("nostalgic")==="true"?(document.getElementById("cbx_nostalgic_font").checked=!0,Pe()):document.getElementById("cbx_nostalgic_font").checked=!1}function ke(){let t=q.myCodeMirror.getValue(),e=new Date;try{let n=new oe({language:"C",sourceCode:t});n.compile();let r=n.getAssemblyCode(),a=n.getMachineCode();ae.Config.preAll="",ae.Config.preAll="",ae.Config.preLine="",ae.Config.postLine="<br>",document.getElementById("assembly_output").innerHTML=ae.colorText(r);let y=new Date,w=`Compile sucessfull!!!<br>Done at ${y.getHours()}:${y.getMinutes()}:${y.getSeconds()} in ${y-e} ms.`;w+=`<br>Machine code hash ID: ${a.MachineCodeHashId}`,ct(w),w+=`

`+JSON.stringify(a,null,"    "),document.getElementById("status_output").innerHTML=w}catch(n){document.getElementById("assembly_output").innerHTML="";let r=`Compile failed<br><br>${n.message}`;lt(r),r+=`

`+n.stack,document.getElementById("status_output").innerHTML=r;let a=/^At line: (\d+)/.exec(n.message);a!==null&&(q.myCodeMirror.addLineClass(Number(a[1]-1),"background","asmError"),q.myCodeMirror.scrollIntoView({line:a[1]-1,ch:0}),setTimeout(()=>{q.myCodeMirror.removeLineClass(Number(a[1]-1),"background","asmError")},1e4))}}function Ne(){let t=q.myCodeMirror.getValue();localStorage.setItem("program",t),q.autoSaveTimer=setTimeout(Ne,15e3)}function Ue(){let t=document.getElementById("help").getAttribute("data-content");window.open(t,"_blank").focus()}function He(){let t=document.getElementById("save"),e=t.innerHTML,n=t.getAttribute("data-clicked");localStorage.setItem("program",q.myCodeMirror.getValue()),setTimeout(()=>{t.innerHTML=e},5e3),t.innerHTML=n}function Ge(){let t=document.getElementById("load"),e=t.innerHTML,n=t.getAttribute("data-clicked");q.myCodeMirror.setValue(localStorage.getItem("program")),q.myCodeMirror.focus(),setTimeout(()=>{t.innerHTML=e},5e3),t.innerHTML=n}function st(t){t.target.checked?(clearTimeout(q.autoSaveTimer),localStorage.setItem("disableAutoSave","true")):(q.autoSaveTimer=setTimeout(Ne,15e3),localStorage.setItem("disableAutoSave","false"))}function ot(t){t.target.checked?Pe():it()}function Pe(){document.body.style.fontFamily="DOS",document.body.style.lineHeight="1",localStorage.setItem("nostalgic","true")}function it(){document.body.style.fontFamily=q.defaultFontFamily,document.body.style.fontSize=q.defaultFontSize,document.body.style.lineHeight="",localStorage.removeItem("nostalgic")}function lt(t){document.getElementById("modal_text").innerHTML=t;let e=document.querySelector(".tui-overlap");if(!e)return;e.classList.add("active");let n=document.getElementById("modal");n&&n.classList.add("active"),document.getElementById("close-modal").focus()}function ct(t){document.getElementById("modal2_text").innerHTML=t;let e=document.querySelector(".tui-overlap");if(!e)return;e.classList.add("active");let n=document.getElementById("modal2");n&&n.classList.add("active"),document.getElementById("close-modal2").focus()}})();
